{"version":3,"file":"js/6150-legacy.6f127b9d.js","mappings":"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","sources":["webpack://livego/./src/common/liveStreamJsonRpcService.js","webpack://livego/./src/common/util.js","webpack://livego/./src/views/WEB/liveStream/handler/hostLiveComuHandler.js","webpack://livego/./src/views/WEB/liveStream/handler/hostLiveHandler.js","webpack://livego/./src/views/WEB/liveStream/testJsonRpc.vue?5439","webpack://livego/src/views/WEB/liveStream/testJsonRpc.vue","webpack://livego/./src/views/WEB/liveStream/testJsonRpc.vue?38bb","webpack://livego/./src/views/WEB/liveStream/testJsonRpc.vue"],"sourcesContent":["import jsonRpc from 'kurento-jsonrpc'\nimport {\n   jsonRpcUrl\n} from \"@/config/jsonRpc/jsonRpcEnv\";\n\nexport default {\n    DEBUG:false,\n    jsonRpcUrl: jsonRpcUrl,\n    connected: false,\n    jsonRpcClientWs: null,\n    sessionId: null,\n    roomId: '',\n    initMethod: '',\n    userId: null,\n    vue: null,\n    accessType:'no',\n    userName:'',\n    userEmail:'',\n    init(params, vueObj,debug) {\n        this.DEBUG = debug;\n        if (!params.uid) return;\n        if (!params.roomId) return;\n        if (this.connected) return;\n        if (params.roomHost == 'yes') {\n            this.initMethod = 'makeLiveRoom'\n        } else {\n            this.initMethod = 'joinRoom'\n            if(params.accessType)this.accessType = params.accessType;\n            if(params.name)this.userName = params.name;\n            if(params.email)this.userEmail= params.email;\n\n        }\n        this.roomId = params.roomId;\n        this.vue = vueObj;\n        this.userId = params.uid;\n\n\n        //setTimeout(()=>{\n            this.setConnect();\n        //},500)\n\n    },\n    setConnect() {\n        if(process.env.NODE_ENV =='development') {\n            return;\n        }\n\n        let protocol = 'wss';\n        if (this.DEBUG) {\n            protocol = 'ws';\n        }\n        const ws_uri = protocol+'://' + this.jsonRpcUrl + '/jsonRpc';\n        const configuration = {\n            hearbeat: 5000,\n            sendCloseMessage: false,\n            ws: {\n                uri: ws_uri,\n                useSockJS: false,\n                onconnected: () => {\n                    this.connected = true;\n                    this.socketInit();\n                },\n                ondisconnect: this.disconnectCallback(this),\n                onreconnected: this.connectReCallback(this),\n            },\n            rpc: {\n                requestTimeout: 5000,\n                sendResponse: (params) => {\n                    this.callMessage(params)\n                },\n            }\n        };\n        this.jsonRpcClientWs = new jsonRpc.clients.JsonRpcClient(configuration);\n\n    },\n\n    connectReCallback(obj) {\n        obj.connected = true;\n    },\n    disconnectCallback(obj) {\n        obj.connected = false;\n    },\n    close(type) {\n\n        let params = {};\n        params.responseMethod = \"liveClose\";\n        if(process.env.NODE_ENV =='development') {\n            params.sendMethod = \"liveClose\";\n            params.userType = type;\n            console.log(params,'-------- vue iframe send -----------------')\n            const frame = document.getElementById(\"testIframe\").contentWindow;\n            frame.postMessage(params, \"http://localhost\");\n            return;\n        }\n        if (!this.connected) return;\n        if (!this.userId) return;\n        if (!this.roomId) return;\n        params.uid = this.userId;\n        params.sessionId = this.sessionId;\n        params.userType = type;\n        params.roomId = this.roomId;\n\n        this.jsonRpcClientWs.send(\"liveClose\", params, function (error, response) {\n            if (error) {\n                console.log(error);\n            } else {\n                console.log(\"--succ--\");\n                console.log(response);\n            }\n        });\n    },\n    callMessage(params) {\n\n        switch (params.responseMethod) {\n            case 'forceHostOut':\n                this.vue.$eventBus.$emit('modalOpen', {\n                    message: '다른곳에서 강제 방송정지 시켰습니다',\n                    doAction: () => {\n                        window.close();\n                    }\n\n                });\n                break;\n            default:\n                this.vue.$eventBus.$emit('rpcJsonTransfer',params);\n                break;\n\n        }\n\n    },\n    socketInit() {\n        let params = {\n            interval: 5000,\n            operation: \"connect\",\n            uid: this.userId,\n            accessType:this.accessType,\n            roomId: this.roomId,\n            name:this.userName,\n            email:this.userEmail,\n            responseMethod:this.initMethod\n        };\n\n        this.jsonRpcClientWs.send(this.initMethod, params, (error, response) => {\n            if (error) {\n                console.log(error);\n            } else {\n                console.log(response, 'succ');\n                this.sessionId = response.sessionId;\n                switch (response.map.result) {\n                    case 'double':\n                        if (this.initMethod == 'makeLiveRoom') {\n                            this.vue.$eventBus.$emit('modalOpen', {\n                                message: '다른곳에서 이미 방송중입니다',\n                                doAction: () => {\n                                    window.close();\n                                },\n                            });\n\n                        } else {\n                            this.vue.$eventBus.$emit('modalOpen', {\n                                message: '동일 컴퓨터에서 이미 동일한 방에 접근 중입니다',\n                                doAction: () => {\n                                    window.close();\n                                }\n\n                            });\n\n                        }\n\n                        break;\n                    case 'fail':\n                        this.vue.$eventBus.$emit('modalOpen', {\n                            message: '잘못된 접근입니다',\n                            doAction: () => {\n                                window.close();\n                            }\n\n                        });\n                        break;\n                    case 'success':\n                        if (this.initMethod == 'makeLiveRoom' && response.map.waitUsers) {\n                            const sendParams = {\n                                responseMethod:'makeLiveRoomWaitUsers',\n                                waitUsers:response.map.waitUsers,\n                            }\n                            this.vue.$eventBus.$emit('rpcJsonTransfer',sendParams);\n\n                        }\n                        break;\n                }\n\n            }\n\n        });\n\n    },\n    send(params, func) {\n\n        if(process.env.NODE_ENV =='development') {\n            const frame = document.getElementById(\"testIframe\").contentWindow;\n            frame.postMessage(params, \"http://localhost\");\n            return;\n        }\n        if (!this.sessionId) return;\n        params.uid = this.userId;\n        params.sessionId = this.sessionId;\n        params.roomId = this.roomId;\n        console.log(params,'--------iframe send -----------------')\n\n        this.jsonRpcClientWs.send(params.sendMethod, params, function (error, response) {\n            if (error) {\n                console.log(error);\n            } else {\n                console.log(response);\n                func(response);\n            }\n        });\n    },\n    forceHostOut() {\n        if(process.env.NODE_ENV =='development') {\n            const frame = document.getElementById(\"testIframe\").contentWindow;\n            frame.postMessage(params, \"http://localhost\");\n            return;\n        }\n        if (!this.sessionId) return;\n        let params = {\n            uid: this.userId,\n            roomId:this.roomId,\n            sessionId: this.sessionId,\n            responseMethod: 'forceHostOut'\n        };\n        this.jsonRpcClientWs.send(\"forceHostOut\", params, function (error, response) {\n            if (error) {\n                console.log(error);\n            } else {\n                console.log(response);\n            }\n        });\n    },\n    post(frm, afterFunc) {\n\n    }\n\n\n}\n","import JQ from \"jquery\";\r\n\r\nexport default {\r\n    errorPosiFlag:false,\r\n    nl2br(text) {\r\n        return text.value.replace(/(\\n|\\r\\n)/g, '<br>');\r\n\r\n    },\r\n    nl2brContent(text) {\r\n        text = text.toString();\r\n        text = text.replace(/(\\n|\\r\\n)/g, '<br>');\r\n        return text.replace(/(<br><br>)/g, '<br>');\r\n    },\r\n    stripTags(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value;\r\n        let text = div.textContent || div.innerText || \"\";\r\n\r\n        return text;\r\n\r\n    },\r\n    stripTagsNotEm(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value.replace(/<em>/ig,'{em}').replace(/<\\/em>/ig,'{/em}')\r\n        let text = div.textContent || div.innerText || \"\";\r\n        let result = text.replace(/{em}/ig,'<em>').replace(/{\\/em}/ig,'</em>')\r\n        return result;\r\n\r\n    },\r\n    email(value) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return pattern.test(value)\r\n    },\r\n    numericByPrice(value) {\r\n        if(value==0)return false;\r\n        if(value) {\r\n\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            return isNaN(targetPrice);\r\n        } else return true;\r\n    },\r\n    numeric(value) {\r\n        return isNaN(value);\r\n    },\r\n    parseNumber(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let number = value.replace(/,/gi, '');\r\n            number = number.toString().replace(/-/gi, '');\r\n            return parseInt(number);\r\n\r\n        } else return 0;\r\n    },\r\n    price(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            if (!this.numeric(targetPrice)) {\r\n                return this.numberFormat(targetPrice);\r\n\r\n            } else return false;\r\n        } else return false;\r\n    },\r\n    br2nl(text) {\r\n        return text.replace(/(<br>|<br\\/>|<br \\/>)/g, '\\r');\r\n    },\r\n    numberFormat(number) {\r\n        if(!number)return 0;\r\n        if(isNaN(number)) {\r\n            number = number.toString().replace(/-/gi, '');\r\n        }\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    fNumberFormat(number) {\r\n        number = number.toString().replace(/-/gi, '');\r\n        number = number.toString().replace(/,/gi, '');\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    getStrCut(string,length) {\r\n        if(string.length >= length){\r\n            return string.substr(0,length)+\"..\";\r\n        } else return string;\r\n    },\r\n    errorPosition(baseEle,targetEle,func) {\r\n        const baseElement = (baseEle=='base')?JQ('body'):JQ(baseEle);\r\n        const height = JQ(baseElement).height();\r\n\r\n        const top = JQ(targetEle).offset().top;\r\n\r\n        const stTop = (top>0)?height - top + 200:height + top - 200;\r\n        if(baseEle=='base') {\r\n\r\n            JQ('html,body').animate({\r\n                scrollTop: (top - 50)\r\n            }, 100, () => {\r\n                if(this.errorPosiFlag) {\r\n                    this.errorPosiFlag = false;\r\n                    return\r\n                }\r\n                func();\r\n                this.errorPosiFlag = true;\r\n            })\r\n        } else {\r\n            JQ(baseElement).animate({\r\n                scrollTop:stTop\r\n\r\n            }, 100, () => {\r\n                func();\r\n            })\r\n        }\r\n    },\r\n\r\n}\r\n","import AUTH from '@/config/web/auth'\r\nimport UTIL from '@/common/util'\r\n\r\nimport jsonRpcService from \"@/common/liveStreamJsonRpcService\";\r\n\r\nimport JQ from \"jquery\";\r\n\r\n\r\nexport default {\r\n    id: '',\r\n    uid: '',\r\n    vue: null,\r\n    streamRoomId: '',\r\n    init(params, vue) {\r\n        this.id = params.id;\r\n        this.uid = params.uid;\r\n        this.streamRoomId = this.id + '_' + this.uid;\r\n        this.vue = vue;\r\n    },\r\n    sendToUser(event, func) {\r\n        let sendParams = {};\r\n        switch (event.page) {\r\n            case 'exam':\r\n                if (event.action == 'sendProblem') {\r\n                    this.sendRpcData(event.no, 'insertProblem', func);\r\n                    sendParams.userReponseParams = {\r\n                        parentId: this.id,\r\n                        no: event.no,\r\n                        type: 'insertProblem'\r\n                    };\r\n                    sendParams.userReponseShow = true;\r\n                }\r\n                sendParams.screenShow = 'close';\r\n                sendParams.close = 'loadExamShow';\r\n                break;\r\n            case 'immExam':\r\n                if (event.action == 'sendProblem') {\r\n                    this.sendRpcData(event.no, 'insertProblem', func);\r\n                    sendParams.userReponseParams = {\r\n                        parentId: this.id,\r\n                        no: event.no,\r\n                        type: 'insertProblem'\r\n                    };\r\n                    sendParams.userReponseShow = true;\r\n                }\r\n                sendParams.screenShow = 'close';\r\n                sendParams.close = 'loadImmExamShow';\r\n\r\n                break;\r\n            case 'quiz':\r\n                if (event.action == 'sendQuiz') {\r\n                    this.sendRpcData(event.no, 'insertQuiz', func);\r\n                    sendParams.userReponseParams = {\r\n                        parentId: this.id,\r\n                        no: event.no,\r\n                        type: 'insertQuiz'\r\n                    };\r\n                    sendParams.userReponseShow = true;\r\n                }\r\n                sendParams.screenShow = 'close';\r\n                sendParams.close = 'loadQuizShow';\r\n\r\n                break;\r\n            case 'poll':\r\n                if (event.action == 'sendPoll') {\r\n                    this.sendRpcData(event.no, 'insertPoll', func);\r\n                    sendParams.userReponseParams = {\r\n                        parentId: this.id,\r\n                        no: event.no,\r\n                        type: 'insertPoll'\r\n                    };\r\n                    sendParams.userReponseShow = true;\r\n                }\r\n                sendParams.screenShow = 'close';\r\n                sendParams.close = 'loadPollShow';\r\n                break;\r\n            case 'vote':\r\n                if (event.action == 'sendVote') {\r\n                    this.sendRpcData(event.no, 'insertVote', func);\r\n                    sendParams.userReponseParams = {\r\n                        parentId: this.id,\r\n                        no: event.no,\r\n                        type: 'insertVote'\r\n                    };\r\n                    sendParams.userReponseShow = true;\r\n                }\r\n                sendParams.screenShow = 'close';\r\n                sendParams.close = 'loadPollShow';\r\n                break;\r\n            case 'userResponse':\r\n                if (event.action == 'forceEnd') {\r\n                    let msg = '';\r\n                    switch (event.gtype) {\r\n                        case 'insertProblem':\r\n                            msg = '시험을';\r\n                            break;\r\n                        case 'insertPoll':\r\n                            msg = '설문조사를';\r\n                            break;\r\n                        case 'insertVote':\r\n                            msg = '투표를';\r\n                            break;\r\n                        case 'insertQuiz':\r\n                            msg = '간단퀴즈를';\r\n                            break;\r\n                    }\r\n                    let message = {\r\n                        type: 'confirm',\r\n                        message: msg + ' 강제 종료하시겠습니까?',\r\n                        doAction: () => {\r\n                            this.modalResponse('forceResponseEnd');\r\n                            JQ('#app-response').hide();\r\n                            func({cmd: 'responseClose'})\r\n\r\n                        }\r\n                    };\r\n                    this.vue.$eventBus.$emit('modalOpen', message);\r\n\r\n                } else if (event.action == 'barHide') {\r\n                    switch (event.gtype) {\r\n                        case 'insertProblem':\r\n                            sendParams.responseTitle = '시험 진행중';\r\n\r\n                            break;\r\n                        case 'insertPoll':\r\n                            sendParams.responseTitle = '설문 진행중';\r\n                            break;\r\n                        case 'insertVote':\r\n                            sendParams.responseTitle = '투표 진행중';\r\n                            break;\r\n                        case 'insertQuiz':\r\n                            sendParams.responseTitle = '간단퀴즈 진행중';\r\n                            break;\r\n                    }\r\n                    JQ('#app-response').hide();\r\n                    /*\r\n\r\n                    if (this.timeResponseInterval) {\r\n                        this.responseTimeInfo = '00:00:00'\r\n                        clearInterval(this.timeResponseInterval);\r\n                    }\r\n                    let rtimeCnt = 0;\r\n\r\n                    this.timeResponseInterval = setInterval(() => {\r\n                        this.responseTimeInfo = this.setTimeVal(rtimeCnt);\r\n                        rtimeCnt++;\r\n\r\n                    }, 1000);\r\n                    */\r\n                    JQ('#menu-response-box').show();\r\n                } else {\r\n                    JQ('#app-response').hide();\r\n                    sendParams.userReponseShow = 'close';\r\n                }\r\n                break;\r\n            case 'fileView':\r\n                sendParams.close = 'loadFileShow';\r\n                sendParams.fileNo = 'empty';\r\n                sendParams.screenShow = 'close';\r\n                break;\r\n            case 'data':\r\n                if (event.action == 'share') {\r\n                    sendParams.fileNo = event.fdata.id;\r\n                    sendParams.open = 'loadFileShow';\r\n                    let rpcParams = {\r\n                        sendMethod: 'insertFdata',\r\n                        data: event.fdata.id,\r\n                        responseMethod: 'insertFdata',\r\n                    }\r\n                    jsonRpcService.send(rpcParams, (res) => {\r\n                       // func({cmd: 'responseOpen', data: res});\r\n                    });\r\n                } else {\r\n                    sendParams.screenShow = 'close';\r\n                }\r\n                sendParams.close = 'loadDataShow';\r\n\r\n        }\r\n        return sendParams;\r\n    },\r\n    sendRpcData(no, type, func) {\r\n        let rpcParams = {\r\n            sendMethod: type,\r\n            data: no,\r\n            responseMethod: type,\r\n        }\r\n        jsonRpcService.send(rpcParams, (res) => {\r\n            func({cmd: 'responseOpen', data: res});\r\n        });\r\n        let msg;\r\n        switch (type) {\r\n            case 'insertProblem':\r\n                msg = '시험을 출제하였습니다';\r\n                break;\r\n            case 'insertPoll':\r\n                msg = '설문조사를 시작하였습니다';\r\n                break;\r\n            case 'insertVote':\r\n                msg = '투료를 시작하였습니다';\r\n                break;\r\n            case 'insertQuiz':\r\n                msg = '간단퀴즈를 출제하였습니다';\r\n                break;\r\n        }\r\n        JQ('#app-response').show();\r\n        let message = {\r\n            type: 'timeout',\r\n            message: msg,\r\n        };\r\n        this.vue.$eventBus.$emit('modalOpen', message);\r\n\r\n    },\r\n    rpcSend(params) {\r\n        jsonRpcService.send(params, (res) => {\r\n\r\n        });\r\n    },\r\n    modalResponse(type) {\r\n        switch (type) {\r\n            case 'forceResponseEnd':\r\n                let rpcParams = {\r\n                    sendMethod: 'forceResponseEnd',\r\n                    data: 'none',\r\n                    responseMethod: 'forceResponseEnd',\r\n                }\r\n                jsonRpcService.send(rpcParams, () => {\r\n                });\r\n\r\n                break;\r\n\r\n        }\r\n    },\r\n\r\n}\r\n","import AUTH from '@/config/web/auth'\r\nimport UTIL from '@/common/util'\r\nimport apiService from \"@/config/web/apiService\";\r\nimport {\r\n    API_URL_BROADCAST_UPDATE_HOST_START_TIME,\r\n    API_URL_BROADCAST_HOST_LIVE_INFO,\r\n    API_URL_BROADCAST_LIVE_UPDATE,\r\n    API_URL_BROADCAST_LIVE_END,\r\n    API_URL_BROADCAST_LIVE_USER_OUT,\r\n    API_URL_BROADCAST_LIVE_END_USER_INFO,\r\n    API_URL_BROADCAST_LIVE_UPDATE_CHAT\r\n} from \"@/config/web/urls\";\r\nimport jsonRpcService from \"@/common/liveStreamJsonRpcService\";\r\nimport JQ from \"jquery\";\r\n\r\n\r\nexport default {\r\n    DEBUG: false,\r\n    id: '',\r\n    uid: '',\r\n    streamRoomId: '',\r\n    liveIngTimeKey: '',\r\n    liveIngTime: '',\r\n    vue: null,\r\n    chatProcess: false,\r\n    init(params, vueObj, DEBUG) {\r\n        this.DEBUG = DEBUG;\r\n        this.id = params.id;\r\n        this.uid = params.uid;\r\n        this.streamRoomId = this.id + '_' + this.uid;\r\n        this.liveIngTimeKey = this.streamRoomId + '_liveStramHostTime';\r\n        this.vue = vueObj;\r\n\r\n    },\r\n    getLiveInfo(func) {\r\n\r\n        const frm = {id: this.id}\r\n        apiService.post(API_URL_BROADCAST_HOST_LIVE_INFO, frm, (ret) => {\r\n            let nowDate = new Date();\r\n            if (ret.info.start_time) {\r\n                nowDate = new Date(ret.info.start_time);\r\n\r\n\r\n            }\r\n            this.liveIngTime = parseInt(nowDate.getTime());\r\n            func(ret);\r\n\r\n        })\r\n    },\r\n    getStartTime() {\r\n        let ingTime = parseInt(this.liveIngTime);\r\n        let nowDate = new Date();\r\n        let timeCnt = (nowDate.getTime() - ingTime) / 1000;\r\n        timeCnt = Math.floor(timeCnt);\r\n        if (timeCnt < 0) timeCnt = 0;\r\n        return timeCnt;\r\n    },\r\n    updateLiveTime() {\r\n\r\n    },\r\n    liveTimeRemove() {\r\n    },\r\n    joinSocketLiveStream() {\r\n        let frm = {\r\n            uid: this.uid,\r\n            roomId: this.streamRoomId,\r\n            roomHost: 'yes',\r\n        }\r\n\r\n        jsonRpcService.init(frm, this.vue, this.DEBUG);\r\n\r\n        const params = {id: this.id.toString()}\r\n        apiService.post(API_URL_BROADCAST_UPDATE_HOST_START_TIME, params, (ret) => {\r\n\r\n        })\r\n\r\n    },\r\n    setTimeVal(sec) {\r\n        sec = parseInt(sec);\r\n        if (isNaN(sec)) return '00:00:00';\r\n        if (sec < 0) return '00:00:00';\r\n        let resultSec = sec % 60;\r\n        resultSec = Math.floor(resultSec)\r\n        let min = sec / 60;\r\n        min = Math.floor(min);\r\n        let resultMin;\r\n        if (min >= 60) {\r\n            resultMin = min % 60;\r\n        } else {\r\n            resultMin = min;\r\n        }\r\n        resultMin = Math.floor(resultMin);\r\n        let hour = min / 60;\r\n        hour = Math.floor(hour);\r\n        let resultHour;\r\n        let day = '';\r\n        if (hour >= 24) {\r\n            resultHour = hour % 24;\r\n        } else {\r\n            resultHour = hour;\r\n        }\r\n        resultHour = Math.floor(resultHour);\r\n        return day + this.zf(resultHour) + ':' + this.zf(resultMin) + ':' + this.zf(resultSec);\r\n    },\r\n    zf(date) {\r\n        date = parseInt(date);\r\n        if (date < 10) {\r\n            return \"0\" + date;\r\n        } else return date;\r\n    },\r\n    doEndMeetingActive(mobile) {\r\n        if(mobile) {\r\n            this.mobileRecodeChatAct()\r\n        } else {\r\n            this.recodeChatAct()\r\n        }\r\n        jsonRpcService.close(\"host\")\r\n        const frm = {id: this.id.toString()}\r\n        apiService.post(API_URL_BROADCAST_LIVE_END, frm, (ret) => {\r\n\r\n\r\n        })\r\n\r\n    },\r\n    mobileRecodeChatAct() {\r\n            const chatDialog = JQ('.zmwebsdk-makeStyles-chatCustomize-10');\r\n            if(chatDialog.html()) {\r\n                this.mobileSaveChatAct();\r\n            } else {\r\n                const morePannel = JQ('#menu-list-icon-more');\r\n                if (morePannel.html()) {\r\n                    JQ('#menu-list-icon-more li:nth-child(2)').click();\r\n                    setTimeout(() => {\r\n                       this.mobileSaveChatAct();\r\n                    }, 500);\r\n                } else {\r\n                    const moreButton = JQ('#meetingSDKElement div.zmwebsdk-MuiPaper-root.zmwebsdk-makeStyles-root-58.zmwebsdk-MuiPaper-elevation1.zmwebsdk-MuiPaper-rounded > div:nth-child(5) > button');\r\n                    JQ(moreButton).click();\r\n                    setTimeout(() => {\r\n                        JQ('#menu-list-icon-more li:nth-child(2)').click();\r\n                        setTimeout(() => {\r\n                            this.mobileSaveChatAct();\r\n                        }, 500);\r\n                    }, 500);\r\n                }\r\n            }\r\n\r\n\r\n    },\r\n    mobileSaveChatAct() {\r\n        if (this.chatProcess) return;\r\n        else this.chatProcess = true;\r\n\r\n        let chatContainer = JQ('.ReactVirtualized__Grid__innerScrollContainer > li');\r\n        let from;\r\n        let to;\r\n        let msg;\r\n        let chatDatList = [];\r\n        chatContainer.each(function () {\r\n            from = JQ(this).find('button:eq(0)').text();\r\n            to = JQ(this).find('button:eq(1)').text();\r\n            msg = JQ(this).find('.zmwebsdk-MuiListItemText-root span').text();\r\n\r\n\r\n            if (from && to) {\r\n                chatDatList.push({to: to, from: from, time:'', msg: msg});\r\n            } else {\r\n                chatDatList.push({to: '', from: '', time: '', msg: msg});\r\n            }\r\n\r\n        });\r\n        let params = {\r\n            message: JSON.stringify(chatDatList),\r\n            parentId: this.id.toString(),\r\n        }\r\n        this.updateChat(params);\r\n\r\n    },\r\n    recodeChatAct() {\r\n\r\n        let chatButton = JQ('#wc-content #wc-footer .footer-chat-button button');\r\n        if (JQ('#wc-container-right')) {\r\n            if (JQ('#wc-container-right .chat-container').html()) {\r\n                this.saveChatAct();\r\n            } else {\r\n                if (chatButton) {\r\n                    chatButton.click();\r\n                    let obj = this;\r\n                    setTimeout(function () {\r\n                        obj.saveChatAct();\r\n                    }, 500);\r\n                }\r\n            }\r\n        } else if (chatButton) {\r\n            chatButton.click();\r\n            let obj = this;\r\n            setTimeout(function () {\r\n                obj.saveChatAct();\r\n            }, 500);\r\n        }\r\n    },\r\n    saveChatAct() {\r\n        if (this.chatProcess) return;\r\n        else this.chatProcess = true;\r\n\r\n        let chatContainer = JQ('#wc-container-right .chat-container .ReactVirtualized__Grid__innerScrollContainer > div');\r\n        let from;\r\n        let to;\r\n        let time;\r\n        let msg;\r\n        let chatDatList = [];\r\n        chatContainer.each(function () {\r\n            from = JQ(this).find('.chat-item__chat-info-header').find('span:eq(0)').text();\r\n            to = JQ(this).find('.chat-item__chat-info-header').find('span:eq(2)').text();\r\n\r\n            time = JQ(this).find('.chat-item__chat-info-header').find('span:eq(4)').text();\r\n            msg = JQ(this).find('.chat-message__text-content').text();\r\n            if (from && to && time) {\r\n                chatDatList.push({to: to, from: from, time: time, msg: msg});\r\n            } else {\r\n                chatDatList.push({to: '', from: '', time: '', msg: msg});\r\n            }\r\n\r\n        });\r\n        let params = {\r\n            message: JSON.stringify(chatDatList),\r\n            parentId: this.id.toString(),\r\n        }\r\n        this.updateChat(params);\r\n\r\n    },\r\n    updateChat(frm) {\r\n        apiService.post(API_URL_BROADCAST_LIVE_UPDATE_CHAT, frm, (ret) => {\r\n            this.chatProcess = false;\r\n\r\n        })\r\n    }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n    </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n\r\n    import hostLiveHandler from './handler/hostLiveHandler';\r\n    import hostLiveComuHandler from './handler/hostLiveComuHandler';\r\n\r\n    export default {\r\n        name: 'testJsonRpc',\r\n        data() {\r\n            return {\r\n                id: '',\r\n                uid: '',\r\n\r\n            }\r\n        },\r\n        created() {\r\n            this.id = this.$route.params.id;\r\n            this.uid = this.$route.params.uid;\r\n            this.getMeetingInfo();\r\n        },\r\n        methods: {\r\n            getMeetingInfo() {\r\n                const params = {\r\n                    id: this.id.toString(),\r\n                    uid: this.uid,\r\n                }\r\n                hostLiveHandler.init(params, this,true);\r\n                hostLiveComuHandler.init(params, this);\r\n                this.$eventBus.$on('rpcJsonTransfer',this.transferAction);\r\n                this.$eventBus.$on('rpcTestJsonTransfer',this.testTransferAction);\r\n                hostLiveHandler.joinSocketLiveStream();\r\n            },\r\n            transferAction(params) {\r\n                window.parent.postMessage(params,'https://localhost');\r\n            },\r\n            testTransferAction(params) {\r\n                hostLiveComuHandler.rpcSend(params);\r\n            }\r\n        },\r\n        destroyed() {\r\n            this.$eventBus.$off('rpcJsonTransfer');\r\n            this.$eventBus.$off('rpcTestJsonTransfer');\r\n\r\n        }\r\n\r\n    }\r\n</script>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./testJsonRpc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./testJsonRpc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./testJsonRpc.vue?vue&type=template&id=70c59eeb&\"\nimport script from \"./testJsonRpc.vue?vue&type=script&lang=js&\"\nexport * from \"./testJsonRpc.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["DEBUG","jsonRpcUrl","connected","jsonRpcClientWs","sessionId","roomId","initMethod","userId","vue","accessType","userName","userEmail","init","params","vueObj","debug","this","uid","roomHost","name","email","setConnect","protocol","ws_uri","configuration","hearbeat","sendCloseMessage","ws","uri","useSockJS","onconnected","socketInit","ondisconnect","disconnectCallback","onreconnected","connectReCallback","rpc","requestTimeout","sendResponse","callMessage","jsonRpc","obj","close","type","responseMethod","userType","send","error","response","console","log","$eventBus","$emit","message","doAction","window","interval","operation","map","result","waitUsers","sendParams","func","sendMethod","forceHostOut","post","frm","afterFunc","errorPosiFlag","nl2br","text","value","replace","nl2brContent","toString","stripTags","div","document","createElement","innerHTML","textContent","innerText","stripTagsNotEm","pattern","test","numericByPrice","targetPrice","isNaN","numeric","parseNumber","number","parseInt","price","numberFormat","br2nl","nf","Intl","NumberFormat","format","fNumberFormat","getStrCut","string","length","substr","errorPosition","baseEle","targetEle","baseElement","JQ","height","top","offset","stTop","animate","scrollTop","id","streamRoomId","sendToUser","event","page","action","sendRpcData","no","userReponseParams","parentId","userReponseShow","screenShow","msg","gtype","modalResponse","hide","cmd","responseTitle","show","fileNo","fdata","open","rpcParams","data","jsonRpcService","res","rpcSend","liveIngTimeKey","liveIngTime","chatProcess","getLiveInfo","apiService","API_URL_BROADCAST_HOST_LIVE_INFO","ret","nowDate","Date","info","start_time","getTime","getStartTime","ingTime","timeCnt","Math","floor","updateLiveTime","liveTimeRemove","joinSocketLiveStream","API_URL_BROADCAST_UPDATE_HOST_START_TIME","setTimeVal","sec","resultSec","resultMin","min","resultHour","hour","day","zf","date","doEndMeetingActive","mobile","mobileRecodeChatAct","recodeChatAct","API_URL_BROADCAST_LIVE_END","chatDialog","html","mobileSaveChatAct","morePannel","click","setTimeout","moreButton","from","to","chatContainer","chatDatList","each","find","push","time","JSON","stringify","updateChat","chatButton","saveChatAct","API_URL_BROADCAST_LIVE_UPDATE_CHAT","render","_vm","_h","$createElement","_c","_self","staticRenderFns","methods","hostLiveHandler","hostLiveComuHandler","component"],"sourceRoot":""}