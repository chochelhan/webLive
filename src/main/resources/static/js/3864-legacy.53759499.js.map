{"version":3,"file":"js/3864-legacy.53759499.js","mappings":"0JAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,IAAI,CAACE,YAAY,eAAe,CAACN,EAAIO,GAAG,UAAUH,EAAG,OAAO,CAACE,YAAY,SAASE,MAAM,CAAC,WAAa,IAAIC,GAAG,CAAC,OAAS,SAASC,GAAgC,OAAxBA,EAAOC,iBAAwBX,EAAIY,SAASC,MAAM,KAAMC,cAAc,CAACV,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,SAAS,CAACN,EAAIO,GAAG,YAAYH,EAAG,eAAe,CAACI,MAAM,CAAC,iBAAiBR,EAAIe,YAAY,SAAW,GAAG,YAAc,eAAeN,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIgB,GAAGC,MAAMC,UAAU,KAAO,SAASR,GAAQ,OAAOV,EAAIgB,GAAGC,MAAMC,WAAWC,MAAM,CAACC,MAAOpB,EAAS,MAAEqB,SAAS,SAAUC,GAAMtB,EAAIiB,MAAMK,GAAKC,WAAW,YAAY,GAAGnB,EAAG,MAAM,CAACE,YAAY,OAAO,CAACN,EAAIO,GAAG,uDAAuDH,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACE,YAAY,aAAaE,MAAM,CAAC,KAAO,UAAUC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIwB,QAAQC,UAAU,CAACrB,EAAG,OAAO,CAACJ,EAAIO,GAAG,UAAUH,EAAG,QAAQ,CAACE,YAAY,cAAcE,MAAM,CAAC,KAAO,WAAW,CAACR,EAAIO,GAAG,aAAa,UAC5nCmB,EAAkB,G,4CCwCtB,GAEE,OAAFC,CAAAA,EAAAA,IACE,YAAFC,CACI,MAAJX,CAAM,SAANY,EAAAA,GAAM,MAANZ,EAAAA,KAEE,KAAFa,WACE,SAAFC,CACI,YADJ,WAEM,IAAN,KACM,OAAN,uBACA,6CACA,qBACQ,EAARC,KAAAA,mBAEA,GALA,IASE,KAnBF,WAoBI,MAAJ,CACM,MAANf,GACM,YAANgB,IAIE,QA1BF,aA6BE,QAAFC,CACI,SADJ,WACM,IAAN,OAEM,GADA,KAAN,aACA,mBACQ,IAAR,GACU,MAAVjB,KAAAA,OAEQ,GAAR,uBACQ,KAAR,cAEQ,KAAR,kCACQkB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,GAAAA,SAAAA,GAEE,EAAV,kCACU,IAAV,WACA,KACU,GAAV,aACY,EAAZC,CACc,QAAdC,yBACc,SAAdC,WACgB,EAAhB,qBAIA,CACY,IACZ,EADA,SAEY,OAAZ,GACc,IAAd,iBACgB,EAAhBC,kCACgB,MACF,IAAd,SACgB,EAAhBA,gBACgB,MACF,QACE,EAAhBA,cACgB,MAGJ,EAAZ,cACY,EAAZH,CACc,QAAdC,GAIU,EAAV,sCCnHsR,I,oDCQlRG,GAAY,OACd,EACAzC,EACA2B,GACA,EACA,KACA,WACA,MAIF,EAAec,EAAiB,QAMhC,IAAkBA,EAAW,CAACC,KAAI,eAAW","sources":["webpack://livego/./src/views/WEB/member/findPass.vue?068d","webpack://livego/src/views/WEB/member/findPass.vue","webpack://livego/./src/views/WEB/member/findPass.vue?749d","webpack://livego/./src/views/WEB/member/findPass.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"login-container-layout\"},[_c('div',{staticClass:\"login-container\"},[_c('p',{staticClass:\"login-title\"},[_vm._v(\"계정찾기\")]),_c('form',{staticClass:\"w-full\",attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate.apply(null, arguments)}}},[_c('div',{staticClass:\"input-box\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"이메일 주소\")]),_c('v-text-field',{attrs:{\"error-messages\":_vm.emailErrors,\"outlined\":\"\",\"placeholder\":\"이메일을 입력해주세요\"},on:{\"input\":function($event){return _vm.$v.email.$touch()},\"blur\":function($event){return _vm.$v.email.$touch()}},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}})],1),_c('div',{staticClass:\"tip\"},[_vm._v(\" ※ 회원 가입 시 입력하신 이메일 주소로 아이디 및 비밀번호 변경링크를 보내드립니다. \")]),_c('div',{staticClass:\"button-row\"},[_c('v-btn',{staticClass:\"grayButton\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$router.back()}}},[_c('span',[_vm._v(\"취소\")])]),_c('v-btn',{staticClass:\"blackButton\",attrs:{\"type\":\"submit\"}},[_vm._v(\" 링크전송 \")])],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"login-container-layout\">\r\n        <div class=\"login-container\">\r\n            <p class=\"login-title\">계정찾기</p>\r\n            <form novalidate class=\"w-full\" @submit.prevent=\"validate\">\r\n\r\n                <div class=\"input-box\">\r\n                    <div class=\"label\">이메일 주소</div>\r\n                    <v-text-field\r\n                            v-model=\"email\"\r\n                            :error-messages=\"emailErrors\"\r\n                            outlined\r\n                            @input=\"$v.email.$touch()\"\r\n                            @blur=\"$v.email.$touch()\"\r\n                            placeholder=\"이메일을 입력해주세요\"/>\r\n\r\n                </div>\r\n                <div class=\"tip\">\r\n                    ※ 회원 가입 시 입력하신 이메일 주소로 아이디 및 비밀번호 변경링크를 보내드립니다.\r\n                </div>\r\n                <div class=\"button-row\">\r\n                    <v-btn type=\"button\" @click=\"$router.back()\" class=\"grayButton\">\r\n                        <span>취소</span>\r\n                    </v-btn>\r\n                    <v-btn type=\"submit\" class=\"blackButton\">\r\n                        링크전송\r\n                    </v-btn>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import {validationMixin} from 'vuelidate'\r\n    import {required, email} from 'vuelidate/lib/validators'\r\n    import apiService from '@/config/web/apiService'\r\n    import {\r\n        API_URL_FIND_MEMBER_PASS,\r\n    } from '@/config/web/urls'\r\n\r\n\r\n    export default {\r\n\r\n        mixins: [validationMixin],\r\n        validations: {\r\n            email: {required, email},\r\n        },\r\n        name: 'FindPass',\r\n        computed: {\r\n            emailErrors() {\r\n                const errors = []\r\n                if (!this.$v.email.$dirty) return errors\r\n                !this.$v.email.required && errors.push('이메일을 입력하세요')\r\n                if (!this.$v.email.email) {\r\n                    errors.push('잘못된 형식의 이메일 입니다')\r\n                }\r\n                return errors;\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                email: '',\r\n                insertFlag: false,\r\n\r\n            };\r\n        },\r\n        created() {\r\n\r\n        },\r\n        methods: {\r\n            validate() {\r\n                this.$v.$touch();\r\n                if (!this.$v.$anyError) {\r\n                    const frm = {\r\n                        email: this.email\r\n                    }\r\n                    if (this.insertFlag) return;\r\n                    this.insertFlag = true;\r\n\r\n                    this.$eventBus.$emit('overlay', 'open');\r\n                    apiService.post(API_URL_FIND_MEMBER_PASS, frm, (res) => {\r\n\r\n                        this.$eventBus.$emit('overlay', 'hide');\r\n                        let result = res.status;\r\n                        let params = {}\r\n                        if (result == 'success') {\r\n                            params = {\r\n                                message: '비밀번호 변경링크를 메일로 발송하였습니다',\r\n                                doAction: () => {\r\n                                    this.$router.back();\r\n                                }\r\n                            };\r\n\r\n                        } else {\r\n                            let code = res.code;\r\n                            let msg;\r\n                            switch(code) {\r\n                                case 'noEmailSetting':\r\n                                    msg =  '이메일 설정이 정의되지 않았습니다 관리자에게 문의바랍니다'\r\n                                    break;\r\n                                case 'noAuth':\r\n                                    msg =  '미인증된 회원정보 입니다'\r\n                                    break;\r\n                               default:\r\n                                    msg =  '잘못된 이메일 입니다'\r\n                                    break;\r\n                            }\r\n\r\n                            this.insertFlag = false;\r\n                            params = {\r\n                                message:msg,\r\n                            };\r\n\r\n                        }\r\n                        this.$eventBus.$emit('modalOpen', params);\r\n\r\n                    })\r\n                }\r\n            },\r\n\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .login-container {\r\n        width: 636px;\r\n        margin-top: 0;\r\n        margin-left:auto;\r\n        margin-right:auto;\r\n        padding: 36px 24px;\r\n        background: #fff;\r\n        margin-bottom: calc(100vh - 700px);\r\n\r\n        .login-title {\r\n            color: #333;\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            margin-bottom: 35px;\r\n            padding-bottom: 8px;\r\n            border-bottom: solid 1px #333;\r\n        }\r\n\r\n        .w-full {\r\n            width: 100%;\r\n            margin: auto;\r\n\r\n            .input-box {\r\n                .label {\r\n                    font-size: 14px;\r\n                    color: #333;\r\n                    padding-bottom: 5px;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                width: 100%;\r\n                margin: auto;\r\n            }\r\n        }\r\n\r\n        .button-row {\r\n            width: 100%;\r\n            padding: 40px 0 10px 0;\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            .grayButton {\r\n                width: 180px;\r\n                background: #999999;\r\n                height: 55px;\r\n\r\n                span {\r\n                    color: #fff;\r\n                    font-size: 16px;\r\n                    font-weight: bold !important;\r\n                }\r\n            }\r\n\r\n            .blackButton {\r\n                width: 384px;\r\n            }\r\n        }\r\n\r\n        .tip {\r\n            color: #999999;\r\n            font-size: 12px;\r\n        }\r\n\r\n    }\r\n\r\n    @media screen and (min-width: 450px) and (max-width: 1259px) {\r\n        .login-container-layout {\r\n            min-height:calc(100vh - 50px);\r\n\r\n            .login-container {\r\n                width: 90%;\r\n                margin: 40px auto 0 auto;\r\n                .button-row {\r\n                    max-width: 100%;\r\n                    .grayButton {\r\n                        width: 29%;\r\n\r\n                    }\r\n                    .blackButton {\r\n                        width: 68%;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @media screen and (max-width: 450px) {\r\n        .login-container-layout {\r\n            .login-container {\r\n                width: 100%;\r\n                margin: 0;\r\n                padding: 36px 20px 50px 20px;\r\n                .button-row {\r\n                    max-width: 100%;\r\n                    .grayButton {\r\n                        width: 29%;\r\n\r\n                    }\r\n                    .blackButton {\r\n                        width: 68%;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./findPass.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./findPass.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./findPass.vue?vue&type=template&id=01575b0b&scoped=true&\"\nimport script from \"./findPass.vue?vue&type=script&lang=js&\"\nexport * from \"./findPass.vue?vue&type=script&lang=js&\"\nimport style0 from \"./findPass.vue?vue&type=style&index=0&id=01575b0b&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"01575b0b\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VTextField})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","on","$event","preventDefault","validate","apply","arguments","emailErrors","$v","email","$touch","model","value","callback","$$v","expression","$router","back","staticRenderFns","mixins","validations","required","name","computed","errors","insertFlag","methods","apiService","params","message","doAction","msg","component","VBtn"],"sourceRoot":""}