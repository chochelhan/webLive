{"version":3,"file":"js/4104.ebfcfe58.js","mappings":"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","sources":["webpack://livego/./src/common/util.js","webpack://livego/./src/config/admin/apiService.js","webpack://livego/./src/config/admin/urls.js","webpack://livego/./src/views/ADMIN/statistics/contentStatistics.vue?f348","webpack://livego/src/views/ADMIN/statistics/contentStatistics.vue","webpack://livego/./src/views/ADMIN/statistics/contentStatistics.vue?aa85","webpack://livego/./src/views/ADMIN/statistics/contentStatistics.vue"],"sourcesContent":["import JQ from \"jquery\";\r\n\r\nexport default {\r\n    errorPosiFlag:false,\r\n    nl2br(text) {\r\n        return text.value.replace(/(\\n|\\r\\n)/g, '<br>');\r\n\r\n    },\r\n    nl2brContent(text) {\r\n        text = text.toString();\r\n        text = text.replace(/(\\n|\\r\\n)/g, '<br>');\r\n        return text.replace(/(<br><br>)/g, '<br>');\r\n    },\r\n    stripTags(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value;\r\n        let text = div.textContent || div.innerText || \"\";\r\n\r\n        return text;\r\n\r\n    },\r\n    stripTagsNotEm(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value.replace(/<em>/ig,'{em}').replace(/<\\/em>/ig,'{/em}')\r\n        let text = div.textContent || div.innerText || \"\";\r\n        let result = text.replace(/{em}/ig,'<em>').replace(/{\\/em}/ig,'</em>')\r\n        return result;\r\n\r\n    },\r\n    email(value) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return pattern.test(value)\r\n    },\r\n    numericByPrice(value) {\r\n        if(value==0)return false;\r\n        if(value) {\r\n\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            return isNaN(targetPrice);\r\n        } else return true;\r\n    },\r\n    numeric(value) {\r\n        return isNaN(value);\r\n    },\r\n    parseNumber(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let number = value.replace(/,/gi, '');\r\n            number = number.toString().replace(/-/gi, '');\r\n            return parseInt(number);\r\n\r\n        } else return 0;\r\n    },\r\n    price(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            if (!this.numeric(targetPrice)) {\r\n                return this.numberFormat(targetPrice);\r\n\r\n            } else return false;\r\n        } else return false;\r\n    },\r\n    br2nl(text) {\r\n        return text.replace(/(<br>|<br\\/>|<br \\/>)/g, '\\r');\r\n    },\r\n    numberFormat(number) {\r\n        if(!number)return 0;\r\n        if(isNaN(number)) {\r\n            number = number.toString().replace(/-/gi, '');\r\n        }\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    fNumberFormat(number) {\r\n        number = number.toString().replace(/-/gi, '');\r\n        number = number.toString().replace(/,/gi, '');\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    getStrCut(string,length) {\r\n        if(string.length >= length){\r\n            return string.substr(0,length)+\"..\";\r\n        } else return string;\r\n    },\r\n    errorPosition(baseEle,targetEle,func) {\r\n        const baseElement = (baseEle=='base')?JQ('body'):JQ(baseEle);\r\n        const height = JQ(baseElement).height();\r\n\r\n        const top = JQ(targetEle).offset().top;\r\n\r\n        const stTop = (top>0)?height - top + 200:height + top - 200;\r\n        if(baseEle=='base') {\r\n\r\n            JQ('html,body').animate({\r\n                scrollTop: (top - 50)\r\n            }, 100, () => {\r\n                if(this.errorPosiFlag) {\r\n                    this.errorPosiFlag = false;\r\n                    return\r\n                }\r\n                func();\r\n                this.errorPosiFlag = true;\r\n            })\r\n        } else {\r\n            JQ(baseElement).animate({\r\n                scrollTop:stTop\r\n\r\n            }, 100, () => {\r\n                func();\r\n            })\r\n        }\r\n    },\r\n\r\n}\r\n","import axios from 'axios'\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nimport {\r\n    CONFIG_HEADER,\r\n    CONFIG_HEADER_FILE\r\n} from '../admin/urls'\r\n\r\nexport default {\r\n    DEBGU: true,\r\n    accessToken: sessionStorage.getItem('accessToken'),\r\n    version:'1.0.0',\r\n    imgHost:'/',\r\n    post(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n        if (this.accessToken) {\r\n            CONFIG_HEADER.Authorization = 'Bearer '+this.accessToken\r\n        }\r\n        axios.post(url, frm, {headers: CONFIG_HEADER}).then(res => {\r\n\r\n            if (this.DEBGU) {\r\n                console.log(res)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n\r\n        }).catch((error) => {\r\n            if(errorFunc) {\r\n                errorFunc(error)\r\n            } else {\r\n                this.setError(error);\r\n            }\r\n\r\n\r\n        });\r\n    },\r\n    postFile(url, frm, afterFunc) {\r\n        this.checkDebug();\r\n        if (this.accessToken) {\r\n            CONFIG_HEADER_FILE.Authorization = 'Bearer '+this.accessToken\r\n        }\r\n        axios.post(url, frm, {headers: CONFIG_HEADER_FILE}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n\r\n        });\r\n    },\r\n    get(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n\r\n        axios.get(url, {params: frm, headers: CONFIG_HEADER}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            if (res.data.status == 'notLogin') {\r\n                location.href = '/';\r\n                return;\r\n            }\r\n\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    location.href = '/';\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    location.href = '/';\r\n                    break;\r\n            }\r\n\r\n\r\n        }).catch((error) => {\r\n            if (errorFunc) errorFunc(error.response.data)\r\n            else this.setError(error);\r\n\r\n\r\n        });\r\n    },\r\n    checkDebug() {\r\n        if (location.hostname == 'localhost') {\r\n            this.DEBGU = true;\r\n            this.imgHost = 'http://localhost/';\r\n        } else this.DEBGU = false;\r\n    },\r\n    setError(error) {\r\n\r\n        switch (error.response.status) {\r\n            case 500:\r\n                this.accessToken = '';\r\n                CONFIG_HEADER_FILE.Authorization = ''\r\n                location.href = '/';\r\n                break;\r\n            default:  // 이미지 업로드 에러\r\n                alert('잘못된 접근입니다');\r\n                this.accessToken = '';\r\n                CONFIG_HEADER_FILE.Authorization = ''\r\n                location.href = '/';\r\n                break;\r\n        }\r\n\r\n        if (!this.DEBGU) return;\r\n        if (error.response) {\r\n            // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        } else if (error.request) {\r\n            // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n            // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n            // Node.js의 http.ClientRequest 인스턴스입니다.\r\n            console.log(error.request);\r\n        } else {\r\n            // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n            console.log('Error', error.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","export const IMGHOST = 'http://localhost';\r\n\r\n\r\nconst BaseUrl = '/api/admin/controller/';\r\n\r\n/**\r\n * @ API_ADMIN_{Action}\r\n * {Action} get: 정보 가져오기 , insert: 정보 저장 , update: 정보 수정,  delete: 정보 삭제, SEQUENCE: 순서 변경\r\n *\r\n **/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ 로그인 아웃\r\n */\r\nexport const API_ADMIN_URL_LOGIN = '/api/admin/login'\r\nexport const API_ADMIN_GET_LOGIN_CHECK = '/api/admin/checkStatus'\r\nexport const API_ADMIN_INSERT_ADMIN_INFO = '/api/admin/insertAdmin' // 사이트 인스톨후 초기 관리자 정보저장\r\nexport const API_ADMIN_URL_LOGOUT = BaseUrl + 'member/logout'\r\n\r\n/**\r\n * @ 관리자 정보\r\n */\r\n\r\nexport const API_ADMIN_UPDATE_ADMIN_INFO = BaseUrl + 'member/updateAdminInfo'\r\nexport const API_ADMIN_GET_ADMIN_INFO = BaseUrl + 'member/getAdminInfo'\r\n\r\n/**\r\n * @ 관리자 메인 페이지\r\n */\r\n\r\nexport const API_ADMIN_GET_MAIN_INFO = BaseUrl + 'statistics/getAdminMainInfo'\r\n\r\n\r\n/**\r\n * @ 기본설정\r\n */\r\n\r\n/******** 메뉴 설정 **********/\r\nexport const API_ADMIN_UPDATE_SETTING_MENU = BaseUrl + 'setting/updateSettingMenu'\r\nexport const API_ADMIN_GET_SETTING_MENU = BaseUrl + 'setting/getSettingMenu'\r\n\r\n/***  sns정보 설정 ***/\r\nexport const API_ADMIN_UPDATE_SETTING_MEMBER = BaseUrl + 'setting/updateSettingSns'\r\nexport const API_ADMIN_GET_SETTING_MEMBER = BaseUrl + 'setting/getSettingSns'\r\n\r\n/***  약관정보 설정 ***/\r\nexport const API_ADMIN_UPDATE_SETTING_AGREE = BaseUrl + 'setting/updateSettingAgree'\r\nexport const API_ADMIN_GET_SETTING_AGREE = BaseUrl + 'setting/getSettingAgree'\r\n\r\n/***  메일정보 설정 ***/\r\nexport const API_ADMIN_GET_SETTING_EMAIL = BaseUrl + 'setting/getSettingEmail'\r\nexport const API_ADMIN_UPDATE_SETTING_EMAIL = BaseUrl + 'setting/updateSettingEmail'\r\n\r\n\r\n\r\n/**\r\n * @ 회원\r\n */\r\n/*** 회원 정보 ***/\r\nexport const API_ADMIN_GET_MEMBER_ALL_LIST = BaseUrl + 'member/getMemberList'\r\nexport const API_ADMIN_MEMBER_UPDATE = BaseUrl + 'member/updateMemberInfo'\r\nexport const API_ADMIN_UPLOAD_MEMBER_EXCEL = BaseUrl + 'member/uploadMemberExcel'\r\nexport const API_ADMIN_DELETE_MEMBER = BaseUrl + 'member/deleteMember'\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ 게시판\r\n */\r\nexport const API_ADMIN_INSERT_BOARD = BaseUrl + 'board/insertBoard'\r\nexport const API_ADMIN_UPDATE_BOARD = BaseUrl + 'board/updateBoard'\r\nexport const API_ADMIN_GET_BOARD_LIST = BaseUrl + 'board/getBoardList'\r\nexport const API_ADMIN_GET_BOARD = BaseUrl + 'board/getBoard'\r\nexport const API_ADMIN_DELETE_BOARD = BaseUrl + 'board/deleteBoard'\r\nexport const API_ADMIN_SEQUENCE_BOARD = BaseUrl + 'board/sequenceBoard'\r\n\r\nexport const API_ADMIN_GET_BOARD_ARTICLE_REGIST = BaseUrl + 'board/getBoardArticleRegist'\r\nexport const API_ADMIN_INSERT_BOARD_ARTICLE = BaseUrl + 'board/insertBoardArticle'\r\nexport const API_ADMIN_UPDATE_BOARD_ARTICLE = BaseUrl + 'board/updateBoardArticle'\r\nexport const API_ADMIN_DELETE_BOARD_ARTICLE = BaseUrl + 'board/deleteBoardArticle'\r\n\r\nexport const API_ADMIN_GET_BOARD_ARTICLE_LIST = BaseUrl + 'board/getBoardArticleList'\r\nexport const API_ADMIN_INSERT_ARTICLE_TEMP_IMAGE = BaseUrl + 'board/insertArticleImage'\r\nexport const API_ADMIN_INSERT_ARTICLE_TEMP_FILE = BaseUrl + 'board/insertArticleFile'\r\n\r\n\r\nexport const API_ADMIN_TEMP_BOARD_IS_ARTICLE = BaseUrl + 'board/insertTempIsArticle'\r\nexport const API_ADMIN_TEMP_BOARD_ARTICLE = BaseUrl + 'board/insertTempArticle'\r\n\r\n/**\r\n *\r\n * 댓글\r\n */\r\nexport const API_ADMIN_UPDATE_COMMENT = BaseUrl + 'comment/updateComment'\r\nexport const API_ADMIN_INSERT_COMMENT = BaseUrl + 'comment/insertComment'\r\nexport const API_ADMIN_GET_COMMENT_LIST = BaseUrl + 'comment/getCommentList'\r\n\r\n\r\n/**\r\n *\r\n * 통계\r\n */\r\nexport const API_ADMIN_GET_STATISTICS_CONTENT= BaseUrl + 'statistics/getContent'\r\nexport const API_ADMIN_GET_STATISTICS_MEMBER = BaseUrl + 'statistics/getMember'\r\nexport const API_ADMIN_GET_STATISTICS_DOWN = BaseUrl + 'statistics/getDownload'\r\nexport const API_ADMIN_GET_STATISTICS_KEYWORD = BaseUrl + 'statistics/getKeyword'\r\n\r\n\r\n\r\nexport const CONFIG_HEADER = {\r\n    'Content-Type': 'application/json;charset=UTF-8;',\r\n    'Authorization':''\r\n\r\n};\r\n\r\nexport const CONFIG_HEADER_FILE = {\r\n    'Content-Type': 'multipart/form-data;charset=utf-8;',\r\n    'Authorization':''\r\n\r\n};\r\n\r\n\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-container\"},[_c('div',{staticClass:\"product-container\"},[_c('div',{staticClass:\"graph-content\"},[_c('div',{staticClass:\"graph-title\"},[_vm._v(\"게시판별 활동현황 \"),_c('span',[_vm._v(\"[\"+_vm._s(_vm.nowTime)+\"]\")])]),_c('div',{staticClass:\"graph-box\"},[_c('div',{staticClass:\"left-graph\"},[_c('div',{staticClass:\"graph-unit\"},[_vm._v(\"[단위 : %]\")]),(!_vm.chartShow)?_c('v-progress-circular',{staticClass:\"progress-box\",attrs:{\"size\":100,\"color\":\"#DD1B16\",\"indeterminate\":\"\"}}):_vm._e(),(_vm.chartShow)?_c('Doughnut',{attrs:{\"chart-options\":_vm.chartOptions,\"chart-data\":_vm.articleDonutChartData,\"width\":500,\"height\":350}}):_vm._e()],1),_c('div',{staticClass:\"right-graph\"},[(!_vm.chartShow)?_c('v-progress-circular',{staticClass:\"progress-box\",attrs:{\"size\":100,\"color\":\"#DD1B16\",\"indeterminate\":\"\"}}):_vm._e(),(_vm.chartShow)?_c('Bar',{attrs:{\"chart-options\":_vm.chartOptions,\"chart-data\":_vm.chartData,\"height\":350,\"width\":700}}):_vm._e()],1)])]),_c('div',{staticClass:\"graph-content\",staticStyle:{\"padding-top\":\"80px\"}},[_c('div',{staticClass:\"graph-title\"},[_vm._v(\"오늘의 키워드 \"),_c('span',{staticClass:\"blue-text\"},[_vm._v(\"TOP 10\")]),_vm._v(\" \"),_c('span',[_vm._v(\"[\"+_vm._s(_vm.nowTime)+\"]\")])]),_c('div',{staticClass:\"graph-box\"},[_c('div',{staticClass:\"left-graph\",staticStyle:{\"min-width\":\"900px\"}},[(!_vm.chartShow)?_c('v-progress-circular',{staticClass:\"progress-box\",attrs:{\"size\":100,\"color\":\"#DD1B16\",\"indeterminate\":\"\"}}):_vm._e(),(_vm.chartShow)?_c('Bar',{attrs:{\"chart-options\":_vm.keywordChartOptions,\"chart-data\":_vm.keywordChartData,\"height\":450,\"width\":800}}):_vm._e()],1),_c('div',{staticClass:\"right-graph\",staticStyle:{\"padding-top\":\"38px\"}},[_c('table',{staticClass:\"graph-table\",attrs:{\"cellpadding\":\"0\",\"cellspacing\":\"0\"}},[_vm._m(0),_c('tbody',_vm._l((_vm.keywordList),function(item,index){return _c('tr',[_c('td',[_vm._v(_vm._s(index+1))]),_c('td',[_vm._v(_vm._s(item.name))]),_c('td',[_vm._v(_vm._s(_vm.util.numberFormat(item.hits)))])])}),0)])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{staticStyle:{\"width\":\"100px\"}},[_vm._v(\"순위\")]),_c('th',{staticStyle:{\"width\":\"300px\"}},[_vm._v(\"키워드\")]),_c('th',{staticStyle:{\"width\":\"100px\"}},[_vm._v(\"검색횟수\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"page-container\">\n        <div class=\"product-container\">\n            <!--div style=\"display: flex;\">\n                <div class=\"date-box\">\n                    <v-btn depressed :class=\"'white-button '+dateClass.year\" @click=\"setDateType('year')\">년도별\n                    </v-btn>\n                    <v-btn depressed :class=\"'white-button '+dateClass.month\" @click=\"setDateType('month')\">월별\n                    </v-btn>\n                    <v-btn depressed :class=\"'white-button '+dateClass.day\" @click=\"setDateType('day')\">\n                        일별\n                    </v-btn>\n                </div>\n                <div v-if=\"dateClass.day=='active'\" class=\"month-box\">\n                    <v-menu\n                            ref=\"menu1\"\n                            v-model=\"menu1\"\n                            transition=\"scale-transition\"\n                            offset-y\n                            max-width=\"290px\"\n                            min-width=\"auto\"\n                    >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                            <v-text-field\n                                    v-model=\"month\"\n                                    class=\"day-item\"\n                                    dense\n                                    readonly\n                                    suffix=\"월\"\n                                    v-bind=\"attrs\"\n                                    v-on=\"on\"\n                            ></v-text-field>\n                        </template>\n                        <v-date-picker\n                                v-model=\"month\"\n                                type=\"month\"\n                                @input=\"menu1 = false\"\n                        ></v-date-picker>\n                    </v-menu>\n                </div>\n                <div v-else class=\"year-box\">\n                    <v-select class=\"year-item\"\n                              v-model=\"styear\"\n                              dense\n                              :items=\"yearList\">\n\n                    </v-select>\n                    <span>-</span>\n                    <v-select class=\"year-item\"\n                              dense\n                              v-model=\"enyear\"\n                              :items=\"yearList\">\n\n                    </v-select>\n                </div>\n                <div class=\"button-box\">\n                    <v-btn depressed class=\"white-button submit-button\" @click=\"search()\">\n                        <font-awesome-icon icon=\"fa-solid fa-magnifying-glass\" style=\"margin-right:6px;\"/>\n                        검색\n                    </v-btn>\n                </div>\n            </div-->\n            <div class=\"graph-content\">\n                <div class=\"graph-title\">게시판별 활동현황 <span>[{{nowTime}}]</span></div>\n                <div class=\"graph-box\">\n                    <div class=\"left-graph\">\n                        <div class=\"graph-unit\">[단위 : %]</div>\n                        <v-progress-circular v-if=\"!chartShow\"\n                                             :size=\"100\"\n                                             class=\"progress-box\"\n                                             color=\"#DD1B16\"\n                                             indeterminate\n                        ></v-progress-circular>\n                        <Doughnut v-if=\"chartShow\"\n                                  :chart-options=\"chartOptions\"\n                                  :chart-data=\"articleDonutChartData\"\n                                  :width=\"500\"\n                                  :height=\"350\"\n                        />\n\n                    </div>\n                    <div class=\"right-graph\">\n                        <v-progress-circular v-if=\"!chartShow\"\n                                             :size=\"100\"\n                                             class=\"progress-box\"\n                                             color=\"#DD1B16\"\n                                             indeterminate\n                        ></v-progress-circular>\n                        <Bar v-if=\"chartShow\"\n                             :chart-options=\"chartOptions\"\n                             :chart-data=\"chartData\"\n                             :height=\"350\"\n                             :width=\"700\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div class=\"graph-content\" style=\"padding-top:80px;\">\n                <div class=\"graph-title\">오늘의 키워드 <span class=\"blue-text\">TOP 10</span> <span>[{{nowTime}}]</span></div>\n                <div class=\"graph-box\">\n                    <div class=\"left-graph\" style=\"min-width:900px;\">\n                        <v-progress-circular v-if=\"!chartShow\"\n                                             :size=\"100\"\n                                             class=\"progress-box\"\n                                             color=\"#DD1B16\"\n                                             indeterminate\n                        ></v-progress-circular>\n                        <Bar v-if=\"chartShow\"\n                             :chart-options=\"keywordChartOptions\"\n                             :chart-data=\"keywordChartData\"\n                             :height=\"450\"\n                             :width=\"800\"\n                        />\n\n                    </div>\n                    <div class=\"right-graph\" style=\"padding-top:38px;\">\n                        <table class=\"graph-table\" cellpadding=\"0\" cellspacing=\"0\">\n                            <thead>\n                            <tr>\n                                <th style=\"width:100px\">순위</th>\n                                <th style=\"width:300px\">키워드</th>\n                                <th style=\"width:100px\">검색횟수</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr v-for=\"(item,index) in keywordList\">\n                                <td>{{index+1}}</td>\n                                <td>{{item.name}}</td>\n                                <td>{{util.numberFormat(item.hits)}}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n    import {Bar, Doughnut} from 'vue-chartjs/legacy'\n\n    import {\n        Chart as ChartJS,\n        Title,\n        Tooltip,\n        Legend,\n        LinearScale,\n        CategoryScale,\n        ArcElement,\n        BarElement,\n    } from 'chart.js'\n\n    ChartJS.register(\n        Title,\n        Tooltip,\n        Legend,\n        LinearScale,\n        CategoryScale,\n        ArcElement,\n        BarElement,\n    )\n\n\n    import apiService from '@/config/admin/apiService'\n    import {\n        API_ADMIN_GET_STATISTICS_CONTENT\n    } from '@/config/admin/urls'\n    import UTIL from \"@/common/util\";\n\n    export default {\n        components: {\n            Bar,\n            Doughnut\n        },\n        data() {\n            return {\n                util: UTIL,\n                chartData: {\n                    labels: [],\n                    datasets: []\n                },\n                articleDonutChartData: {\n                    labels: [],\n                    datasets: []\n                },\n                chartOptions: {\n                    responsive: true,\n                    maintainAspectRatio: false\n                },\n                keywordChartData: {\n                    labels: [],\n                    datasets: []\n                },\n                keywordChartOptions: {\n                    indexAxis: \"y\",\n                    responsive: true,\n                    scales: {\n                        x: {\n                            ticks: {\n                                beginAtZero: true,\n                            },\n                            stacked: true\n                        },\n                        y: {\n                            ticks: {\n                                max: 7000,\n                                min: 0,\n                                // stepSize: 1000,\n                                autoSkip: true\n                            },\n                            stacked: true\n                        }\n                    },\n                },\n                chartShow: false,\n                dateClass: {\n                    year: '',\n                    month: '',\n                    day: 'active'\n                },\n                dateType: 'day',\n                month: '',\n                yearList: [],\n                styear: '',\n                enyear: '',\n                dayList: [],\n                menu1: false,\n                label: '',\n                searchBids: {},\n                keywordList: [],\n                nowTime: '',\n                colorList: [\n                    '#41B883',\n                    '#FFB300',\n                    '#00D8FF',\n                    '#DD1B16',\n                    '#C62828',\n                    '#4A148C',\n                    '#3949AB',\n                    '#1E88E5',\n                    '#00ACC1',\n                    '#00897B',\n                    '#43A047',\n                    '#827717',\n                    '#F4511E',\n                ],\n            };\n        },\n        created() {\n            //this.setInit();\n            const date = new Date();\n            let nowDate = date.toISOString();\n            this.nowTime = nowDate.replace('T',' ').substring(0,19) + ' 기준';\n            this.getDataList();\n        },\n        methods: {\n            getDataList() {\n                this.chartShow = false;\n                apiService.post(API_ADMIN_GET_STATISTICS_CONTENT, {}, (res) => {\n\n                    this.setGraph(res)\n                })\n            },\n            setGraph(res) {\n                this.searchBids = {};\n                let k=0;\n                for (const board of res.boardList) {\n                    this.searchBids[board.bid] = {\n                        name:board.bname,\n                        color:this.colorList[k],\n                    }\n                    k++;\n                }\n                let total = 0;\n                for (const key in res.articleData) {\n                    let comment = res.articleData[key].comment;\n                    let article = res.articleData[key].article;\n                    total = total + (comment + article)\n                }\n\n                this.chartData.labels = [];\n                this.articleDonutChartData.labels = [];\n\n\n                const articleDonutDatas = [];\n                const articleData = [];\n                const commentData = [];\n\n                const colors = [];\n                for (const key in res.articleData) {\n\n                    this.articleDonutChartData.labels.push(this.searchBids[key].name);\n                    colors.push(this.searchBids[key].color)\n                    this.chartData.labels.push(this.searchBids[key].name);\n                    let comment = res.articleData[key].comment;\n                    let article = res.articleData[key].article;\n                    let itmeTotal = (comment + article)\n\n                    let cnt = 0;\n                    if (total > 0) {\n                        cnt = parseInt((itmeTotal / total) * 100);\n                    }\n                    articleDonutDatas.push(cnt)\n                    articleData.push(article)\n                    commentData.push(comment)\n\n                }\n\n                this.chartData.datasets = [\n                    {\n                        label: '게시글',\n                        backgroundColor: '#3949AB',\n                        data: articleData\n                    },\n                    {\n                        label: '댓글',\n                        backgroundColor: '#F4511E',\n                        data: commentData\n                    }\n                ]\n                this.articleDonutChartData.datasets = [\n                    {\n                        backgroundColor: colors,\n                        data: articleDonutDatas\n                    }\n                ];\n\n\n                this.keywordChartData.labels = [];\n                this.keywordChartData.datasets = [];\n                const freeData = [];\n                const noticeData = [];\n                const qnaData = [];\n                const uesData = [];\n                this.keywordList = [];\n                const keywordBidTotal = {}\n                for (const kdata of res.keywordData) {\n                    this.keywordChartData.labels.push(kdata.name);\n                    for(const bid in this.searchBids) {\n                        let bidCount = 0;\n                        if(!keywordBidTotal[bid]) {\n                            keywordBidTotal[bid] = [];\n                        }\n                        if(kdata[bid])bidCount=kdata[bid];\n                        keywordBidTotal[bid].push(bidCount);\n                    }\n                    kdata.hits = kdata['kms_riverflow_keyword_count'];\n                    this.keywordList.push(kdata);\n\n\n                }\n                console.log(keywordBidTotal)\n                for(const bid in this.searchBids) {\n                    this.keywordChartData.datasets.push({\n                            label: this.searchBids[bid].name,\n                            backgroundColor: this.searchBids[bid].color,\n                            data: keywordBidTotal[bid]\n                        })\n\n                }\n\n                this.chartShow = true;\n            },\n            /*\n            setDateList() {\n                let lastDay;\n                let startDay;\n                switch (this.dateType) {\n                    case 'day':\n                        const monthList = this.month.split('-');\n                        const lastDayDate = new Date(monthList[0], monthList[1], 0);\n                        lastDay = lastDayDate.getDate();\n                        startDay = 1;\n                        this.label = this.month + '월 주문 현황';\n                        break;\n                    case 'month':\n                        lastDay = 12;\n                        startDay = 1;\n                        if (this.styear == this.enyear) {\n                            this.label = this.styear + '년 월별 주문 현황';\n                        } else {\n                            this.label = this.styear + '년 ~ ' + this.enyear + '년까지 월별 주문 현황';\n                        }\n\n                        break;\n                    case 'year':\n                        if (this.styear == this.enyear) {\n                            this.label = this.styear + '년 주문 현황';\n                        } else {\n                            this.label = this.styear + '년 ~ ' + this.enyear + '년까지 연도별 주문 현황';\n                        }\n                        lastDay = this.enyear;\n                        startDay = this.styear;\n                        break;\n                }\n                this.dayList = []\n                for (let k = startDay; k <= lastDay; k++) {\n                    let date = (k < 10) ? '0' + k : k;\n                    this.dayList.push(date)\n                }\n\n                //console.log(this.dayList)\n\n            },\n            setDateType(code) {\n                this.dateType = code;\n                for (const key in this.dateClass) {\n                    if (key == code) this.dateClass[key] = 'active';\n                    else this.dateClass[key] = '';\n\n                }\n            },\n            search() {\n                this.getDataList();\n            },\n            setInit() {\n                const date = new Date();\n                const year = date.getFullYear();\n                for (let y = year; y >= 2010; y--) {\n                    this.yearList.push({text: y + '년', value: y})\n                }\n                this.styear = year - 5;\n                this.enyear = date.getFullYear();\n\n                let month = parseInt(date.getMonth()) + 1;\n                if (month < 10) month = '0' + month;\n                this.month = year + '-' + month;\n                this.getDataList()\n            },\n\n             */\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import '../../../assets/style/common.scss';\n\n    .product-container {\n        width: 100%;\n        padding: 30px;\n        border: solid 1px #999;\n        background: #fff;\n\n    }\n\n    .statis-title {\n        font-weight: bold;\n        font-size: 13px;\n        color: #000;\n        padding: 0 0 20px 10px;\n\n    }\n\n    .date-box {\n        display: flex;\n        margin-right: 20px;\n\n        .white-button {\n            width: 100px;\n            margin-right: 15px;\n\n            &.active {\n                background: #880E4F !important;\n                color: #fff;\n            }\n        }\n    }\n\n    .tab-box {\n        border: solid 1px #999;\n        border-bottom: none;\n\n        span.bold {\n            font-size: 14px;\n            padding: 10px 80px;\n            font-weight: bold !important;\n            color: #000;\n        }\n    }\n\n    .month-box {\n        .day-item {\n            max-width: 110px;\n\n            ::v-deep input {\n                text-align: right;\n                padding-right: 10px;\n            }\n        }\n\n    }\n\n    .year-box {\n        display: flex;\n\n        .year-item {\n            max-width: 110px;\n\n        }\n\n        span {\n            padding: 10px 10px 0 10px;\n        }\n\n    }\n\n    .button-box {\n        margin-left: 20px;\n\n        .submit-button {\n            background: #000 !important;\n            max-width: 80px;\n            max-height: 35px;\n\n        }\n    }\n\n    .graph-content {\n\n        .graph-title {\n            font-size: 19px;\n            font-weight: bold;\n            padding-left: 10px;\n\n            span {\n                padding-left:20px;\n                font-weight: normal;\n            }\n\n            .blue-text {\n                padding-left:0;\n                font-size: 19px;\n                font-weight: bold;\n                color: #3949AB;\n\n            }\n        }\n\n        .graph-box {\n            min-height: 300px;\n            padding: 30px 0;\n            display: flex;\n            justify-content: space-between;\n\n            .left-graph {\n                position: relative;\n                min-width: 450px;\n                .progress-box {\n                    margin: -50px 0 0 -50px;\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n\n                }\n                .graph-unit {\n                    position: absolute;\n                    top: 55px;\n                    right: 80px;\n                    font-weight: bold;\n                }\n            }\n\n            .right-graph {\n                margin-right: 50px;\n                position: relative;\n                .progress-box {\n                    margin: -50px 0 0 -50px;\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n\n                }\n                .graph-table {\n                    max-width: 500px;\n                    min-width: 300px;\n\n                    thead {\n                        th {\n                            text-align: center;\n                            border-top: solid 1px #8179d3;\n                            background: #ecebf8;\n                            border-bottom: solid 1px #8179d3;\n                            padding: 10px 0;\n                        }\n                    }\n\n                    tbody {\n                        td {\n                            border-bottom: solid 1px #ddd;\n                            padding: 10px 0;\n                            text-align: center;\n                            font-size: 12px;\n                        }\n                    }\n                }\n            }\n\n\n        }\n    }\n\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./contentStatistics.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./contentStatistics.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./contentStatistics.vue?vue&type=template&id=2063ad10&scoped=true&\"\nimport script from \"./contentStatistics.vue?vue&type=script&lang=js&\"\nexport * from \"./contentStatistics.vue?vue&type=script&lang=js&\"\nimport style0 from \"./contentStatistics.vue?vue&type=style&index=0&id=2063ad10&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2063ad10\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\ninstallComponents(component, {VProgressCircular})\n"],"names":["errorPosiFlag","nl2br","text","value","replace","nl2brContent","toString","stripTags","div","document","createElement","innerHTML","textContent","innerText","stripTagsNotEm","result","email","pattern","test","numericByPrice","targetPrice","isNaN","numeric","parseNumber","number","parseInt","price","this","numberFormat","br2nl","nf","Intl","NumberFormat","format","fNumberFormat","getStrCut","string","length","substr","errorPosition","baseEle","targetEle","func","baseElement","JQ","height","top","offset","stTop","animate","scrollTop","axios","DEBGU","accessToken","sessionStorage","getItem","version","imgHost","post","url","frm","afterFunc","errorFunc","checkDebug","CONFIG_HEADER","headers","then","res","console","log","data","status","alert","catch","error","setError","postFile","CONFIG_HEADER_FILE","get","params","location","href","response","hostname","request","message","BaseUrl","API_ADMIN_URL_LOGIN","API_ADMIN_GET_LOGIN_CHECK","API_ADMIN_INSERT_ADMIN_INFO","API_ADMIN_URL_LOGOUT","API_ADMIN_UPDATE_ADMIN_INFO","API_ADMIN_GET_ADMIN_INFO","API_ADMIN_GET_MAIN_INFO","API_ADMIN_UPDATE_SETTING_MENU","API_ADMIN_GET_SETTING_MENU","API_ADMIN_UPDATE_SETTING_MEMBER","API_ADMIN_GET_SETTING_MEMBER","API_ADMIN_UPDATE_SETTING_AGREE","API_ADMIN_GET_SETTING_AGREE","API_ADMIN_GET_SETTING_EMAIL","API_ADMIN_UPDATE_SETTING_EMAIL","API_ADMIN_GET_MEMBER_ALL_LIST","API_ADMIN_MEMBER_UPDATE","API_ADMIN_UPLOAD_MEMBER_EXCEL","API_ADMIN_DELETE_MEMBER","API_ADMIN_INSERT_BOARD","API_ADMIN_UPDATE_BOARD","API_ADMIN_GET_BOARD_LIST","API_ADMIN_DELETE_BOARD","API_ADMIN_SEQUENCE_BOARD","API_ADMIN_GET_BOARD_ARTICLE_REGIST","API_ADMIN_INSERT_BOARD_ARTICLE","API_ADMIN_UPDATE_BOARD_ARTICLE","API_ADMIN_DELETE_BOARD_ARTICLE","API_ADMIN_GET_BOARD_ARTICLE_LIST","API_ADMIN_INSERT_ARTICLE_TEMP_IMAGE","API_ADMIN_INSERT_ARTICLE_TEMP_FILE","API_ADMIN_TEMP_BOARD_IS_ARTICLE","API_ADMIN_TEMP_BOARD_ARTICLE","API_ADMIN_GET_STATISTICS_CONTENT","API_ADMIN_GET_STATISTICS_MEMBER","API_ADMIN_GET_STATISTICS_DOWN","API_ADMIN_GET_STATISTICS_KEYWORD","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","nowTime","chartShow","_e","attrs","chartOptions","articleDonutChartData","chartData","staticStyle","keywordChartOptions","keywordChartData","_m","_l","item","index","name","util","hits","staticRenderFns","ChartJS","Title","Tooltip","Legend","LinearScale","CategoryScale","ArcElement","BarElement","components","Doughnut","labels","datasets","responsive","maintainAspectRatio","indexAxis","scales","x","ticks","beginAtZero","stacked","y","max","min","autoSkip","dateClass","year","month","day","dateType","yearList","styear","enyear","dayList","menu1","label","searchBids","keywordList","colorList","methods","apiService","setGraph","color","total","colors","cnt","articleDonutDatas","articleData","commentData","backgroundColor","keywordBidTotal","kdata","component","VProgressCircular"],"sourceRoot":""}