{"version":3,"file":"js/5447.46b31b4c.js","mappings":"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","sources":["webpack://livego/../../../src/components/VCheckbox/VCheckbox.ts","webpack://livego/./src/common/util.js","webpack://livego/./src/config/web/apiService.js","webpack://livego/./src/config/web/auth.js","webpack://livego/./src/config/web/urls.js","webpack://livego/./src/views/WEB/board/articleRegist.vue?94dd","webpack://livego/src/views/WEB/board/articleRegist.vue","webpack://livego/./src/views/WEB/board/articleRegist.vue?410e","webpack://livego/./src/views/WEB/board/articleRegist.vue"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","import JQ from \"jquery\";\r\n\r\nexport default {\r\n    errorPosiFlag:false,\r\n    nl2br(text) {\r\n        return text.value.replace(/(\\n|\\r\\n)/g, '<br>');\r\n\r\n    },\r\n    nl2brContent(text) {\r\n        text = text.toString();\r\n        text = text.replace(/(\\n|\\r\\n)/g, '<br>');\r\n        return text.replace(/(<br><br>)/g, '<br>');\r\n    },\r\n    stripTags(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value;\r\n        let text = div.textContent || div.innerText || \"\";\r\n\r\n        return text;\r\n\r\n    },\r\n    stripTagsNotEm(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value.replace(/<em>/ig,'{em}').replace(/<\\/em>/ig,'{/em}')\r\n        let text = div.textContent || div.innerText || \"\";\r\n        let result = text.replace(/{em}/ig,'<em>').replace(/{\\/em}/ig,'</em>')\r\n        return result;\r\n\r\n    },\r\n    email(value) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return pattern.test(value)\r\n    },\r\n    numericByPrice(value) {\r\n        if(value==0)return false;\r\n        if(value) {\r\n\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            return isNaN(targetPrice);\r\n        } else return true;\r\n    },\r\n    numeric(value) {\r\n        return isNaN(value);\r\n    },\r\n    parseNumber(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let number = value.replace(/,/gi, '');\r\n            number = number.toString().replace(/-/gi, '');\r\n            return parseInt(number);\r\n\r\n        } else return 0;\r\n    },\r\n    price(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            if (!this.numeric(targetPrice)) {\r\n                return this.numberFormat(targetPrice);\r\n\r\n            } else return false;\r\n        } else return false;\r\n    },\r\n    br2nl(text) {\r\n        return text.replace(/(<br>|<br\\/>|<br \\/>)/g, '\\r');\r\n    },\r\n    numberFormat(number) {\r\n        if(!number)return 0;\r\n        if(isNaN(number)) {\r\n            number = number.toString().replace(/-/gi, '');\r\n        }\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    fNumberFormat(number) {\r\n        number = number.toString().replace(/-/gi, '');\r\n        number = number.toString().replace(/,/gi, '');\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    getStrCut(string,length) {\r\n        if(string.length >= length){\r\n            return string.substr(0,length)+\"..\";\r\n        } else return string;\r\n    },\r\n    errorPosition(baseEle,targetEle,func) {\r\n        const baseElement = (baseEle=='base')?JQ('body'):JQ(baseEle);\r\n        const height = JQ(baseElement).height();\r\n\r\n        const top = JQ(targetEle).offset().top;\r\n\r\n        const stTop = (top>0)?height - top + 200:height + top - 200;\r\n        if(baseEle=='base') {\r\n\r\n            JQ('html,body').animate({\r\n                scrollTop: (top - 50)\r\n            }, 100, () => {\r\n                if(this.errorPosiFlag) {\r\n                    this.errorPosiFlag = false;\r\n                    return\r\n                }\r\n                func();\r\n                this.errorPosiFlag = true;\r\n            })\r\n        } else {\r\n            JQ(baseElement).animate({\r\n                scrollTop:stTop\r\n\r\n            }, 100, () => {\r\n                func();\r\n            })\r\n        }\r\n    },\r\n\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n    CONFIG_HEADER,\r\n    CONFIG_HEADER_FILE\r\n} from './urls'\r\nimport AUTH from './auth'\r\n\r\nexport default {\r\n    DEBGU: true,\r\n    imgHost:'/',\r\n    post(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n        this.checkBearerToken();\r\n        axios.post(url, frm, {headers: CONFIG_HEADER}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'notLogin':\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n\r\n        });\r\n    },\r\n    async asyncPost(url, frm) {\r\n        this.checkBearerToken();\r\n        return await axios.post(url,frm,{headers: CONFIG_HEADER});\r\n    },\r\n    postFile(url, frm, afterFunc) {\r\n        this.checkDebug();\r\n        this.checkBearerToken();\r\n        axios.post(url, frm, {headers: CONFIG_HEADER_FILE}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'notLogin':\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n\r\n        });\r\n    },\r\n    get(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n        this.checkBearerToken();\r\n        axios.get(url, {params: frm, headers: CONFIG_HEADER}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'notLogin':\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    location.href='/';\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    location.href='/';\r\n                    break;\r\n            }\r\n\r\n\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n            if (errorFunc) errorFunc(error.response.data)\r\n\r\n\r\n\r\n        });\r\n    },\r\n    checkDebug() {\r\n        if (location.hostname == 'localhost') {\r\n            this.DEBGU = true;\r\n            this.imgHost = 'http://localhost/';\r\n\r\n        } else this.DEBGU = false;\r\n    },\r\n    checkBearerToken() {\r\n        const info = AUTH.getSession();\r\n        if (info?.memberInfo) {\r\n            const token = info.token;\r\n            CONFIG_HEADER.Authorization = 'Bearer ' + token;\r\n            CONFIG_HEADER_FILE.Authorization = 'Bearer ' + token;\r\n        }\r\n        if(!sessionStorage.getItem('sessionId')) {\r\n            const now = new Date();\r\n            sessionStorage.setItem('sessionId','sess_'+now.getTime())\r\n        }\r\n        CONFIG_HEADER.sessionId = sessionStorage.getItem('sessionId');\r\n    },\r\n    setError(error) {\r\n\r\n        if (error.response) {\r\n            /*\r\n            switch (error.response.status) {\r\n                case 403:\r\n                case 500:\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                default:\r\n                    AUTH.logout();\r\n                    alert('잘못된 접근입니다');\r\n                    location.href='/';\r\n                    break;\r\n            }\r\n             */\r\n            // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        } else if (error.request) {\r\n            // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n            // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n            // Node.js의 http.ClientRequest 인스턴스입니다.\r\n            console.log(error.request);\r\n        } else {\r\n            // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n            console.log('Error', error.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","import {CONFIG_HEADER, CONFIG_HEADER_FILE} from './urls'\r\n\r\nexport default {\r\n    setDevice(device) {\r\n        \r\n    },\r\n    getSession() {\r\n        let info = {};\r\n        if (sessionStorage.getItem('memberInfo') && sessionStorage.getItem('accessToken')) {\r\n            const memberInfo = JSON.parse(sessionStorage.getItem('memberInfo'))\r\n            const token = sessionStorage.getItem('accessToken')\r\n            if (memberInfo?.id && token) {\r\n                info.memberInfo = memberInfo;\r\n                info.token = token;\r\n            }\r\n        }\r\n        return info;\r\n    },\r\n    setSession(params) {\r\n\r\n        sessionStorage.setItem('memberInfo', JSON.stringify(params.memberInfo))\r\n        sessionStorage.setItem('accessToken', params.access_token)\r\n        CONFIG_HEADER.Authorization = 'Bearer ' + params.access_token;\r\n        CONFIG_HEADER_FILE.Authorization = 'Bearer ' + params.access_token;\r\n\r\n\r\n    },\r\n    updateSession(params) {\r\n        sessionStorage.setItem('memberInfo', JSON.stringify(params))\r\n\r\n    },\r\n    logout() {\r\n        sessionStorage.setItem('memberInfo', '')\r\n        sessionStorage.setItem('accessToken', '')\r\n        CONFIG_HEADER.Authorization = '';\r\n        CONFIG_HEADER_FILE.Authorization = '';\r\n    }\r\n\r\n}\r\n","export const IMGHOST = 'http://localhost';\r\n\r\n\r\nconst BaseUrl = '/api/controller/';\r\n\r\n\r\n/**\r\n * @ 기본설정 정보\r\n */\r\nexport const API_URL_GET_SITE_BASE = BaseUrl + 'setting/getBase'\r\nexport const API_URL_UPDATE_USER_STATISTICS = BaseUrl + 'setting/outMemberStatistics'\r\n\r\n\r\n/**\r\n * @ 메인페이지 정보\r\n */\r\nexport const API_URL_GET_MAIN = BaseUrl + 'setting/getMain'\r\n\r\n\r\n/**\r\n * @ 로그인/ 로그아웃 / 회원가입\r\n */\r\n\r\nexport const API_URL_LOGIN = BaseUrl + 'member/login'\r\nexport const API_URL_LOGOUT = BaseUrl + 'mypage/logout'\r\n\r\n\r\nexport const API_URL_GET_MEMBER_CONFIG = BaseUrl + 'member/getMemberConfig'\r\nexport const API_URL_GET_MEMBER_AGREE = BaseUrl + 'member/getMemberAgree'\r\nexport const API_URL_MEMBER_JOIN = BaseUrl + 'member/join'\r\nexport const API_URL_GET_MEMBER_CHECK_ID = BaseUrl + 'member/checkUid'\r\nexport const API_URL_GET_MEMBER_CHECK_EMAIL = BaseUrl + 'member/checkEmail'\r\nexport const API_URL_GET_MEMBER_CHECK_NICK = BaseUrl + 'member/checkNick'\r\nexport const API_URL_GET_MYPAGE_CHECK_NICK = BaseUrl + 'member/checkMemberNick'\r\n\r\nexport const API_URL_UPDATE_EMAIL_AUTH = BaseUrl + 'member/updateAuthEmail'\r\n\r\n// 비밀번호 찾기\r\nexport const API_URL_FIND_MEMBER_PASS = BaseUrl + 'member/findMemberUpass'\r\nexport const API_URL_UPDATE_EMAIL_AUTH_PASSWORD = BaseUrl + 'member/updateEmailMemberUpass'\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ 방송\r\n */\r\nexport const API_URL_BROADCAST_LIVE_INSERT = BaseUrl + 'broadcastLive/insertLive';\r\nexport const API_URL_BROADCAST_TEST_LIVE_INSERT = BaseUrl + 'broadcastLive/testInsertLive';\r\n\r\nexport const API_URL_BROADCAST_LIVE_INFO = BaseUrl + 'broadcastLive/getLive';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE = BaseUrl + 'broadcastLive/updateLive';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_LOGO = BaseUrl + 'broadcastLive/updateLogo';\r\nexport const API_URL_BROADCAST_CHECK_LIVE_INFO = BaseUrl + 'broadcastLive/checkLiveWithZoomMeeting';\r\n\r\n/// 환경설정\r\nexport const API_URL_BROADCAST_LIVE_ENV_INFO = BaseUrl + 'broadcastLive/getLiveEnv';\r\nexport const API_URL_BROADCAST_LIVE_ENV_UPDATE = BaseUrl + 'broadcastLive/updateLiveEnv';\r\n\r\n// 문자/메일 발송\r\nexport const API_URL_BROADCAST_LIVE_INVITED_USER = BaseUrl + 'broadcastLive/sendInvitedUser';\r\n\r\n\r\n// 시험\r\nexport const API_URL_BROADCAST_LIVE_EXAM_DIRECT_INSERT = BaseUrl + 'broadcastExam/insertDirect';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_DIRECT_MODIFY = BaseUrl + 'broadcastExam/updateDirect';\r\nexport const API_URL_BROADCAST_LIVE_GET_EXAM_USER_LIST = BaseUrl + 'broadcastExam/getExamWithUser';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_AFTER_DELETE = BaseUrl + 'broadcastExam/deleteExamAfter';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_EXCEL_SAMPLE = BaseUrl + 'broadcastExam/getSample';\r\nexport const API_URL_BROADCAST_LIVE_GET_EXAM_USER_REPORT = BaseUrl + 'broadcastExam/getExamWithUserReport';\r\n\r\n\r\n\r\n\r\n//설문조사\r\nexport const API_URL_BROADCAST_LIVE_POLL_INSERT = BaseUrl + 'broadcastPoll/insertPoll';\r\n\r\n// 투표\r\nexport const API_URL_BROADCAST_LIVE_VOTE_INSERT = BaseUrl + 'broadcastVote/insertVote';\r\n\r\n\r\n// 게시판\r\nexport const API_URL_BROADCAST_LIVE_BOARD_INFO = BaseUrl + 'broadcastBoard/getBoardByParentId';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_UPDATE = BaseUrl + 'broadcastBoard/updateBoard';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INFO = BaseUrl + 'broadcastBoardArticle/getBoardArticle';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INSERT = BaseUrl + 'broadcastBoardArticle/insertBoardArticle';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_UPDATE = BaseUrl + 'broadcastBoardArticle/updateBoardArticle';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST = BaseUrl + 'broadcastBoardArticle/getBoardArticleList';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_VIEW_INFO = BaseUrl + 'broadcastBoardArticle/getBoardArticleView';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_UPLOAD = BaseUrl + 'broadcastBoardArticle/uploadBoardArticleFile';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_DOWN = BaseUrl + 'broadcastBoardArticle/downBoardArticleFile';\r\n\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_DELETE = BaseUrl + 'broadcastBoardArticle/deleteArticle';\r\n\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST_WIDTH_BOARDINFO = BaseUrl + 'broadcastBoard/getArticleListWithBoardInfo';\r\n\r\nexport const API_URL_BROADCAST_LIVE_BOARD_REPLE_UPDATE = BaseUrl + 'broadcastComment/updateReple';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_REPLE_LIST = BaseUrl + 'broadcastComment/getRepleList';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_REPLE_DELETE = BaseUrl + 'broadcastComment/deleteReple';\r\n\r\n\r\n\r\n// 라이브 방송 (host)//\r\nexport const API_URL_BROADCAST_HOST_LIVE_INFO = BaseUrl + 'broadcastLive/getLiveHostInfo';\r\nexport const API_URL_BROADCAST_UPDATE_HOST_START_TIME = BaseUrl + 'broadcastLive/UpdateLiveHostStartTime';\r\n\r\nexport const API_URL_BROADCAST_LIVE_EXAM_LIST = BaseUrl + 'broadcastExam/getExamList';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_EXAM_STATUS = BaseUrl + 'broadcastExam/updateExamStatus';\r\nexport const API_URL_BROADCAST_LIVE_USER_RESPONSE_INFO = BaseUrl + 'broadcastLive/getUserResponse';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_INSERT = BaseUrl + 'broadcastQuiz/insertQuiz';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_INFO = BaseUrl + 'broadcastQuiz/getQuiz';\r\nexport const API_URL_BROADCAST_LIVE_POLL_LIST = BaseUrl + 'broadcastPoll/getPollListByParentId';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_POLL_STATUS = BaseUrl + 'broadcastPoll/updatePollStatus';\r\nexport const API_URL_BROADCAST_LIVE_VOTE_LIST = BaseUrl + 'broadcastVote/getVoteListByParentId';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_VOTE_STATUS = BaseUrl + 'broadcastVote/updateVoteStatus';\r\nexport const API_URL_ZOOM_API_GET_USERS = BaseUrl + 'zoomApi/getUserList'; // zoom api 참여자 목록\r\nexport const API_URL_BROADCAST_LIVE_END = BaseUrl + 'broadcastLive/endLive';\r\n\r\n\r\n\r\n\r\n// 라이브 방송 (사용자)//\r\nexport const API_URL_BROADCAST_USER_LIVE_INFO = BaseUrl + 'broadcastUserLive/getLiveInfo';\r\nexport const API_URL_BROADCAST_USER_LIVE_WITH_STATUS_ING  = BaseUrl + 'broadcastUserLive/getAllLive';\r\nexport const API_URL_BROADCAST_LIVE_USER_JOIN = BaseUrl + 'broadcastUserLive/insertLiveUser';\r\nexport const API_URL_BROADCAST_UPDATE_USER_STATUS = BaseUrl + 'broadcastUserLive/updateLiveUserStatus';\r\nexport const API_URL_BROADCAST_LIVE_USER_OUT = BaseUrl + 'broadcastLive/outLiveUser';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_REPLY_INSERT = BaseUrl + 'broadcastExam/insertExamReply';\r\nexport const API_URL_BROADCAST_LIVE_BAD_REPORT_INSERT = BaseUrl + 'broadcast/insertBadReport';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_REPLY_INSERT = BaseUrl + 'broadcastQuiz/insertQuizReply';\r\nexport const API_URL_BROADCAST_LIVE_POLL_REPLY_INSERT = BaseUrl + 'broadcastPoll/insertPollReply';\r\nexport const API_URL_BROADCAST_LIVE_VOTE_REPLY_INSERT = BaseUrl + 'broadcastVote/insertVoteReply';\r\n\r\n\r\n// 라이브 방송 (host, 사용자)//\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_CHAT = BaseUrl + 'broadcast/updateChat';\r\nexport const API_URL_BROADCAST_LIVE_GET_CHAT = BaseUrl + 'broadcast/getChatByParentId';\r\nexport const API_URL_BROADCAST_LIVE_GET_EXAM = BaseUrl + 'broadcastExam/getExamData';\r\nexport const API_URL_BROADCAST_GET_LOGO  = BaseUrl + 'broadcast/getLogo';\r\n\r\n\r\n\r\n// 자료 //\r\nexport const API_URL_BROADCAST_LIVE_DATA_FILE_INSERT = BaseUrl + 'broadcastData/insertFile'; /// 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_LIST = BaseUrl + 'broadcastData/getDataList';/// 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_FILE_SHARE = BaseUrl + 'broadcastData/updateDataShare';/// 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_ALL_LIST = BaseUrl + 'broadcastData/getAllData'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_INFO = BaseUrl + 'broadcastData/getData'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_DELETE = BaseUrl + 'broadcastData/deleteData'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_GET_FILE = BaseUrl + 'broadcastData/getFile'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_DOWN = BaseUrl + 'broadcastData/fileDown'; // 작성완료\r\n\r\nexport const API_URL_BROADCAST_LIVE_DATA_AFTER_LIST = BaseUrl + 'broadcastData/getDataShareList';\r\n\r\n\r\n/*\r\n방송 종료후\r\n */\r\nexport const API_URL_BROADCAST_LIVE_EXAM_AFTER_LIST = BaseUrl + 'broadcastExam/getExamAfterList';\r\n\r\n\r\n//퀴즈\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_AFTER_LIST = BaseUrl + 'broadcastQuiz/getQuizAfterList';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_AFTER_DELETE = BaseUrl + 'broadcastQuiz/deleteQuizAfter';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_AFTER_USER_REPORT = BaseUrl + 'broadcastQuiz/getQuizWithUserReport';\r\n\r\n\r\n// 채팅\r\nexport const API_URL_BROADCAST_LIVE_CHAT_AFTER_LIST = BaseUrl + 'broadcastLive/getChatInfo';\r\n\r\n\r\n//설문조사\r\n\r\nexport const API_URL_BROADCAST_LIVE_POLL_AFTER_INFO = BaseUrl + 'broadcastPoll/getPollAfterInfo';\r\nexport const API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_LIST = BaseUrl + 'broadcastPoll/getPollWithUserList';\r\nexport const API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_INFO = BaseUrl + 'broadcastPoll/getPollWithUserInfo';\r\n\r\n//투표\r\nexport const API_URL_BROADCAST_LIVE_VOTE_AFTER_INFO = BaseUrl + 'broadcastVote/getVoteWithUserInfo';\r\n\r\n\r\n// 사용자 목록\r\nexport const API_URL_BROADCAST_LIVE_END_USER_INFO = BaseUrl + 'broadcastLive/getLiveUserInfo';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n * 마이페이지\r\n */\r\n\r\nexport const API_URL_GET_MYPAGE_BROADCAST_LIST = BaseUrl + 'myPage/getMyBroadcastList';\r\nexport const API_URL_BROADCAST_LIVE_DELETE = BaseUrl + 'broadcastLive/deleteLive';\r\n//export const API_URL_BROADCAST_LIVE_MYLIST = BaseUrl + 'broadcastLive/getMyLiveList';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//----------- 정의 안된 url ------------/\r\n\r\nexport const API_URL_BROADCAST_LIVE_ALL_DATA_LIST = BaseUrl + 'broadcastExam/getExamListByGno';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n * 마이페이지\r\n */\r\n\r\nexport const API_URL_GET_MYPAGE_MAIN = BaseUrl + 'mypage/getMyMain'\r\nexport const API_URL_GET_MYPAGE_ARTICLE = BaseUrl + 'mypage/getMyArticleList'\r\n\r\n\r\nexport const API_URL_GET_MEMBER_INFO = BaseUrl + 'mypage/getMemberInfo'\r\nexport const API_URL_UPDATE_MEMBER_IMAGE = BaseUrl + 'mypage/updateMemberImage'\r\nexport const API_URL_UPDATE_MYPAGE_MEMBER = BaseUrl + 'mypage/updateMemberInfo'\r\nexport const API_URL_UPDATE_MYPAGE_PASSWORD = BaseUrl + 'mypage/updateMemberPassword'\r\nexport const API_URL_UPDATE_MYPAGE_OUT = BaseUrl + 'mypage/memberOut'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//export const API_URL_BROADCAST_NAME_CHECK = BaseUrl + 'broadcast/getNameCheck';\r\n//export const API_URL_BROADCAST_UPDATE = BaseUrl + 'broadcast/updateBroadcast';\r\n//export const API_URL_BROADCAST_GET_MY_BROADCASTINFO = BaseUrl + 'broadcast/getMyBroadcastInfo';\r\n//export const API_URL_BROADCAST_GET_BROADCASTINFO = BaseUrl + 'broadcast/getBroadcastInfo';\r\n\r\nexport const API_URL_BROADCAST_LIST_BY_VTYPE = BaseUrl + 'broadcast/getBroadcastListByVtype';\r\n\r\n\r\n//export const API_URL_BROADCAST_LIVE_INFO_WITH_OWNER = BaseUrl + 'broadcastLive/getLiveWithOwner';\r\n\r\n\r\n//export const API_URL_BROADCAST_LIVE_INFO_BY_VIDEOID = BaseUrl + 'broadcastLive/getLiveByVideoId';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CONFIG_HEADER = {\r\n    Authorization: '',\r\n    'Content-Type': 'application/json;charset=UTF-8'\r\n};\r\n\r\nexport const CONFIG_HEADER_FILE = {\r\n    Authorization: '',\r\n    'Content-Type': 'multipart/form-data;charset=utf-8;'\r\n\r\n};\r\n\r\n//chsoo@kicox.or.kr\r\n\r\n\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-container\"},[_c('div',{staticClass:\"board-title\"},[_vm._v(_vm._s(_vm.boardName))]),_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate.apply(null, arguments)}}},[_c('input',{ref:\"img\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.imgUpload}}),_c('input',{ref:\"downFile\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\"},on:{\"change\":_vm.dfileUpload}}),_c('div',{staticClass:\"product-regist\"},[_c('div',{staticClass:\"product-form\",staticStyle:{\"max-width\":\"100%\",\"padding-top\":\"20px\"}},[_c('ul',{staticClass:\"input-ul\"},[((_vm.wAuth=='all' && !_vm.isLogin) || _vm.modifyUserInfoShow)?_c('li',{staticClass:\"flex-box nouser\"},[_c('div',{staticClass:\"left\"},[_c('div',{staticClass:\"input-box\",attrs:{\"id\":\"userName-required\"}},[_c('v-text-field',{ref:\"userName\",attrs:{\"rules\":[function () { return !!_vm.userName || '작성자명을 입력하세요'; }],\"required\":\"\",\"dense\":\"\",\"placeholder\":\"작성자명을 입력하세요\",\"outlined\":\"\",\"maxLength\":\"20\"},model:{value:(_vm.userName),callback:function ($$v) {_vm.userName=$$v},expression:\"userName\"}})],1)]),_c('div',{staticClass:\"right\"},[_c('div',{staticClass:\"input-box\",attrs:{\"id\":\"userPass-required\"}},[_c('v-text-field',{ref:\"userPass\",attrs:{\"rules\":[function () { return !!_vm.userPass || '비밀번호를 입력하세요'; }],\"required\":\"\",\"type\":\"password\",\"maxLength\":\"10\",\"dense\":\"\",\"placeholder\":\"비밀번호를 입력하세요\",\"outlined\":\"\"},model:{value:(_vm.userPass),callback:function ($$v) {_vm.userPass=$$v},expression:\"userPass\"}})],1)])]):_vm._e(),_c('li',{staticClass:\"flex-box\"},[(_vm.categoryUse=='yes')?_c('div',{staticClass:\"left select-box-left\"},[_c('div',{staticClass:\"select-box\",attrs:{\"id\":\"category-required\"}},[_c('v-select',{ref:\"category\",staticStyle:{\"max-width\":\"500px\"},attrs:{\"dense\":\"\",\"outlined\":\"\",\"rules\":[function () { return !!_vm.category || '카테고리를 선택하세요'; }],\"required\":\"\",\"label\":\"카테고리 선택\",\"items\":_vm.categoryList},model:{value:(_vm.category),callback:function ($$v) {_vm.category=$$v},expression:\"category\"}})],1)]):_vm._e(),_c('div',{staticClass:\"right\"},[_c('div',{staticClass:\"input-box\",attrs:{\"id\":\"subject-required\"}},[_c('v-text-field',{ref:\"subject\",attrs:{\"rules\":[function () { return !!_vm.subject || '제목을 입력하세요'; }],\"required\":\"\",\"maxLength\":\"45\",\"dense\":\"\",\"placeholder\":\"제목을 입력하세요\",\"outlined\":\"\"},model:{value:(_vm.subject),callback:function ($$v) {_vm.subject=$$v},expression:\"subject\"}})],1)])]),_c('li',[_c('div',{staticClass:\"quill-content-box\",staticStyle:{\"width\":\"100%\",\"padding-bottom\":\"12px\"}},[_c('quill-editor',{ref:\"myQuillEditor\",attrs:{\"content\":_vm.content,\"options\":_vm.editorOption},on:{\"change\":function($event){return _vm.onEditorChange($event)}}})],1)])])]),_c('ul',{staticClass:\"input-add\"},[_c('li',[_c('div',{staticClass:\"label\"},[_vm._v(\"태그\")]),_c('div',{staticClass:\"input-box\"},[_c('v-text-field',{attrs:{\"placeholder\":\"쉼표(,)를 이용하여 복수등록 가능\",\"outlined\":\"\",\"dense\":\"\"},model:{value:(_vm.keyword),callback:function ($$v) {_vm.keyword=$$v},expression:\"keyword\"}})],1)]),_c('li',[_c('div',{staticClass:\"label\"},[_vm._v(\"파일 첨부\")]),_c('div',{staticClass:\"input-box\"},[_c('div',{staticClass:\"add-file-box\"},[_c('div',{staticClass:\"detail-file-box\"},_vm._l((_vm.dFileList),function(dfile,index){return _c('v-chip',{staticClass:\"file-dlist\",attrs:{\"close\":\"\",\"color\":\"#000\",\"outlined\":\"\",\"dense\":\"\"},on:{\"click:close\":function($event){return _vm.removeDfile(index)}}},[_vm._v(\" \"+_vm._s(dfile.orgFileName)+\" \")])}),1),_c('v-btn',{staticClass:\"blackButton\",attrs:{\"depressed\":\"\",\"type\":\"button\"},on:{\"click\":function($event){return _vm.addDfile()}}},[_c('span',[_vm._v(\"파일첨부\")])])],1)])]),_c('li',{staticClass:\"setting-li\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"설정\")]),_c('div',{staticClass:\"input-box check-box\",staticStyle:{\"display\":\"flex\",\"margin-top\":\"-10px\"}},[_c('v-checkbox',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"color\":\"#000\",\"value\":\"yes\",\"label\":\"댓글 허용\"},model:{value:(_vm.replyUse),callback:function ($$v) {_vm.replyUse=$$v},expression:\"replyUse\"}}),(_vm.isLogin)?_c('v-checkbox',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"color\":\"#000\",\"value\":\"yes\",\"label\":\"알림\"},model:{value:(_vm.userNotice),callback:function ($$v) {_vm.userNotice=$$v},expression:\"userNotice\"}}):_vm._e(),_c('v-checkbox',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"color\":\"#000\",\"value\":\"yes\",\"label\":\"공개\"},model:{value:(_vm.open),callback:function ($$v) {_vm.open=$$v},expression:\"open\"}}),(_vm.memberInfo.role == 'ROLE_ADMIN')?_c('v-checkbox',{attrs:{\"color\":\"#000\",\"value\":\"yes\",\"label\":\"공지\"},model:{value:(_vm.notice),callback:function ($$v) {_vm.notice=$$v},expression:\"notice\"}}):_vm._e()],1)])])]),_c('div',{staticClass:\"button-row\"},[(_vm.isLogin)?_c('v-btn',{staticClass:\"whiteButton\",staticStyle:{\"width\":\"250px\",\"margin\":\"auto\",\"margin-right\":\"20px\"},attrs:{\"depressed\":\"\",\"rounded\":\"\",\"type\":\"button\"},on:{\"click\":function($event){return _vm.tempSave()}}},[_c('span',[_vm._v(\"임시저장\")])]):_vm._e(),_c('v-btn',{staticClass:\"blackButton\",staticStyle:{\"width\":\"250px\",\"margin\":\"auto\"},attrs:{\"depressed\":\"\",\"rounded\":\"\",\"type\":\"submit\"}},[_c('span',[_vm._v(\"게시글 저장\")])])],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"page-container\">\r\n        <div class=\"board-title\">{{ boardName }}</div>\r\n        <form novalidate @submit.prevent=\"validate\">\r\n            <input type=\"file\" style=\"display: none;\" ref=\"img\" accept=\"image/*\" @change=\"imgUpload\"/>\r\n            <input type=\"file\" style=\"display: none;\" ref=\"downFile\" @change=\"dfileUpload\"/>\r\n\r\n            <div class=\"product-regist\">\r\n                <div class=\"product-form\" style=\"max-width:100%;padding-top:20px;\">\r\n                    <ul class=\"input-ul\">\r\n                        <li v-if=\"(wAuth=='all' && !isLogin) || modifyUserInfoShow\" class=\"flex-box nouser\">\r\n                            <div class=\"left\">\r\n                                <div class=\"input-box\" id=\"userName-required\">\r\n                                    <v-text-field v-model=\"userName\"\r\n                                                  :rules=\"[() => !!userName || '작성자명을 입력하세요']\"\r\n                                                  required\r\n                                                  dense\r\n                                                  placeholder=\"작성자명을 입력하세요\"\r\n                                                  outlined\r\n                                                  ref=\"userName\"\r\n                                                  maxLength=\"20\">\r\n\r\n                                    </v-text-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"right\">\r\n                                <div class=\"input-box\" id=\"userPass-required\">\r\n                                    <v-text-field v-model=\"userPass\"\r\n                                                  :rules=\"[() => !!userPass || '비밀번호를 입력하세요']\"\r\n                                                  required\r\n                                                  ref=\"userPass\"\r\n                                                  type=\"password\"\r\n                                                  maxLength=\"10\"\r\n                                                  dense\r\n                                                  placeholder=\"비밀번호를 입력하세요\"\r\n                                                  outlined>\r\n\r\n                                    </v-text-field>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li class=\"flex-box\">\r\n                            <div class=\"left select-box-left\" v-if=\"categoryUse=='yes'\">\r\n                                <div class=\"select-box\" id=\"category-required\">\r\n                                    <v-select v-model=\"category\"\r\n                                              dense\r\n                                              outlined\r\n                                              :rules=\"[() => !!category || '카테고리를 선택하세요']\"\r\n                                              required\r\n                                              ref=\"category\"\r\n                                              label=\"카테고리 선택\"\r\n                                              style=\"max-width:500px;\"\r\n                                              :items=\"categoryList\">\r\n\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"right\">\r\n                                <div class=\"input-box\" id=\"subject-required\">\r\n                                    <v-text-field v-model=\"subject\"\r\n                                                  :rules=\"[() => !!subject || '제목을 입력하세요']\"\r\n                                                  required\r\n                                                  ref=\"subject\"\r\n                                                  maxLength=\"45\"\r\n                                                  dense\r\n                                                  placeholder=\"제목을 입력하세요\"\r\n                                                  outlined>\r\n\r\n                                    </v-text-field>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </li>\r\n                        <li>\r\n                            <div class=\"quill-content-box\" style=\"width:100%;padding-bottom:12px;\">\r\n                                <quill-editor ref=\"myQuillEditor\" :content=\"content\"\r\n                                              :options=\"editorOption\"\r\n                                              @change=\"onEditorChange($event)\">\r\n                                </quill-editor>\r\n\r\n                            </div>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <ul class=\"input-add\">\r\n                    <li>\r\n                        <div class=\"label\">태그</div>\r\n                        <div class=\"input-box\">\r\n                            <v-text-field v-model=\"keyword\"\r\n                                          placeholder=\"쉼표(,)를 이용하여 복수등록 가능\"\r\n                                          outlined\r\n                                          dense>\r\n                            </v-text-field>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div class=\"label\">파일 첨부</div>\r\n                        <div class=\"input-box\">\r\n                            <div class=\"add-file-box\">\r\n                                <div class=\"detail-file-box\">\r\n                                    <v-chip\r\n                                            v-for=\"(dfile,index) in dFileList\"\r\n                                            class=\"file-dlist\"\r\n                                            close\r\n                                            color=\"#000\"\r\n                                            outlined\r\n                                            dense\r\n                                            @click:close=\"removeDfile(index)\"\r\n                                    >\r\n                                        {{dfile.orgFileName}}\r\n                                    </v-chip>\r\n                                </div>\r\n                                <v-btn class=\"blackButton\" depressed type=\"button\" @click=\"addDfile()\"><span>파일첨부</span>\r\n                                </v-btn>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"setting-li\">\r\n                        <div class=\"label\">설정</div>\r\n                        <div class=\"input-box check-box\" style=\"display:flex;margin-top:-10px;\">\r\n                            <v-checkbox color=\"#000\" v-model=\"replyUse\"\r\n                                        value=\"yes\" style=\"margin-right:20px\" label=\"댓글 허용\"></v-checkbox>\r\n                            <v-checkbox v-model=\"userNotice\" color=\"#000\" v-if=\"isLogin\"\r\n                                        value=\"yes\" style=\"margin-right:20px\" label=\"알림\"></v-checkbox>\r\n                            <v-checkbox v-model=\"open\" color=\"#000\"\r\n                                        value=\"yes\" style=\"margin-right:20px\" label=\"공개\"></v-checkbox>\r\n                            <v-checkbox v-if=\"memberInfo.role == 'ROLE_ADMIN'\" v-model=\"notice\" color=\"#000\"\r\n                                        value=\"yes\" label=\"공지\"></v-checkbox>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"button-row\">\r\n                <v-btn style=\"width:250px;margin:auto;margin-right:20px;\" class=\"whiteButton\" v-if=\"isLogin\"\r\n                       @click=\"tempSave()\" depressed rounded type=\"button\"><span>임시저장</span></v-btn>\r\n                <v-btn style=\"width:250px;margin:auto;\" class=\"blackButton\" depressed rounded type=\"submit\">\r\n                    <span>게시글 저장</span>\r\n                </v-btn>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import apiService from '@/config/web/apiService'\r\n    import {\r\n        API_URL_GET_ARTICLE_REGIST,\r\n        API_URL_INSERT_ARTICLE,\r\n        API_URL_UPDATE_ARTICLE,\r\n        API_URL_INSERT_ARTICLE_TEMP_IMAGE,\r\n        API_URL_INSERT_ARTICLE_TEMP_FILE,\r\n        API_URL_TEMP_BOARD_IS_ARTICLE,\r\n        API_URL_TEMP_BOARD_ARTICLE\r\n    } from '@/config/web/urls'\r\n\r\n    import 'quill/dist/quill.core.css'\r\n    import 'quill/dist/quill.snow.css'\r\n    import 'quill/dist/quill.bubble.css'\r\n    import {quillEditor} from 'vue-quill-editor'\r\n    import JQ from 'jquery'\r\n    import UTIL from '@/common/util'\r\n    import AUTH from \"@/config/web/auth\";\r\n    import {API_ADMIN_TEMP_BOARD_IS_ARTICLE} from \"@/config/admin/urls\";\r\n\r\n    export default {\r\n        components: {\r\n            quillEditor,\r\n        },\r\n        computed: {\r\n            form() {\r\n                return {\r\n                    userName: this.userName,\r\n                    userPass: this.userPass,\r\n                    category: this.category,\r\n                    subject: this.subject,\r\n                }\r\n            },\r\n            editor() {\r\n                return this.$refs.myQuillEditor.quill\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                bid: '',\r\n                id: '',\r\n                info: {},\r\n                boardInfo: {},\r\n                boardList: [],\r\n                bidList: [],\r\n                subject: '',\r\n                content: '',\r\n                editorOption: {\r\n                    placeholder: '내용을 입력하세요',\r\n                    theme: 'snow',\r\n                    modules: {\r\n                        toolbar: {\r\n                            container: [\r\n                                [{'header': 1}, {'header': 2}],               // custom button values\r\n                                ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n                                ['blockquote', 'code-block'],\r\n                                [{'list': 'ordered'}, {'list': 'bullet'}],\r\n                                [{'script': 'sub'}, {'script': 'super'}],      // superscript/subscript\r\n                                [{'indent': '-1'}, {'indent': '+1'}],          // outdent/indent\r\n                                [{'direction': 'rtl'}],                         // text direction\r\n                                [{'size': ['small', false, 'large', 'huge']}],  // custom dropdown\r\n                                [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n                                [{'color': []}, {'background': []}],          // dropdown with defaults from theme\r\n                                //[{ 'font': [] }],\r\n                                [{'align': []}],\r\n                                ['image'],\r\n                                ['link'],\r\n                                ['clean']\r\n                            ],\r\n                            handlers: {\r\n                                image: this.editorImageHandler,\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                },\r\n                btype: '',\r\n                category: '',\r\n                categoryList: [],\r\n                categoryUse: 'no',\r\n                secretUse: 'no',\r\n                secret: '',\r\n                bidDisabled: false,\r\n                imgList: [],\r\n                imgIndex: 0,\r\n                imgSize: {\r\n                    width: 200,\r\n                    height: 200,\r\n                    text: '200×200'\r\n                },\r\n                formHasErrors: false,\r\n                serverFlag: false,\r\n                boardName: '',\r\n                memberInfo: {},\r\n                isLogin: false,\r\n                wAuth: 'user',\r\n                userName: '',\r\n                userPass: '',\r\n                uploadImgType: 'list',\r\n                keyword: '',\r\n                dFileList: [],\r\n                replyUse: 'yes',\r\n                open: 'yes',\r\n                userNotice: 'no',\r\n                sessPass: '',\r\n                notice: 'no',\r\n                modifyUserInfoShow: false,\r\n            };\r\n        },\r\n        created() {\r\n\r\n            this.bid = this.$route.params.bid;\r\n            if (this.$route.params.id != 'regist') {\r\n                this.id = this.$route.params.id;\r\n            }\r\n            const member = AUTH.getSession();\r\n            if (member && member?.memberInfo) {\r\n                this.memberInfo = member.memberInfo;\r\n                this.isLogin = true;\r\n            }\r\n            this.getData();\r\n        },\r\n        methods: {\r\n            getData() {\r\n                const frm = {bid: this.bid, id: this.id};\r\n                apiService.post(API_URL_GET_ARTICLE_REGIST, frm, (res) => {\r\n                    if (res.status == 'success') {\r\n                        this.boardInfo = res.board;\r\n                        if (this.boardInfo.wauth == 'admin') {\r\n                            if (this.memberInfo.role != 'ROLE_ADMIN') {\r\n                                this.$router.push('/');\r\n                                return;\r\n                            }\r\n                        }\r\n                        if (this.boardInfo.wauth == 'user') {\r\n                            if (!this.isLogin) {\r\n                                this.$router.back();\r\n                                return;\r\n                            }\r\n                        }\r\n                        this.wAuth = this.boardInfo.wauth;\r\n                        this.boardName = this.boardInfo.bname;\r\n\r\n                        this.categoryUse = this.boardInfo.categoryUse;\r\n                        if (this.categoryUse == 'yes') {\r\n                            for (let item of JSON.parse(this.boardInfo.categoryList)) {\r\n                                if (item.use == 'yes') {\r\n                                    this.categoryList.push({text: item.name, value: item.code})\r\n                                }\r\n                            }\r\n                        }\r\n                        if (res.info?.bid) {\r\n                            this.info = res.info;\r\n                            if (this.memberInfo.role != 'ROLE_ADMIN') {\r\n                                if (this.info.userId && this.info.userId != this.memberInfo.uid) {\r\n                                    this.$router.push('/');\r\n                                    return;\r\n                                } else if (!this.info.userId) {\r\n                                    if (sessionStorage.getItem('articleSessPass')) {\r\n                                        this.sessPass = sessionStorage.getItem('articleSessPass');\r\n                                    } else {\r\n                                        this.$router.push('/');\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (res.tempArticle) {\r\n                            let params = {\r\n                                type:'confirm',\r\n                                message: '임시저장된 게시글이 존재합니다<br>저장된 글을 불러오겠습니까?',\r\n                                doAction:()=>{\r\n                                    this.info = res.tempArticle;\r\n                                    this.setTempArticle();\r\n                                },\r\n                                cancleAction:() => {\r\n                                    if (this.id) {\r\n                                        this.setIsArticle();\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.$eventBus.$emit('modalOpen', params);\r\n                            return;\r\n                        } else {\r\n                            if (this.id) {\r\n                                this.setIsArticle();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                })\r\n            },\r\n            setTempArticle() {\r\n                this.modifyUserInfoShow = false;\r\n                this.setBaseInfo();\r\n            },\r\n            setIsArticle() {\r\n                if (!this.info.userId) {\r\n                    this.modifyUserInfoShow = true;\r\n                    this.userName = this.info.userName;\r\n                    this.userPass = this.info.userPassword;\r\n                } else {\r\n                    this.modifyUserInfoShow = false;\r\n                }\r\n                this.setBaseInfo();\r\n            },\r\n            setBaseInfo() {\r\n                this.subject = this.info.subject;\r\n                this.content = this.info.content;\r\n                this.replyUse = this.info.replyUse;\r\n                this.userNotice = this.info.userNotice;\r\n                this.notice = this.info.notice;\r\n                this.open = this.info.open;\r\n\r\n\r\n                if (this.info.keywords) {\r\n                    let keywordList = this.info.keywords.split(',');\r\n                    let keywords = [];\r\n                    for (const key of keywordList) {\r\n                        if (key) {\r\n                            keywords.push(key);\r\n                        }\r\n                    }\r\n                    if (keywords.length > 0) {\r\n                        this.keyword = keywords.join(',');\r\n                    }\r\n                }\r\n                if (this.info.dfileOrgNames) {\r\n                    let fileOrgNames = this.info.dfileOrgNames.split(',');\r\n                    let fileNames = this.info.dfileNames.split(',');\r\n                    let searchDfileNames = this.info.searchDfileNames.split(',');\r\n                    let fIndex = 0;\r\n                    for (const fname of fileOrgNames) {\r\n                        let file = fileNames[fIndex]\r\n                        let searchName = searchDfileNames[fIndex]\r\n                        let fData = {\r\n                            orgFileName: fname,\r\n                            fileName: file,\r\n                            searchName: searchName,\r\n                        }\r\n                        this.dFileList.push(fData);\r\n                        fIndex++;\r\n                    }\r\n\r\n                }\r\n                if (this.info.orgImgNames) {\r\n                    let orgImgList = this.info.orgImgNames.split(',');\r\n                    let imgs = this.info.imgs.split(',');\r\n                    let searchImgName = this.info.searchImgNames.split(',');\r\n                    let fIndex = 0;\r\n                    for (const imgName of orgImgList) {\r\n                        let file = imgs[fIndex]\r\n                        let searchName = searchImgName[fIndex]\r\n                        this.imgList.push({\r\n                            orgName: imgName,\r\n                            searchName: searchName,\r\n                            name: file\r\n                        });\r\n                        fIndex++;\r\n                    }\r\n                }\r\n                this.setAddInfo();\r\n            },\r\n            setAddInfo() {\r\n                if (this.boardInfo.categoryUse == 'yes') {\r\n                    this.categoryList = [];\r\n                    for (let item of JSON.parse(this.boardInfo.categoryList)) {\r\n                        if (item.use == 'yes') {\r\n                            this.categoryList.push({text: item.name, value: item.code})\r\n                        }\r\n                    }\r\n                    if (this.categoryList.length > 0) {\r\n                        this.categoryUse = 'yes';\r\n                    }\r\n                    if (this.info.category) this.category = this.info.category\r\n                }\r\n\r\n\r\n            },\r\n            editorImageHandler() {\r\n                this.uploadImgType = 'contentEditor'\r\n                this.$refs.img.click();\r\n            },\r\n            addDfile() {\r\n                this.$refs.downFile.click();\r\n            },\r\n            removeDfile(index) {\r\n                this.dFileList.splice(index, 1)\r\n            },\r\n            dfileUpload() {\r\n                if (this.dFileList.length >= 10) {\r\n                    let params = {\r\n                        message: '첨부파일은 10개 까지만 등록가능합니다',\r\n\r\n                    }\r\n                    this.$eventBus.$emit('modalOpen', params);\r\n                    return;\r\n                }\r\n\r\n                const imgObj = this.$refs.downFile.files;\r\n                let img = imgObj.length > 0 ? imgObj[0] : null;\r\n\r\n                const frm = new FormData();\r\n                frm.append('dfile', img);\r\n                apiService.postFile(API_URL_INSERT_ARTICLE_TEMP_FILE, frm, (res) => {\r\n\r\n                    const searchName = res.orgFileName.replace(res.ext, '');\r\n                    let fData = {\r\n                        orgFileName: res.orgFileName,\r\n                        searchName: searchName,\r\n                        fileName: res.saveFileUrl,\r\n                    }\r\n                    this.dFileList.push(fData);\r\n                    this.$refs.downFile.value = '';\r\n                })\r\n\r\n            },\r\n            imgUpload() {\r\n                const imgObj = this.$refs.img.files;\r\n                let img = imgObj.length > 0 ? imgObj[0] : null;\r\n                const frm = new FormData();\r\n                frm.append('image', img);\r\n                apiService.postFile(API_URL_INSERT_ARTICLE_TEMP_IMAGE, frm, (res) => {\r\n                    switch (this.uploadImgType) {\r\n                        case 'contentEditor':\r\n                            const range = this.editor.getSelection();\r\n                            let url = apiService.imgHost + 'api/controller/board/getArticleImage?imgName=' + encodeURIComponent(res.saveFileUrl)\r\n                            this.editor.insertEmbed(range.index, 'image', url);\r\n                            const searchName = res.orgFileName.replace(res.ext, '');\r\n                            this.imgList.push({\r\n                                orgName: res.orgFileName,\r\n                                searchName: searchName,\r\n                                name: res.saveFileUrl\r\n                            });\r\n\r\n                            break;\r\n                    }\r\n                })\r\n                this.$refs.img.value = '';\r\n\r\n            },\r\n            onEditorChange({quill, html, text}) {\r\n                this.content = html\r\n            },\r\n            validate() {\r\n\r\n                this.formHasErrors = false\r\n                let firstErrorId = '';\r\n                Object.keys(this.form).forEach(f => {\r\n                    let check = false;\r\n                    switch (f) {\r\n                        case 'userName':\r\n                        case 'userPass':\r\n                            if (this.wAuth != 'all' || this.isLogin) {\r\n                                check = true;\r\n                            }\r\n                            break;\r\n                        case 'category':\r\n                            if (this.categoryUse != 'yes') {\r\n                                check = true;\r\n                            }\r\n                            break;\r\n                    }\r\n                    if (!check) {\r\n                        if (!this.form[f]) {\r\n                            this.formHasErrors = true\r\n                            if (!firstErrorId) firstErrorId = f;\r\n                        }\r\n                        this.$refs[f].validate(true)\r\n                    }\r\n\r\n                })\r\n                if (this.formHasErrors) {\r\n                    UTIL.errorPosition('base', '#' + firstErrorId + '-required', () => {\r\n\r\n                    })\r\n                    return;\r\n                }\r\n                if (!this.content) {\r\n                    let params = {\r\n                        message: '내용을 입력하세요',\r\n\r\n                    }\r\n                    this.$eventBus.$emit('modalOpen', params);\r\n                    return;\r\n                }\r\n                let frm = this.getSaveParams();\r\n                if (!frm) return;\r\n\r\n                if (this.serverFlag) return;\r\n                this.serverFlag = true;\r\n                if (this.info?.bid && this.id) {\r\n                    frm.id = this.id;\r\n                }\r\n                this.$eventBus.$emit('overlay', 'open');\r\n                const url = (this.info?.bid && this.id) ? API_URL_UPDATE_ARTICLE : API_URL_INSERT_ARTICLE;\r\n                apiService.post(url, frm, (res) => {\r\n                    this.serverFlag = false;\r\n                    this.$eventBus.$emit('overlay', 'hide');\r\n                    if (res.status == 'success') {\r\n                        let msg = '저장'\r\n                        if (this.id) {\r\n                            msg = '수정'\r\n                        }\r\n                        let params = {\r\n                            message: '게시글 정보가 ' + msg + ' 되었습니다',\r\n                            doAction: () => {\r\n                                this.$router.back();\r\n                            }\r\n                        }\r\n                        this.$eventBus.$emit('modalOpen', params);\r\n\r\n                    }\r\n                })\r\n            },\r\n            getSaveParams() {\r\n                const keywordList = this.keyword.split(',');\r\n                const keywords = [];\r\n                for (const key of keywordList) {\r\n                    if (key) {\r\n                        keywords.push(key.replace(/ /g, ''));\r\n                    }\r\n                }\r\n                if (keywords.length > 10) {\r\n                    let params = {\r\n                        message: '키워드는 10개 까지만 등록가능합니다',\r\n\r\n                    }\r\n                    this.$eventBus.$emit('modalOpen', params);\r\n                    return false;\r\n                }\r\n                let keywordString = '';\r\n                if (keywords.length > 0) {\r\n                    keywordString = keywords.join(',');\r\n                }\r\n                const regex = /<img[^>]+src=[\\\"']?([^>\\\"']+)[\\\"']?[^>]*>/g\r\n                let extractUrl = '';\r\n                let inputOrgImgList = [];\r\n                let inputImgList = [];\r\n                let searchImgNames = [];\r\n                while (extractUrl = regex.exec(this.content)) {\r\n                    if (extractUrl[1]) {\r\n                        let imgName = extractUrl[1].replace(apiService.imgHost + 'api/controller/board/getArticleImage?imgName=', '');\r\n\r\n                        for (let img of this.imgList) {\r\n                            if (imgName == img.name) {\r\n\r\n                                inputOrgImgList.push(img.orgName)\r\n                                inputImgList.push(img.name);\r\n                                searchImgNames.push(img.searchName)\r\n                                //inputImgList.push(img);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                let imgString = '';\r\n                let orgImgString = '';\r\n                let searchImgNameString = '';\r\n                if (inputOrgImgList.length > 0) {\r\n                    imgString = inputImgList.join(',');\r\n                    orgImgString = inputOrgImgList.join(',');\r\n                    searchImgNameString = searchImgNames.join(',');\r\n                }\r\n                let orgDfileNameString = '';\r\n                let dfileNameString = '';\r\n                let searchDfileNameString = '';\r\n                if (this.dFileList.length > 0) {\r\n                    let orgFileNames = [];\r\n                    let fileNames = [];\r\n                    let searchFileNames = [];\r\n                    for (const item of this.dFileList) {\r\n                        orgFileNames.push(item.orgFileName);\r\n                        fileNames.push(item.fileName);\r\n                        searchFileNames.push(item.searchName)\r\n                    }\r\n                    orgDfileNameString = orgFileNames.join(',');\r\n                    dfileNameString = fileNames.join(',');\r\n                    searchDfileNameString = searchFileNames.join(',');\r\n                }\r\n\r\n                let sessPass = (this.sessPass) ? this.sessPass.toString() : '';\r\n                let frm = {\r\n                    subject: this.subject,\r\n                    category: this.category,\r\n                    userName: this.userName,\r\n                    userPassword: this.userPass,\r\n                    bid: this.bid,\r\n                    content: this.content,\r\n                    //dFileList: this.dFileList,\r\n                    orgDfileNameString: orgDfileNameString,\r\n                    dfileNameString: dfileNameString,\r\n                    searchDfileNameString: searchDfileNameString,\r\n                    //keywords: keywords,\r\n                    keywords: keywordString,\r\n                    sessPass: sessPass,\r\n                    //imgList:inputImgList,\r\n                    imgString: imgString,\r\n                    orgImgString: orgImgString,\r\n                    searchImgNameString: searchImgNameString,\r\n                    notice: ((this.notice == 'yes') ? 'yes' : 'no'),\r\n                    replyUse: ((this.replyUse == 'yes') ? 'yes' : 'no'),\r\n                    open: ((this.open == 'yes') ? 'yes' : 'no'),\r\n                    userNotice: ((this.userNotice == 'yes') ? 'yes' : 'no')\r\n                }\r\n                return frm;\r\n\r\n            },\r\n            tempSave() {\r\n\r\n                let frm = this.getSaveParams();\r\n                if (!frm) return;\r\n                if (this.serverFlag) return;\r\n                this.serverFlag = true;\r\n                if (this.id) {\r\n                    frm.id = this.id;\r\n                }\r\n                this.$eventBus.$emit('overlay', 'open');\r\n                const url = (this.id) ? API_URL_TEMP_BOARD_IS_ARTICLE : API_URL_TEMP_BOARD_ARTICLE;\r\n                apiService.post(url, frm, (res) => {\r\n                    this.serverFlag = false;\r\n                    this.$eventBus.$emit('overlay', 'hide');\r\n                    let params = {};\r\n                    if (res.status == 'success') {\r\n                        params = {\r\n                            message: '게시글 정보가 임시저장 되었습니다',\r\n                        }\r\n                        this.$eventBus.$emit('modalOpen', params);\r\n\r\n                    } else {\r\n                        params = {\r\n                            message: '임시저장에 실패하였습니다',\r\n                        }\r\n\r\n                    }\r\n                    this.$eventBus.$emit('modalOpen', params);\r\n\r\n                })\r\n            },\r\n        },\r\n        mounted() {\r\n            JQ('.quill-content-box .ql-editor').css('min-height', '400px');\r\n\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import 'src/assets/style/common';\r\n    @import 'src/assets/style/input';\r\n\r\n    .page-container {\r\n        width: 100%;\r\n        margin: 0;\r\n        padding: 21px 24px;\r\n        min-height: calc(100vh - 300px);\r\n        background: #fff;\r\n\r\n        .board-title {\r\n            font-size: 18px;\r\n            font-weight: bold;\r\n            color: #333333;\r\n            border-bottom: solid 1px #333;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .select-box {\r\n            max-height: 50px;\r\n        }\r\n\r\n\r\n        .input-ul {\r\n            padding: 0;\r\n            margin: 0;\r\n\r\n            li {\r\n                &.flex-box {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n\r\n                    &.nouser {\r\n                        .left {\r\n                            min-width: 48%;\r\n                            width: 48%;\r\n\r\n                        }\r\n\r\n                        .right {\r\n                            width: 48%;\r\n                        }\r\n                    }\r\n\r\n                    .left {\r\n                        min-width: 50%;\r\n                        display: flex;\r\n\r\n                        &.select-box-left {\r\n                            min-width: 200px;\r\n                            margin-right: 10px;\r\n                        }\r\n                    }\r\n\r\n                    .right {\r\n                        width: 100%;\r\n                        display: flex;\r\n                    }\r\n\r\n                    .label {\r\n                        padding: 10px 10px 0 0;\r\n                        font-weight: 600;\r\n                        font-size: 14px;\r\n                        color: #000;\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                .input-box {\r\n                    width: 100%;\r\n                    position: relative;\r\n\r\n                    .error-message {\r\n                        position: absolute;\r\n                        bottom: 8px;\r\n                        left: 10px;\r\n                        color: #880E4F;\r\n                        font-size: 12px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .input-add {\r\n            margin-top: 10px;\r\n            padding: 0;\r\n\r\n            li {\r\n                min-height: 60px;\r\n                line-height: 60px;\r\n                display: flex;\r\n\r\n                .label {\r\n                    font-size: 14px;\r\n                    font-weight: bold;\r\n                    color: #333;\r\n                    min-width: 80px;\r\n                }\r\n\r\n                .add-file-box {\r\n                    display: flex;\r\n                    width: 100%;\r\n\r\n                    .detail-file-box {\r\n                        width: 98%;\r\n                        min-height: 43px;\r\n                        height: auto;\r\n                        border: solid 1px #999;\r\n                        padding: 0 0 5px 5px;\r\n                        border-radius: 5px 0 0 5px;\r\n                        display: flex;\r\n                        flex-wrap: wrap;\r\n\r\n                        .file-dlist {\r\n                            margin: 5px 5px 0 0;\r\n                        }\r\n                    }\r\n\r\n                    .blackButton {\r\n                        min-width: 70px;\r\n                        width: 70px;\r\n                        max-width: 70px;\r\n                        min-height: 44px !important;\r\n                        height: 44px !important;\r\n                        max-height: 100px !important;\r\n\r\n                        border-radius: 0 5px 5px 0;\r\n\r\n                        span {\r\n                            font-size: 12px !important;\r\n                            font-weight: normal !important;\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                .input-box {\r\n                    padding-top: 10px;\r\n                    width: 95%;\r\n\r\n                    &.check-box {\r\n                        ::v-deep .v-label {\r\n                            font-size: 12px;\r\n                            color: #333;\r\n                            margin-left: -5px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .tip {\r\n            position: relative !important;\r\n            padding: 0 0 0 20px;\r\n            margin-bottom: 5px;\r\n            list-style-type: disc;\r\n\r\n            li {\r\n                font-size: 12px;\r\n                color: #880E4F;\r\n            }\r\n        }\r\n\r\n        .button-row {\r\n            text-align: center;\r\n            margin: 30px;\r\n\r\n            span {\r\n                font-size: 14px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 1259px) {\r\n        .page-container {\r\n            .input-ul {\r\n                li {\r\n                    &.flex-box {\r\n                        display: block !important;\r\n\r\n                        &.nouser {\r\n                            .left {\r\n                                width: 100%;\r\n\r\n                            }\r\n\r\n                            .right {\r\n                                width: 100%;\r\n                            }\r\n                        }\r\n\r\n                        .left {\r\n\r\n                            &.select-box-left {\r\n                                width: 100%;\r\n                                margin-right: 0 !important;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            .input-add {\r\n                li {\r\n                    min-height: 40px;\r\n                    line-height: 40px;\r\n                    display: block;\r\n\r\n                    .input-box {\r\n                        padding-top: 0;\r\n                        width: 100%;\r\n\r\n                    }\r\n\r\n                    &.setting-li {\r\n                        padding-top: 20px;\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            .button-row {\r\n                text-align: center;\r\n                margin: 30px;\r\n\r\n                .whiteButton {\r\n                    width: 44%;\r\n                    min-width: 44%;\r\n                    max-width: 44%;\r\n                }\r\n\r\n                .blackButton {\r\n                    width: 44%;\r\n                    min-width: 44%;\r\n                    max-width: 44%;\r\n                }\r\n\r\n                span {\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./articleRegist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./articleRegist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./articleRegist.vue?vue&type=template&id=c6d48e30&scoped=true&\"\nimport script from \"./articleRegist.vue?vue&type=script&lang=js&\"\nexport * from \"./articleRegist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./articleRegist.vue?vue&type=style&index=0&id=c6d48e30&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c6d48e30\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCheckbox,VChip,VSelect,VTextField})\n"],"names":["Selectable","name","props","indeterminate","Boolean","indeterminateIcon","type","String","default","offIcon","onIcon","data","inputIndeterminate","this","computed","classes","VInput","computedIcon","isActive","validationState","isDisabled","hasError","shouldValidate","hasSuccess","hasColor","computedColor","watch","val","$nextTick","$emit","methods","genCheckbox","title","checkboxAttrs","attrs$","$createElement","staticClass","VIcon","setTextColor","dense","dark","light","genInput","toString","genRipple","rippleState","genDefaultSlot","genLabel","errorPosiFlag","nl2br","text","value","replace","nl2brContent","stripTags","div","document","createElement","innerHTML","textContent","innerText","stripTagsNotEm","result","email","pattern","test","numericByPrice","targetPrice","isNaN","numeric","parseNumber","number","parseInt","price","numberFormat","br2nl","nf","Intl","NumberFormat","format","fNumberFormat","getStrCut","string","length","substr","errorPosition","baseEle","targetEle","func","baseElement","JQ","height","top","offset","stTop","animate","scrollTop","DEBGU","imgHost","post","url","frm","afterFunc","errorFunc","checkDebug","checkBearerToken","axios","headers","CONFIG_HEADER","then","res","console","log","status","AUTH","location","href","alert","catch","error","setError","async","postFile","CONFIG_HEADER_FILE","get","params","response","hostname","info","memberInfo","token","sessionStorage","getItem","now","Date","setItem","getTime","request","message","setDevice","device","getSession","JSON","parse","id","setSession","stringify","access_token","updateSession","logout","BaseUrl","API_URL_LOGIN","API_URL_GET_MEMBER_AGREE","API_URL_MEMBER_JOIN","API_URL_GET_MEMBER_CHECK_ID","API_URL_GET_MEMBER_CHECK_EMAIL","API_URL_GET_MEMBER_CHECK_NICK","API_URL_GET_MYPAGE_CHECK_NICK","API_URL_UPDATE_EMAIL_AUTH","API_URL_FIND_MEMBER_PASS","API_URL_UPDATE_EMAIL_AUTH_PASSWORD","API_URL_BROADCAST_LIVE_INSERT","API_URL_BROADCAST_LIVE_INFO","API_URL_BROADCAST_LIVE_UPDATE","API_URL_BROADCAST_LIVE_UPDATE_LOGO","API_URL_BROADCAST_CHECK_LIVE_INFO","API_URL_BROADCAST_LIVE_ENV_INFO","API_URL_BROADCAST_LIVE_ENV_UPDATE","API_URL_BROADCAST_LIVE_INVITED_USER","API_URL_BROADCAST_LIVE_EXAM_DIRECT_INSERT","API_URL_BROADCAST_LIVE_EXAM_DIRECT_MODIFY","API_URL_BROADCAST_LIVE_GET_EXAM_USER_LIST","API_URL_BROADCAST_LIVE_EXAM_AFTER_DELETE","API_URL_BROADCAST_LIVE_EXAM_EXCEL_SAMPLE","API_URL_BROADCAST_LIVE_GET_EXAM_USER_REPORT","API_URL_BROADCAST_LIVE_POLL_INSERT","API_URL_BROADCAST_LIVE_VOTE_INSERT","API_URL_BROADCAST_LIVE_BOARD_INFO","API_URL_BROADCAST_LIVE_BOARD_UPDATE","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INFO","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INSERT","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_UPDATE","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_VIEW_INFO","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_UPLOAD","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_DOWN","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_DELETE","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST_WIDTH_BOARDINFO","API_URL_BROADCAST_LIVE_BOARD_REPLE_UPDATE","API_URL_BROADCAST_LIVE_BOARD_REPLE_LIST","API_URL_BROADCAST_LIVE_BOARD_REPLE_DELETE","API_URL_BROADCAST_HOST_LIVE_INFO","API_URL_BROADCAST_UPDATE_HOST_START_TIME","API_URL_BROADCAST_LIVE_EXAM_LIST","API_URL_BROADCAST_LIVE_UPDATE_EXAM_STATUS","API_URL_BROADCAST_LIVE_USER_RESPONSE_INFO","API_URL_BROADCAST_LIVE_QUIZ_INSERT","API_URL_BROADCAST_LIVE_QUIZ_INFO","API_URL_BROADCAST_LIVE_POLL_LIST","API_URL_BROADCAST_LIVE_UPDATE_POLL_STATUS","API_URL_BROADCAST_LIVE_VOTE_LIST","API_URL_BROADCAST_LIVE_UPDATE_VOTE_STATUS","API_URL_BROADCAST_LIVE_END","API_URL_BROADCAST_USER_LIVE_INFO","API_URL_BROADCAST_USER_LIVE_WITH_STATUS_ING","API_URL_BROADCAST_LIVE_USER_JOIN","API_URL_BROADCAST_UPDATE_USER_STATUS","API_URL_BROADCAST_LIVE_EXAM_REPLY_INSERT","API_URL_BROADCAST_LIVE_BAD_REPORT_INSERT","API_URL_BROADCAST_LIVE_QUIZ_REPLY_INSERT","API_URL_BROADCAST_LIVE_POLL_REPLY_INSERT","API_URL_BROADCAST_LIVE_VOTE_REPLY_INSERT","API_URL_BROADCAST_LIVE_UPDATE_CHAT","API_URL_BROADCAST_LIVE_GET_EXAM","API_URL_BROADCAST_GET_LOGO","API_URL_BROADCAST_LIVE_DATA_FILE_INSERT","API_URL_BROADCAST_LIVE_DATA_LIST","API_URL_BROADCAST_LIVE_DATA_FILE_SHARE","API_URL_BROADCAST_LIVE_DATA_ALL_LIST","API_URL_BROADCAST_LIVE_DATA_INFO","API_URL_BROADCAST_LIVE_DATA_DELETE","API_URL_BROADCAST_LIVE_DATA_GET_FILE","API_URL_BROADCAST_LIVE_DATA_DOWN","API_URL_BROADCAST_LIVE_DATA_AFTER_LIST","API_URL_BROADCAST_LIVE_EXAM_AFTER_LIST","API_URL_BROADCAST_LIVE_QUIZ_AFTER_LIST","API_URL_BROADCAST_LIVE_QUIZ_AFTER_DELETE","API_URL_BROADCAST_LIVE_QUIZ_AFTER_USER_REPORT","API_URL_BROADCAST_LIVE_CHAT_AFTER_LIST","API_URL_BROADCAST_LIVE_POLL_AFTER_INFO","API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_LIST","API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_INFO","API_URL_BROADCAST_LIVE_VOTE_AFTER_INFO","API_URL_BROADCAST_LIVE_END_USER_INFO","API_URL_GET_MYPAGE_BROADCAST_LIST","API_URL_BROADCAST_LIVE_DELETE","API_URL_GET_MEMBER_INFO","API_URL_UPDATE_MEMBER_IMAGE","API_URL_UPDATE_MYPAGE_MEMBER","API_URL_UPDATE_MYPAGE_PASSWORD","API_URL_UPDATE_MYPAGE_OUT","Authorization","render","_vm","_h","_c","_self","_v","_s","boardName","attrs","on","$event","preventDefault","validate","apply","arguments","ref","staticStyle","imgUpload","dfileUpload","wAuth","isLogin","modifyUserInfoShow","userName","model","callback","$$v","expression","userPass","_e","categoryUse","category","categoryList","subject","content","editorOption","onEditorChange","keyword","_l","dfile","index","removeDfile","orgFileName","addDfile","replyUse","userNotice","open","role","notice","tempSave","staticRenderFns","components","quillEditor","bid","boardInfo","boardList","bidList","placeholder","theme","modules","toolbar","container","handlers","image","btype","secretUse","secret","bidDisabled","imgList","imgIndex","imgSize","width","formHasErrors","serverFlag","uploadImgType","dFileList","sessPass","apiService","doAction","cancleAction","keywords","fileName","searchName","orgName","quill","html","Object","check","UTIL","msg","keywordString","inputOrgImgList","inputImgList","searchImgNames","imgString","orgImgString","searchImgNameString","orgFileNames","fileNames","searchFileNames","orgDfileNameString","dfileNameString","searchDfileNameString","userPassword","component","VBtn"],"sourceRoot":""}