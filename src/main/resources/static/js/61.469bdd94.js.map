{"version":3,"file":"js/61.469bdd94.js","mappings":"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","sources":["webpack://livego/../../../src/components/VCheckbox/VCheckbox.ts","webpack://livego/./src/common/util.js","webpack://livego/./src/config/admin/apiService.js","webpack://livego/./src/views/ADMIN/run/board/boardArticleRegist.vue?bfd9","webpack://livego/src/views/ADMIN/run/board/boardArticleRegist.vue","webpack://livego/./src/views/ADMIN/run/board/boardArticleRegist.vue?2813","webpack://livego/./src/views/ADMIN/run/board/boardArticleRegist.vue"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","import JQ from \"jquery\";\r\n\r\nexport default {\r\n    errorPosiFlag:false,\r\n    nl2br(text) {\r\n        return text.value.replace(/(\\n|\\r\\n)/g, '<br>');\r\n\r\n    },\r\n    nl2brContent(text) {\r\n        text = text.toString();\r\n        text = text.replace(/(\\n|\\r\\n)/g, '<br>');\r\n        return text.replace(/(<br><br>)/g, '<br>');\r\n    },\r\n    stripTags(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value;\r\n        let text = div.textContent || div.innerText || \"\";\r\n\r\n        return text;\r\n\r\n    },\r\n    stripTagsNotEm(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value.replace(/<em>/ig,'{em}').replace(/<\\/em>/ig,'{/em}')\r\n        let text = div.textContent || div.innerText || \"\";\r\n        let result = text.replace(/{em}/ig,'<em>').replace(/{\\/em}/ig,'</em>')\r\n        return result;\r\n\r\n    },\r\n    email(value) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return pattern.test(value)\r\n    },\r\n    numericByPrice(value) {\r\n        if(value==0)return false;\r\n        if(value) {\r\n\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            return isNaN(targetPrice);\r\n        } else return true;\r\n    },\r\n    numeric(value) {\r\n        return isNaN(value);\r\n    },\r\n    parseNumber(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let number = value.replace(/,/gi, '');\r\n            number = number.toString().replace(/-/gi, '');\r\n            return parseInt(number);\r\n\r\n        } else return 0;\r\n    },\r\n    price(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            if (!this.numeric(targetPrice)) {\r\n                return this.numberFormat(targetPrice);\r\n\r\n            } else return false;\r\n        } else return false;\r\n    },\r\n    br2nl(text) {\r\n        return text.replace(/(<br>|<br\\/>|<br \\/>)/g, '\\r');\r\n    },\r\n    numberFormat(number) {\r\n        if(!number)return 0;\r\n        if(isNaN(number)) {\r\n            number = number.toString().replace(/-/gi, '');\r\n        }\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    fNumberFormat(number) {\r\n        number = number.toString().replace(/-/gi, '');\r\n        number = number.toString().replace(/,/gi, '');\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    getStrCut(string,length) {\r\n        if(string.length >= length){\r\n            return string.substr(0,length)+\"..\";\r\n        } else return string;\r\n    },\r\n    errorPosition(baseEle,targetEle,func) {\r\n        const baseElement = (baseEle=='base')?JQ('body'):JQ(baseEle);\r\n        const height = JQ(baseElement).height();\r\n\r\n        const top = JQ(targetEle).offset().top;\r\n\r\n        const stTop = (top>0)?height - top + 200:height + top - 200;\r\n        if(baseEle=='base') {\r\n\r\n            JQ('html,body').animate({\r\n                scrollTop: (top - 50)\r\n            }, 100, () => {\r\n                if(this.errorPosiFlag) {\r\n                    this.errorPosiFlag = false;\r\n                    return\r\n                }\r\n                func();\r\n                this.errorPosiFlag = true;\r\n            })\r\n        } else {\r\n            JQ(baseElement).animate({\r\n                scrollTop:stTop\r\n\r\n            }, 100, () => {\r\n                func();\r\n            })\r\n        }\r\n    },\r\n\r\n}\r\n","import axios from 'axios'\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nimport {\r\n    CONFIG_HEADER,\r\n    CONFIG_HEADER_FILE\r\n} from '../admin/urls'\r\n\r\nexport default {\r\n    DEBGU: true,\r\n    accessToken: sessionStorage.getItem('accessToken'),\r\n    version:'1.0.0',\r\n    imgHost:'/',\r\n    post(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n        if (this.accessToken) {\r\n            CONFIG_HEADER.Authorization = 'Bearer '+this.accessToken\r\n        }\r\n        axios.post(url, frm, {headers: CONFIG_HEADER}).then(res => {\r\n\r\n            if (this.DEBGU) {\r\n                console.log(res)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n\r\n        }).catch((error) => {\r\n            if(errorFunc) {\r\n                errorFunc(error)\r\n            } else {\r\n                this.setError(error);\r\n            }\r\n\r\n\r\n        });\r\n    },\r\n    postFile(url, frm, afterFunc) {\r\n        this.checkDebug();\r\n        if (this.accessToken) {\r\n            CONFIG_HEADER_FILE.Authorization = 'Bearer '+this.accessToken\r\n        }\r\n        axios.post(url, frm, {headers: CONFIG_HEADER_FILE}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n\r\n        });\r\n    },\r\n    get(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n\r\n        axios.get(url, {params: frm, headers: CONFIG_HEADER}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            if (res.data.status == 'notLogin') {\r\n                location.href = '/';\r\n                return;\r\n            }\r\n\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    location.href = '/';\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    location.href = '/';\r\n                    break;\r\n            }\r\n\r\n\r\n        }).catch((error) => {\r\n            if (errorFunc) errorFunc(error.response.data)\r\n            else this.setError(error);\r\n\r\n\r\n        });\r\n    },\r\n    checkDebug() {\r\n        if (location.hostname == 'localhost') {\r\n            this.DEBGU = true;\r\n            this.imgHost = 'http://localhost/';\r\n        } else this.DEBGU = false;\r\n    },\r\n    setError(error) {\r\n\r\n        switch (error.response.status) {\r\n            case 500:\r\n                this.accessToken = '';\r\n                CONFIG_HEADER_FILE.Authorization = ''\r\n                location.href = '/';\r\n                break;\r\n            default:  // 이미지 업로드 에러\r\n                alert('잘못된 접근입니다');\r\n                this.accessToken = '';\r\n                CONFIG_HEADER_FILE.Authorization = ''\r\n                location.href = '/';\r\n                break;\r\n        }\r\n\r\n        if (!this.DEBGU) return;\r\n        if (error.response) {\r\n            // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        } else if (error.request) {\r\n            // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n            // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n            // Node.js의 http.ClientRequest 인스턴스입니다.\r\n            console.log(error.request);\r\n        } else {\r\n            // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n            console.log('Error', error.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-container\"},[_c('div',{staticClass:\"product-container\"},[_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate.apply(null, arguments)}}},[_c('input',{ref:\"img\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.imgUpload}}),_c('input',{ref:\"downFile\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\"},on:{\"change\":_vm.dfileUpload}}),_c('div',{staticClass:\"product-regist\"},[_c('div',{staticClass:\"product-title\"},[_vm._v(\"기본정보\")]),_c('div',{staticClass:\"product-form\"},[_c('table',{staticClass:\"table-regist\",attrs:{\"cellspacing\":\"0\",\"cellpadding\":\"0\",\"border\":\"0\"}},[_c('tbody',[_c('tr',[_vm._m(0),_c('td',{attrs:{\"colspan\":\"3\"}},[_c('div',{staticClass:\"select-box\",attrs:{\"id\":\"bid-required\"}},[_c('v-select',{ref:\"bid\",staticStyle:{\"max-width\":\"330px\"},attrs:{\"dense\":\"\",\"rules\":[function () { return !!_vm.bid || '게시판을 선택하세요'; }],\"outlined\":\"\",\"required\":\"\",\"disabled\":_vm.bidDisabled,\"label\":\"게시판 선택\",\"items\":_vm.bidList},model:{value:(_vm.bid),callback:function ($$v) {_vm.bid=$$v},expression:\"bid\"}})],1)])]),(_vm.userInfoShow)?_c('tr',[_vm._m(1),_c('td',{attrs:{\"id\":\"userinfo-required\"}},[_c('div',{staticClass:\"input-box\"},[_c('v-text-field',{ref:\"userName\",attrs:{\"rules\":[function () { return !!_vm.userName || '작성자명을 입력하세요'; }],\"required\":\"\",\"dense\":\"\",\"maxLength\":\"20\"},model:{value:(_vm.userName),callback:function ($$v) {_vm.userName=$$v},expression:\"userName\"}})],1)]),_vm._m(2),_c('td',[_c('div',{staticClass:\"input-box\"},[_c('v-text-field',{ref:\"userPass\",attrs:{\"rules\":[function () { return !!_vm.userPass || '비밀번호를 입력하세요'; }],\"required\":\"\",\"type\":\"password\",\"maxLength\":\"10\",\"dense\":\"\"},model:{value:(_vm.userPass),callback:function ($$v) {_vm.userPass=$$v},expression:\"userPass\"}})],1)])]):_vm._e(),(_vm.categoryUse=='yes')?_c('tr',[_vm._m(3),_c('td',{attrs:{\"id\":\"category-required\",\"colspan\":\"3\"}},[_c('div',{staticClass:\"select-box\"},[_c('v-select',{ref:\"category\",staticStyle:{\"max-width\":\"330px\"},attrs:{\"dense\":\"\",\"outlined\":\"\",\"rules\":[function () { return !!_vm.category || '카테고리를 선택하세요'; }],\"required\":\"\",\"label\":\"카테고리를 선택하세요\",\"items\":_vm.categoryList},model:{value:(_vm.category),callback:function ($$v) {_vm.category=$$v},expression:\"category\"}})],1)])]):_vm._e(),_c('tr',[_vm._m(4),_c('td',{attrs:{\"id\":\"subject-required\",\"colspan\":\"3\"}},[_c('div',{staticClass:\"input-box\",staticStyle:{\"width\":\"830px\"}},[_c('v-text-field',{ref:\"subject\",attrs:{\"rules\":[function () { return !!_vm.subject || '제목을 입력하세요'; }],\"required\":\"\",\"maxLength\":\"45\",\"dense\":\"\"},model:{value:(_vm.subject),callback:function ($$v) {_vm.subject=$$v},expression:\"subject\"}})],1)])]),_c('tr',[_vm._m(5),_c('td',{attrs:{\"colspan\":\"3\"}},[_c('div',{staticClass:\"quill-content-box\",staticStyle:{\"width\":\"830px\",\"padding-bottom\":\"12px\"}},[_c('quill-editor',{ref:\"myQuillEditor\",attrs:{\"content\":_vm.content,\"options\":_vm.editorOption},on:{\"change\":function($event){return _vm.onEditorChange($event)}}})],1)])])])])]),_c('div',{staticClass:\"product-title\",staticStyle:{\"padding-top\":\"30px\"}},[_vm._v(\"추가정보\")]),_c('div',{staticClass:\"product-form\"},[_c('table',{staticClass:\"table-regist\",attrs:{\"cellspacing\":\"0\",\"cellpadding\":\"0\",\"border\":\"0\"}},[_c('tbody',[_c('tr',[_c('th',[_vm._v(\"태그\")]),_c('td',[_c('div',{staticClass:\"input-box\",staticStyle:{\"width\":\"830px\"}},[_c('v-text-field',{attrs:{\"placeholder\":\"쉼표(,)를 이용하여 복수등록 가능\",\"dense\":\"\"},model:{value:(_vm.keyword),callback:function ($$v) {_vm.keyword=$$v},expression:\"keyword\"}})],1)])]),_c('tr',[_c('th',[_vm._v(\"파일첨부\")]),_c('td',[_c('v-btn',{staticClass:\"white-button\",attrs:{\"depressed\":\"\",\"type\":\"button\"},on:{\"click\":function($event){return _vm.addDfile()}}},[_vm._v(\"파일첨부\")]),_c('div',{staticClass:\"detail-file-box\",staticStyle:{\"padding-top\":\"5px\"}},_vm._l((_vm.dFileList),function(dfile,index){return _c('v-chip',{staticClass:\"ma-2\",attrs:{\"close\":\"\",\"color\":\"green\",\"outlined\":\"\"},on:{\"click:close\":function($event){return _vm.removeDfile(index)}}},[_vm._v(\" \"+_vm._s(dfile.orgFileName)+\" \")])}),1)],1)]),_c('tr',[_c('th',[_vm._v(\"추가설정\")]),_c('td',{staticStyle:{\"padding-bottom\":\"20px\"}},[_c('div',{staticClass:\"input-box\",staticStyle:{\"display\":\"flex\",\"margin-top\":\"-10px\"}},[_c('v-checkbox',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"color\":\"#000\",\"value\":\"yes\",\"label\":\"댓글 허용\"},model:{value:(_vm.replyUse),callback:function ($$v) {_vm.replyUse=$$v},expression:\"replyUse\"}}),_c('v-checkbox',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"value\":\"yes\",\"color\":\"#000\",\"label\":\"알림\"},model:{value:(_vm.userNotice),callback:function ($$v) {_vm.userNotice=$$v},expression:\"userNotice\"}}),_c('v-checkbox',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"value\":\"yes\",\"color\":\"#000\",\"label\":\"공개\"},model:{value:(_vm.open),callback:function ($$v) {_vm.open=$$v},expression:\"open\"}}),_c('v-checkbox',{attrs:{\"color\":\"#000\",\"value\":\"yes\",\"label\":\"공지\"},model:{value:(_vm.notice),callback:function ($$v) {_vm.notice=$$v},expression:\"notice\"}})],1)])])])])])]),_c('div',{staticClass:\"button-row\"},[_c('v-btn',{staticClass:\"submit-button\",staticStyle:{\"margin-right\":\"30px\",\"background\":\"#888 !important\"},attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.tempSave()}}},[_vm._v(\"임시 저장 \")]),_c('v-btn',{staticClass:\"submit-button\",attrs:{\"type\":\"submit\"}},[_vm._v(\"게시글 등록\")])],1)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_c('span',{staticClass:\"required-icon\"},[_vm._v(\"*\")]),_vm._v(\"게시판 선택\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_c('span',{staticClass:\"required-icon\"},[_vm._v(\"*\")]),_vm._v(\"작성자\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',{staticStyle:{\"border-left\":\"none\"}},[_c('span',{staticClass:\"required-icon\"},[_vm._v(\"*\")]),_vm._v(\"비밀번호\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_c('span',{staticClass:\"required-icon\"},[_vm._v(\"*\")]),_vm._v(\"카테고리\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_c('span',{staticClass:\"required-icon\"},[_vm._v(\"*\")]),_vm._v(\"제목\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_c('span',{staticClass:\"required-icon\"},[_vm._v(\"*\")]),_vm._v(\"내용\")])}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"page-container\">\n        <div class=\"product-container\">\n            <form novalidate @submit.prevent=\"validate\">\n                <input type=\"file\" style=\"display: none;\" ref=\"img\" accept=\"image/*\" @change=\"imgUpload\"/>\n                <input type=\"file\" style=\"display: none;\" ref=\"downFile\" @change=\"dfileUpload\"/>\n\n                <div class=\"product-regist\">\n                    <div class=\"product-title\">기본정보</div>\n                    <div class=\"product-form\">\n                        <table class=\"table-regist\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n                            <tbody>\n                            <tr>\n                                <th><span class=\"required-icon\">*</span>게시판 선택</th>\n                                <td colspan=\"3\">\n                                    <div class=\"select-box\" id=\"bid-required\">\n                                        <v-select ref=\"bid\" v-model=\"bid\"\n                                                  dense\n                                                  :rules=\"[() => !!bid || '게시판을 선택하세요']\"\n                                                  outlined\n                                                  required\n                                                  :disabled=\"bidDisabled\"\n                                                  label=\"게시판 선택\"\n                                                  style=\"max-width:330px;\"\n                                                  :items=\"bidList\">\n\n                                        </v-select>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr v-if=\"userInfoShow\">\n                                <th><span class=\"required-icon\">*</span>작성자</th>\n                                <td id=\"userinfo-required\">\n                                    <div class=\"input-box\">\n                                        <v-text-field v-model=\"userName\"\n                                                      :rules=\"[() => !!userName || '작성자명을 입력하세요']\"\n                                                      required\n                                                      dense\n                                                      ref=\"userName\"\n                                                      maxLength=\"20\">\n\n                                        </v-text-field>\n                                    </div>\n                                </td>\n                                <th style=\"border-left:none;\"><span class=\"required-icon\">*</span>비밀번호</th>\n                                <td>\n                                    <div class=\"input-box\">\n                                        <v-text-field v-model=\"userPass\"\n                                                      :rules=\"[() => !!userPass || '비밀번호를 입력하세요']\"\n                                                      required\n                                                      ref=\"userPass\"\n                                                      type=\"password\"\n                                                      maxLength=\"10\"\n                                                      dense>\n\n                                        </v-text-field>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr v-if=\"categoryUse=='yes'\">\n                                <th><span class=\"required-icon\">*</span>카테고리</th>\n                                <td id=\"category-required\" colspan=\"3\">\n                                    <div class=\"select-box\">\n                                        <v-select v-model=\"category\"\n                                                  dense\n                                                  outlined\n                                                  :rules=\"[() => !!category || '카테고리를 선택하세요']\"\n                                                  required\n                                                  ref=\"category\"\n                                                  label=\"카테고리를 선택하세요\"\n                                                  style=\"max-width:330px;\"\n                                                  :items=\"categoryList\">\n\n                                        </v-select>\n                                    </div>\n                                </td>\n                            </tr>\n                            <!--tr v-if=\"secretUse=='yes'\">\n                                <th>비밀글 여부</th>\n                                <td>\n                                    <div class=\"radio-box\" style=\"max-height:40px;\">\n                                        <v-checkbox\n                                                v-model=\"secret\"\n                                                label=\"비밀글\"\n                                                value=\"yes\"\n                                        ></v-checkbox>\n                                    </div>\n                                </td>\n                            </tr-->\n                            <tr>\n                                <th><span class=\"required-icon\">*</span>제목</th>\n                                <td id=\"subject-required\" colspan=\"3\">\n                                    <div class=\"input-box\" style=\"width:830px;\">\n                                        <v-text-field v-model=\"subject\"\n                                                      :rules=\"[() => !!subject || '제목을 입력하세요']\"\n                                                      required\n                                                      ref=\"subject\"\n                                                      maxLength=\"45\"\n                                                      dense>\n\n                                        </v-text-field>\n\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th><span class=\"required-icon\">*</span>내용</th>\n                                <td colspan=\"3\">\n                                    <div class=\"quill-content-box\" style=\"width:830px;padding-bottom:12px;\">\n                                        <quill-editor ref=\"myQuillEditor\" :content=\"content\"\n                                                      :options=\"editorOption\"\n                                                      @change=\"onEditorChange($event)\">\n                                        </quill-editor>\n\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div class=\"product-title\" style=\"padding-top:30px;\">추가정보</div>\n                    <div class=\"product-form\">\n                        <table class=\"table-regist\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n                            <tbody>\n                            <tr>\n                                <th>태그</th>\n                                <td>\n                                    <div class=\"input-box\" style=\"width:830px;\">\n                                        <v-text-field v-model=\"keyword\"\n                                                      placeholder=\"쉼표(,)를 이용하여 복수등록 가능\"\n                                                      dense>\n                                        </v-text-field>\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th>파일첨부</th>\n                                <td>\n                                    <v-btn class=\"white-button\" depressed type=\"button\" @click=\"addDfile()\">파일첨부</v-btn>\n                                    <div class=\"detail-file-box\" style=\"padding-top:5px;\">\n                                        <v-chip\n                                                v-for=\"(dfile,index) in dFileList\"\n                                                class=\"ma-2\"\n                                                close\n                                                color=\"green\"\n                                                outlined\n                                                @click:close=\"removeDfile(index)\"\n                                        >\n                                            {{dfile.orgFileName}}\n                                        </v-chip>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>추가설정</th>\n                                <td style=\"padding-bottom:20px;\">\n                                    <div class=\"input-box\" style=\"display: flex;margin-top:-10px;\">\n                                        <v-checkbox color=\"#000\" v-model=\"replyUse\"\n                                                    value=\"yes\" style=\"margin-right:20px\" label=\"댓글 허용\"></v-checkbox>\n                                        <v-checkbox v-model=\"userNotice\"\n                                                    value=\"yes\" color=\"#000\" style=\"margin-right:20px\"\n                                                    label=\"알림\"></v-checkbox>\n                                        <v-checkbox v-model=\"open\"\n                                                    value=\"yes\" color=\"#000\" style=\"margin-right:20px\"\n                                                    label=\"공개\"></v-checkbox>\n                                        <v-checkbox v-model=\"notice\" color=\"#000\"\n                                                    value=\"yes\" label=\"공지\"></v-checkbox>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n\n                </div>\n                <div class=\"button-row\">\n                    <v-btn class=\"submit-button\" @click=\"tempSave()\"\n                           style=\"margin-right:30px;background:#888 !important;\" type=\"button\">임시 저장\n                    </v-btn>\n                    <v-btn class=\"submit-button\" type=\"submit\">게시글 등록</v-btn>\n                </div>\n            </form>\n        </div>\n\n    </div>\n</template>\n\n\n<script>\n    import apiService from '@/config/admin/apiService'\n    import {\n        API_ADMIN_INSERT_BOARD_ARTICLE,\n        API_ADMIN_UPDATE_BOARD_ARTICLE,\n        API_ADMIN_GET_BOARD_ARTICLE_REGIST,\n        API_ADMIN_INSERT_ARTICLE_TEMP_FILE,\n        API_ADMIN_INSERT_ARTICLE_TEMP_IMAGE,\n        API_ADMIN_TEMP_BOARD_IS_ARTICLE,\n        API_ADMIN_TEMP_BOARD_ARTICLE\n\n    } from '@/config/admin/urls'\n    import 'quill/dist/quill.core.css'\n    import 'quill/dist/quill.snow.css'\n    import 'quill/dist/quill.bubble.css'\n    import {quillEditor} from 'vue-quill-editor'\n    import JQ from 'jquery'\n    import UTIL from '@/common/util'\n\n    export default {\n        components: {\n            quillEditor,\n        },\n        computed: {\n            form() {\n                return {\n                    bid: this.bid,\n                    category: this.category,\n                    subject: this.subject,\n                }\n            },\n            editor() {\n                return this.$refs.myQuillEditor.quill\n            }\n        },\n        watch: {\n            bid(val) {\n                for (let brd of this.boardList) {\n                    if (val == brd.bid) {\n                        this.boardInfo = brd;\n                        break;\n                    }\n                }\n\n                //this.btype = this.boardInfo.btype;\n                //this.secretUse = this.boardInfo.secret;\n                this.categoryUse = this.boardInfo.categoryUse;\n                if (this.categoryUse == 'yes') {\n                    for (let item of JSON.parse(this.boardInfo.categoryList)) {\n                        if (item.use == 'yes') {\n                            this.categoryList.push({text: item.name, value: item.code})\n                        }\n\n\n                    }\n                }\n                if (this.getInfoFlag) {\n                    this.setAddInfo()\n                    this.getInfoFlag = false;\n                }\n\n            }\n        },\n        data() {\n            return {\n                id: '',\n                bid: '',\n                info: {},\n                boardInfo: {},\n                boardList: [],\n                bidList: [],\n                subject: '',\n                content: '',\n                userInfoShow: false,\n                editorOption: {\n                    placeholder: '내용을 입력하세요',\n                    theme: 'snow',\n                    modules: {\n                        toolbar: {\n                            container: [\n                                [{'header': 1}, {'header': 2}],               // custom button values\n                                ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n                                ['blockquote', 'code-block'],\n                                [{'list': 'ordered'}, {'list': 'bullet'}],\n                                [{'script': 'sub'}, {'script': 'super'}],      // superscript/subscript\n                                [{'indent': '-1'}, {'indent': '+1'}],          // outdent/indent\n                                [{'direction': 'rtl'}],                         // text direction\n                                [{'size': ['small', false, 'large', 'huge']}],  // custom dropdown\n                                [{'header': [1, 2, 3, 4, 5, 6, false]}],\n                                [{'color': []}, {'background': []}],          // dropdown with defaults from theme\n                                //[{ 'font': [] }],\n                                [{'align': []}],\n                                ['image'],\n                                ['link'],\n                                ['clean']\n                            ],\n                            handlers: {\n                                image: this.editorImageHandler,\n                            }\n                        }\n                    }\n\n                },\n                btype: '',\n                category: '',\n                categoryList: [],\n                categoryUse: 'no',\n                secretUse: 'no',\n                secret: '',\n                bidDisabled: false,\n                imgs: [\n                    {\n                        isfile: '',\n                        file: null,\n                        url: ''\n                    },\n\n                ],\n                imgIndex: 0,\n                imgSize: {\n                    width: 200,\n                    height: 200,\n                    text: '200×200'\n                },\n                keyword: '',\n                dFileList: [],\n                replyUse: 'yes',\n                open: 'yes',\n                userNotice: 'no',\n                formHasErrors: false,\n                serverFlag: false,\n                getInfoFlag: false,\n                uploadImgType: 'list',\n                indexId: '',\n                notice: \"no\",\n                userName: '',\n                userPass: '',\n                imgList: [],\n                userId:'',\n            };\n        },\n        created() {\n            if (this.$route.params.id != 'new') this.id = this.$route.params.id;\n            this.getData();\n        },\n        methods: {\n            getData() {\n                const frm = {id: this.id};\n                apiService.post(API_ADMIN_GET_BOARD_ARTICLE_REGIST, frm, (res) => {\n                    if (res) {\n                        this.boardList = res.boardList;\n                        for (let item of res.boardList) {\n                            if (res.info?.bid && (res.info?.bid == item.bid)) {\n                                this.boardInfo = item;\n                            }\n                            this.bidList.push({text: item.bname, value: item.bid});\n                        }\n                        if (res.info?.bid) {\n                            this.indexId = this.id;\n                            this.info = res.info;\n                            this.userId = this.info.userId;\n                        } else {\n                            this.indexId = '';\n                            this.userId = '';\n                        }\n\n                        if (res.tempArticle) {\n                            let params = {\n                                type:'confirm',\n                                message: '임시저장된 게시글이 존재합니다<br>저장된 글을 불러오겠습니까?',\n                                doAction:()=>{\n                                    this.info = res.tempArticle;\n\n                                    this.setTempArticle();\n                                },\n                                cancleAction:() => {\n                                    if (this.indexId) {\n                                        this.setIsArticle();\n                                    }\n                                }\n                            }\n                            this.$eventBus.$emit('modalOpen', params);\n                            return;\n                        } else {\n                            if (this.indexId) {\n                                this.setIsArticle();\n                            }\n                        }\n\n                    }\n                })\n            },\n            setTempArticle() {\n                this.getInfoFlag = true;\n                this.bid = this.info.bid;\n                if(this.indexId) {\n                    if (this.userId) {\n                        this.userInfoShow = false;\n                    } else {\n                        this.userInfoShow = true;\n                        this.userName = this.info.userName;\n                        this.userPass = this.info.userPassword;\n                    }\n                    this.bidDisabled = true;\n                } else {\n                    this.userInfoShow = false;\n                }\n                this.setBaseInfo();\n            },\n            setIsArticle() {\n\n                this.getInfoFlag = true;\n                this.bid = this.info.bid;\n                if (this.info.userId) {\n                    this.userInfoShow = false;\n                } else {\n                    this.userInfoShow = true;\n                    this.userName = this.info.userName;\n                    this.userPass = this.info.userPassword;\n                }\n\n                this.bidDisabled = true;\n                this.setBaseInfo();\n            },\n            setBaseInfo() {\n                this.subject = this.info.subject;\n                this.content = this.info.content;\n                this.replyUse = this.info.replyUse;\n                this.userNotice = this.info.userNotice;\n                this.notice = this.info.notice;\n                this.open = this.info.open;\n\n\n                if (this.info.keywords) {\n                    let keywordList = this.info.keywords.split(',');\n                    let keywords = [];\n                    for (const key of keywordList) {\n                        if (key) {\n                            keywords.push(key);\n                        }\n                    }\n                    if (keywords.length > 0) {\n                        this.keyword = keywords.join(',');\n                    }\n                }\n                if (this.info.dfileOrgNames) {\n                    let fileOrgNames = this.info.dfileOrgNames.split(',');\n                    let fileNames = this.info.dfileNames.split(',');\n                    let searchDfileNames = this.info.searchDfileNames.split(',');\n                    let fIndex = 0;\n                    for (const fname of fileOrgNames) {\n                        let file = fileNames[fIndex]\n                        let searchName = searchDfileNames[fIndex]\n                        let fData = {\n                            orgFileName: fname,\n                            fileName: file,\n                            searchName: searchName,\n                        }\n                        this.dFileList.push(fData);\n                        fIndex++;\n                    }\n\n                }\n                if (this.info.orgImgNames) {\n                    let orgImgList = this.info.orgImgNames.split(',');\n                    let imgs = this.info.imgs.split(',');\n                    let searchImgName = this.info.searchImgNames.split(',');\n                    let fIndex = 0;\n                    for (const imgName of orgImgList) {\n                        let file = imgs[fIndex]\n                        let searchName = searchImgName[fIndex]\n                        this.imgList.push({\n                            orgName: imgName,\n                            searchName: searchName,\n                            name: file\n                        });\n                        fIndex++;\n                    }\n                }\n            },\n            setAddInfo() {\n                if (this.boardInfo.categoryUse == 'yes') {\n                    if (this.info.category) this.category = this.info.category\n                }\n\n            },\n            editorImageHandler() {\n                this.uploadImgType = 'contentEditor'\n                this.$refs.img.click();\n            },\n            deleteImg(index) {\n                this.imgs.splice(index, 1)\n                this.imgs.push({isfile: '', file: null, url: ''});\n\n            },\n            insertImg(index) {\n                this.uploadImgType = 'list'\n                this.$refs.img.click();\n            },\n            addDfile() {\n                this.uploadImgType = 'dfile'\n                this.$refs.downFile.click();\n            },\n            dfileUpload() {\n                if (this.dFileList.length >= 10) {\n                    let params = {\n                        message: '첨부파일은 10개 까지만 등록가능합니다',\n\n                    }\n                    this.$eventBus.$emit('modalOpen', params);\n                    return;\n                }\n\n                const imgObj = this.$refs.downFile.files;\n                let img = imgObj.length > 0 ? imgObj[0] : null;\n\n                const frm = new FormData();\n                frm.append('dfile', img);\n                apiService.postFile(API_ADMIN_INSERT_ARTICLE_TEMP_FILE, frm, (res) => {\n                    const searchName = res.orgFileName.replace(res.ext, '');\n                    let fData = {\n                        orgFileName: res.orgFileName,\n                        searchName: searchName,\n                        fileName: res.saveFileUrl,\n                    }\n                    this.dFileList.push(fData);\n                    this.$refs.downFile.value = '';\n                })\n\n            },\n            imgUpload() {\n                const imgObj = this.$refs.img.files;\n                let img = imgObj.length > 0 ? imgObj[0] : null;\n\n                const frm = new FormData();\n                frm.append('image', img);\n                apiService.postFile(API_ADMIN_INSERT_ARTICLE_TEMP_IMAGE, frm, (res) => {\n\n                    switch (this.uploadImgType) {\n                        case 'contentEditor':\n                            const range = this.editor.getSelection();\n                            let url = apiService.imgHost + 'api/controller/board/getArticleImage?imgName=' + encodeURIComponent(res.saveFileUrl)\n                            this.editor.insertEmbed(range.index, 'image', url);\n                            const searchName = res.orgFileName.replace(res.ext, '');\n                            this.imgList.push({\n                                orgName: res.orgFileName,\n                                searchName: searchName,\n                                name: res.saveFileUrl\n                            });\n\n                            this.$refs.img.value = '';\n                            break;\n                        /*\n                         case 'list':\n                            let imgData = {\n                                isfile: '',\n                                orgFileName: res.orgFileName,\n                                imgName: res.saveFileUrl,\n                                url: apiService.imgHost + 'api/controller/board/getArticleImage?imgName=' + encodeURIComponent(res.saveFileUrl)\n                            }\n                            this.imgs.splice(0, 1, imgData);\n                            this.$refs.img.value = '';\n                            break;\n\n                         */\n                    }\n\n                })\n\n            },\n            removeDfile(index) {\n                this.dFileList.splice(index, 1)\n            },\n            onEditorChange({quill, html, text}) {\n                // console.log('editor change!', quill, html, text)\n                this.content = html\n            },\n            validate() {\n\n                this.formHasErrors = false\n                const updParams = {};\n                let firstErrorId = '';\n                Object.keys(this.form).forEach(f => {\n                    let check = false;\n                    switch (f) {\n                        case 'category':\n                            if (this.categoryUse != 'yes') {\n                                check = true;\n                            }\n                            break;\n                    }\n                    if (!check) {\n                        if (!this.form[f]) {\n                            this.formHasErrors = true\n                            if (!firstErrorId) firstErrorId = f;\n                        }\n                        this.$refs[f].validate(true)\n                    }\n                    updParams[f] = this.form[f];\n                })\n                if (this.formHasErrors) {\n                    UTIL.errorPosition('base', '#' + firstErrorId + '-required', () => {\n\n                    })\n                    return;\n                }\n                if (this.userInfoShow) {\n                    if (!this.userName) {\n                        this.$refs.userName.validate(true)\n                        UTIL.errorPosition('base', '#userinfo-required', () => {\n\n                        })\n                        return;\n                    }\n                    if (!this.userPass) {\n                        this.$refs.userPass.validate(true)\n                        UTIL.errorPosition('base', '#userinfo-required', () => {\n\n                        })\n                        return;\n                    }\n                    updParams['userName'] = this.userName;\n                    updParams['userPassword'] = this.userPass;\n                }\n\n                if (!this.content) {\n                    let params = {\n                        message: '내용을 입력하세요',\n\n                    }\n                    this.$eventBus.$emit('modalOpen', params);\n                    return;\n                }\n\n                updParams['content'] = this.content;\n\n\n                const keywordList = this.keyword.split(',');\n                const keywords = [];\n                for (const key of keywordList) {\n                    if (key) {\n                        keywords.push(key.replace(/ /g, ''));\n                    }\n                }\n                if (keywords.length > 10) {\n                    let params = {\n                        message: '키워드는 10개 까지만 등록가능합니다',\n\n                    }\n                    this.$eventBus.$emit('modalOpen', params);\n                    return;\n                }\n                let keywordString = '';\n                if (keywords.length > 0) {\n                    keywordString = keywords.join(',');\n                }\n                updParams['keywords'] = keywordString;\n\n                const regex = /<img[^>]+src=[\\\"']?([^>\\\"']+)[\\\"']?[^>]*>/g\n                let extractUrl = '';\n                let inputOrgImgList = [];\n                let inputImgList = [];\n                let searchImgNames = [];\n                while (extractUrl = regex.exec(this.content)) {\n                    if (extractUrl[1]) {\n                        let imgName = extractUrl[1].replace(apiService.imgHost + 'api/controller/board/getArticleImage?imgName=', '');\n\n                        for (let img of this.imgList) {\n                            if (imgName == img.name) {\n\n                                inputOrgImgList.push(img.orgName)\n                                inputImgList.push(img.name);\n                                searchImgNames.push(img.searchName)\n                            }\n                        }\n                    }\n                }\n\n                let imgString = '';\n                let orgImgString = '';\n                let searchImgNameString = '';\n                if (inputOrgImgList.length > 0) {\n                    imgString = inputImgList.join(',');\n                    orgImgString = inputOrgImgList.join(',');\n                    searchImgNameString = searchImgNames.join(',');\n                }\n                updParams['imgString'] = imgString\n                updParams['orgImgString'] = orgImgString\n                updParams['searchImgNameString'] = searchImgNameString\n\n\n                let orgDfileNameString = '';\n                let dfileNameString = '';\n                let searchDfileNameString = '';\n                if (this.dFileList.length > 0) {\n                    let orgFileNames = [];\n                    let fileNames = [];\n                    let searchFileNames = [];\n                    for (const item of this.dFileList) {\n                        orgFileNames.push(item.orgFileName);\n                        fileNames.push(item.fileName);\n                        searchFileNames.push(item.searchName)\n                    }\n                    orgDfileNameString = orgFileNames.join(',');\n                    dfileNameString = fileNames.join(',');\n                    searchDfileNameString = searchFileNames.join(',');\n                }\n\n                updParams['orgDfileNameString'] = orgDfileNameString\n                updParams['dfileNameString'] = dfileNameString\n                updParams['searchDfileNameString'] = searchDfileNameString\n\n\n                updParams['replyUse'] = (this.replyUse == 'yes') ? 'yes' : 'no';\n\n                updParams['open'] = (this.open == 'yes') ? 'yes' : 'no';\n                updParams['userNotice'] = (this.userNotice == 'yes') ? 'yes' : 'no';\n                updParams['notice'] = (this.notice == 'yes') ? 'yes' : 'no';\n\n                if (this.serverFlag) return;\n                this.serverFlag = true;\n                if (this.indexId && this.info?.bid) {\n                    updParams['id'] = this.indexId;\n                }\n                const url = (this.indexId && this.info?.bid) ? API_ADMIN_UPDATE_BOARD_ARTICLE : API_ADMIN_INSERT_BOARD_ARTICLE;\n\n                this.$eventBus.$emit('overlay', 'open');\n                apiService.post(url, updParams, (res) => {\n                    this.serverFlag = false;\n                    this.$eventBus.$emit('overlay', 'hide');\n                    if (res.status == 'success') {\n                        let msg = '저장'\n                        if (this.indexId) {\n                            msg = '수정'\n                        }\n                        let params = {\n                            message: '게시글 정보가 ' + msg + ' 되었습니다',\n                            doAction: () => {\n                                this.$router.push('/admin/run/articleList');\n                            }\n                        }\n                        this.$eventBus.$emit('modalOpen', params);\n\n                    } else {\n                        let params = {\n                            message: '정보 저장에 실패하였습니다',\n                        }\n                        this.$eventBus.$emit('modalOpen', params);\n                    }\n                })\n            },\n            tempSave() {\n                const updParams = {};\n                Object.keys(this.form).forEach(f => {\n                    updParams[f] = this.form[f];\n                })\n                if (this.userInfoShow) {\n                    if (this.userName) {\n                        updParams['userName'] = this.userName;\n                    }\n                    if (this.userPass) {\n                        updParams['userPassword'] = this.userPass;\n                    }\n                }\n                updParams['content'] = this.content;\n\n                const keywordList = this.keyword.split(',');\n                const keywords = [];\n                for (const key of keywordList) {\n                    if (key) {\n                        keywords.push(key.replace(/ /g, ''));\n                    }\n                }\n                if (keywords.length > 10) {\n                    let params = {\n                        message: '키워드는 10개 까지만 등록가능합니다',\n\n                    }\n                    this.$eventBus.$emit('modalOpen', params);\n                    return;\n                }\n                let keywordString = '';\n                if (keywords.length > 0) {\n                    keywordString = keywords.join(',');\n                }\n                updParams['keywords'] = keywordString;\n\n                const regex = /<img[^>]+src=[\\\"']?([^>\\\"']+)[\\\"']?[^>]*>/g\n                let extractUrl = '';\n                let inputOrgImgList = [];\n                let inputImgList = [];\n                let searchImgNames = [];\n                while (extractUrl = regex.exec(this.content)) {\n                    if (extractUrl[1]) {\n                        let imgName = extractUrl[1].replace(apiService.imgHost + 'api/controller/board/getArticleImage?imgName=', '');\n                        for (let img of this.imgList) {\n                            if (imgName == img.name) {\n                                inputOrgImgList.push(img.orgName)\n                                inputImgList.push(img.name);\n                                searchImgNames.push(img.searchName)\n                            }\n                        }\n                    }\n                }\n\n                let imgString = '';\n                let orgImgString = '';\n                let searchImgNameString = '';\n                if (inputOrgImgList.length > 0) {\n                    imgString = inputImgList.join(',');\n                    orgImgString = inputOrgImgList.join(',');\n                    searchImgNameString = searchImgNames.join(',');\n                }\n                updParams['imgString'] = imgString\n                updParams['orgImgString'] = orgImgString\n                updParams['searchImgNameString'] = searchImgNameString\n\n\n                let orgDfileNameString = '';\n                let dfileNameString = '';\n                let searchDfileNameString = '';\n                if (this.dFileList.length > 0) {\n                    let orgFileNames = [];\n                    let fileNames = [];\n                    let searchFileNames = [];\n                    for (const item of this.dFileList) {\n                        orgFileNames.push(item.orgFileName);\n                        fileNames.push(item.fileName);\n                        searchFileNames.push(item.searchName)\n                    }\n                    orgDfileNameString = orgFileNames.join(',');\n                    dfileNameString = fileNames.join(',');\n                    searchDfileNameString = searchFileNames.join(',');\n                }\n\n                updParams['orgDfileNameString'] = orgDfileNameString\n                updParams['dfileNameString'] = dfileNameString\n                updParams['searchDfileNameString'] = searchDfileNameString\n\n\n                updParams['replyUse'] = (this.replyUse == 'yes') ? 'yes' : 'no';\n\n                updParams['open'] = (this.open == 'yes') ? 'yes' : 'no';\n                updParams['userNotice'] = (this.userNotice == 'yes') ? 'yes' : 'no';\n                updParams['notice'] = (this.notice == 'yes') ? 'yes' : 'no';\n\n                if (this.serverFlag) return;\n                this.serverFlag = true;\n                if (this.indexId) {\n                    updParams['id'] = this.indexId;\n                }\n                const url = (this.indexId) ? API_ADMIN_TEMP_BOARD_IS_ARTICLE : API_ADMIN_TEMP_BOARD_ARTICLE;\n\n                this.$eventBus.$emit('overlay', 'open');\n                apiService.post(url, updParams, (res) => {\n                    this.serverFlag = false;\n                    this.$eventBus.$emit('overlay', 'hide');\n                    if (res.status == 'success') {\n                        let params = {\n                            message: '게시글 정보가 임시저장 되었습니다',\n                        }\n                        this.$eventBus.$emit('modalOpen', params);\n\n                    } else {\n                        let params = {\n                            message: '임시저장에 실패하였습니다',\n                        }\n                        this.$eventBus.$emit('modalOpen', params);\n                    }\n                })\n            }\n        },\n        mounted() {\n            JQ('.quill-content-box .ql-editor').css('min-height', '400px');\n\n        }\n\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import 'src/assets/style/common';\n    @import 'src/assets/style/input';\n\n    .product-container {\n        width: 100%;\n        padding: 30px;\n        border: solid 1px #999;\n        background: #fff;\n\n    }\n\n    .product-title {\n        font-weight: bold;\n        font-size: 16px;\n        color: #000;\n        width: 100%;\n        padding: 0 20px 10px 20px;\n\n    }\n\n    .select-box {\n        max-height: 50px;\n    }\n\n    .brandCateUl {\n        padding: 0;\n        margin: 0;\n        display: flex;\n        flex-wrap: wrap;\n\n        li {\n\n        }\n    }\n\n    .detail-img-box {\n        display: flex;\n\n        .detail-img {\n            display: flex;\n\n            .line-divide {\n                border-right: solid 1px #ccc;\n                padding-right: 20px;\n                height: 100px;\n                width: 1px;\n            }\n        }\n\n        .add-detial-img-ul {\n            padding: 0;\n            margin: 0;\n            display: flex;\n            flex-wrap: wrap;\n\n            li {\n                width: 100px;\n                height: 100px;\n                margin: 0 0 20px 20px;\n\n            }\n        }\n    }\n\n    table.table-regist {\n        tbody {\n            tr {\n                td.border-right-none {\n                    border-right: none !important;\n                }\n            }\n        }\n    }\n\n    .select-product-list {\n        height: 300px;\n        border: solid 1px #999;\n        margin-bottom: 20px;\n    }\n\n    .select-catebrand-list {\n        height: 100px;\n        border: solid 1px #999;\n        margin-bottom: 20px;\n    }\n\n    .tip {\n        position: relative !important;\n        padding: 0 0 0 20px;\n        margin-bottom: 5px;\n        list-style-type: disc;\n\n        li {\n            font-size: 12px;\n            color: #880E4F;\n        }\n    }\n\n    .button-row {\n        text-align: center;\n        margin: 30px;\n    }\n\n    .table-list {\n        width: 100%;\n\n        thead {\n            th {\n                border-top: none;\n                border-left: solid 1px #999;\n                border-bottom: solid 1px #999;\n                background: #e5e5e5;\n                padding: 0;\n\n                &:last-child {\n                    border-right: none;\n                }\n\n                &:first-child {\n                    border-left: none;\n                }\n            }\n        }\n\n        tbody {\n            td {\n                border-left: solid 1px #ccc;\n                border-right: none;\n                border-bottom: solid 1px #ccc;\n                border-top: none;\n                padding: 5px;\n                text-align: center;\n\n                &:last-child {\n                    border-right: none;\n                }\n\n                &:first-child {\n                    border-left: none;\n                }\n\n                .underline {\n                    text-decoration: underline;\n                    color: #880E4F;\n                    cursor: pointer;\n                }\n            }\n        }\n    }\n</style>\n","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./boardArticleRegist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./boardArticleRegist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./boardArticleRegist.vue?vue&type=template&id=f5b8706c&scoped=true&\"\nimport script from \"./boardArticleRegist.vue?vue&type=script&lang=js&\"\nexport * from \"./boardArticleRegist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./boardArticleRegist.vue?vue&type=style&index=0&id=f5b8706c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f5b8706c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCheckbox,VChip,VSelect,VTextField})\n"],"names":["Selectable","name","props","indeterminate","Boolean","indeterminateIcon","type","String","default","offIcon","onIcon","data","inputIndeterminate","this","computed","classes","VInput","computedIcon","isActive","validationState","isDisabled","hasError","shouldValidate","hasSuccess","hasColor","computedColor","watch","val","$nextTick","$emit","methods","genCheckbox","title","checkboxAttrs","attrs$","$createElement","staticClass","VIcon","setTextColor","dense","dark","light","genInput","toString","genRipple","rippleState","genDefaultSlot","genLabel","errorPosiFlag","nl2br","text","value","replace","nl2brContent","stripTags","div","document","createElement","innerHTML","textContent","innerText","stripTagsNotEm","result","email","pattern","test","numericByPrice","targetPrice","isNaN","numeric","parseNumber","number","parseInt","price","numberFormat","br2nl","nf","Intl","NumberFormat","format","fNumberFormat","getStrCut","string","length","substr","errorPosition","baseEle","targetEle","func","baseElement","JQ","height","top","offset","stTop","animate","scrollTop","axios","DEBGU","accessToken","sessionStorage","getItem","version","imgHost","post","url","frm","afterFunc","errorFunc","checkDebug","CONFIG_HEADER","headers","then","res","console","log","status","alert","catch","error","setError","postFile","CONFIG_HEADER_FILE","get","params","location","href","response","hostname","request","message","render","_vm","_h","_c","_self","attrs","on","$event","preventDefault","validate","apply","arguments","ref","staticStyle","imgUpload","dfileUpload","_v","_m","bid","bidDisabled","bidList","model","callback","$$v","expression","userName","userPass","_e","categoryUse","category","categoryList","subject","content","editorOption","onEditorChange","keyword","addDfile","_l","dfile","index","removeDfile","_s","orgFileName","replyUse","userNotice","open","notice","tempSave","staticRenderFns","components","quillEditor","id","info","boardInfo","boardList","userInfoShow","placeholder","theme","modules","toolbar","container","handlers","image","btype","secretUse","secret","imgs","isfile","file","imgIndex","imgSize","width","dFileList","formHasErrors","serverFlag","getInfoFlag","uploadImgType","indexId","imgList","userId","apiService","doAction","cancleAction","keywords","fileName","searchName","orgName","deleteImg","insertImg","quill","html","Object","check","updParams","UTIL","keywordString","inputOrgImgList","inputImgList","searchImgNames","imgString","orgImgString","searchImgNameString","orgFileNames","fileNames","searchFileNames","orgDfileNameString","dfileNameString","searchDfileNameString","msg","component","VBtn"],"sourceRoot":""}