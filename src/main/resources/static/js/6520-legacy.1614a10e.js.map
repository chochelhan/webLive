{"version":3,"file":"js/6520-legacy.1614a10e.js","mappings":"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","sources":["webpack://livego/./src/views/WEB/member/emailModifyPassword.vue?7bb9","webpack://livego/src/views/WEB/member/emailModifyPassword.vue","webpack://livego/./src/views/WEB/member/emailModifyPassword.vue?7468","webpack://livego/./src/views/WEB/member/emailModifyPassword.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mypage-container\"},[_c('div',{staticClass:\"mypage-title pc-element\"},[_vm._v(\"비밀번호 변경\")]),_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate.apply(null, arguments)}}},[_c('ul',{staticClass:\"input-ul\",staticStyle:{\"padding-top\":\"30px\"}},[_c('li',[_c('div',{staticClass:\"label\"},[_vm._v(\"새 비밀번호\")]),_c('div',{staticClass:\"input-box\"},[_c('v-text-field',{ref:\"newPass\",attrs:{\"outlined\":\"\",\"type\":\"password\",\"rules\":[_vm.checkNewPass]},model:{value:(_vm.newPass),callback:function ($$v) {_vm.newPass=$$v},expression:\"newPass\"}})],1)]),_c('li',[_c('div',{staticClass:\"label\"},[_vm._v(\"새 비밀번호 확인\")]),_c('div',{staticClass:\"input-box\"},[_c('v-text-field',{ref:\"reNewPass\",attrs:{\"outlined\":\"\",\"type\":\"password\",\"rules\":[_vm.checkReNewPass]},model:{value:(_vm.reNewPass),callback:function ($$v) {_vm.reNewPass=$$v},expression:\"reNewPass\"}})],1)])]),_c('div',{staticClass:\"button-row\"},[_c('v-btn',{staticClass:\"blackButton\",attrs:{\"type\":\"submit\"}},[_c('span',[_vm._v(\"저장\")])])],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"mypage-container\">\r\n        <div class=\"mypage-title pc-element\">비밀번호 변경</div>\r\n        <form novalidate @submit.prevent=\"validate\">\r\n            <ul class=\"input-ul\" style=\"padding-top:30px;\">\r\n                <li>\r\n                    <div class=\"label\">새 비밀번호</div>\r\n                    <div class=\"input-box\">\r\n                        <v-text-field\r\n                                outlined\r\n                                ref=\"newPass\"\r\n                                type=\"password\"\r\n                                :rules=\"[checkNewPass]\"\r\n                                v-model=\"newPass\"/>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div class=\"label\">새 비밀번호 확인</div>\r\n                    <div class=\"input-box\">\r\n                        <v-text-field\r\n                                outlined\r\n                                ref=\"reNewPass\"\r\n                                type=\"password\"\r\n                                :rules=\"[checkReNewPass]\"\r\n                                v-model=\"reNewPass\"/>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <div class=\"button-row\">\r\n                <v-btn type=\"submit\" class=\"blackButton\">\r\n                    <span>저장</span>\r\n                </v-btn>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\n    import apiService from '@/config/web/apiService'\r\n    import {\r\n        API_URL_UPDATE_EMAIL_AUTH_PASSWORD,\r\n    } from '@/config/web/urls'\r\n    import AUTH from '@/config/web/auth'\r\n    import {mapGetters} from \"vuex\";\r\n    import JQ from \"jquery\"\r\n\r\n    export default {\r\n        name: 'emailModifyPassword',\r\n        computed: {\r\n            form() {\r\n                return {\r\n                    newPass: this.newPass,\r\n                    reNewPass: this.reNewPass,\r\n                }\r\n            },\r\n\r\n        },\r\n        data() {\r\n            return {\r\n                newPass: '',\r\n                reNewPass: '',\r\n                uidEncode:'',\r\n                serverFlag: false,\r\n            };\r\n        },\r\n        created() {\r\n            const member = AUTH.getSession();\r\n            if (member && member?.memberInfo) {\r\n                this.$router.push('/');\r\n            }\r\n            this.uidEncode = this.$route.params.code;\r\n            if(!this.uidEncode) {\r\n                this.$router.push('/');\r\n            }\r\n        },\r\n        methods: {\r\n            checkNewPass() {\r\n                if (!this.newPass) return '새 비밀번호를 입력하세요'\r\n                if (this.newPass.length < 6 || this.newPass.length > 20) return '비밀번호는 6~20자 사이로 입력하세요'\r\n\r\n                let reg = /\\d{1}/;\r\n                let ret = reg.test(this.newPass)\r\n                if (!ret) {\r\n                    return '비밀번호는 한개이상의 숫자를 포함해야 합니다'\r\n                }\r\n\r\n                reg = /[a-zA-Z]/;\r\n                ret = reg.test(this.newPass)\r\n                if (!ret) {\r\n                    return '비밀번호는 영문을 포함해야 합니다'\r\n                }\r\n\r\n                reg = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n                ret = reg.test(this.newPass)\r\n                if (ret) {\r\n                    return '비밀번호는 한글을 포함해서는 안됩니다'\r\n                }\r\n                return true;\r\n            },\r\n            checkReNewPass() {\r\n                if (!this.reNewPass) return '새 비밀번호 확인를 입력하세요'\r\n                if (this.reNewPass != this.newPass) return '새 비밀번호와 새 비밀번호 확인이 일치하지 않습니다'\r\n                return true;\r\n            },\r\n            validate() {\r\n                let formHasErrors = false;\r\n                let frm = {};\r\n                Object.keys(this.form).forEach(f => {\r\n                    let error = this.$refs[f].validate(true)\r\n                    if (!error) {\r\n                        formHasErrors = true\r\n                    } else {\r\n                        frm[f] = this.form[f];\r\n                    }\r\n                })\r\n                if (!formHasErrors) {\r\n                    if (this.serverFlag) return;\r\n                    frm.uidEncode = this.uidEncode;\r\n\r\n                    this.$eventBus.$emit('overlay', 'open');\r\n                    this.serverFlag = true;\r\n                    apiService.post(API_URL_UPDATE_EMAIL_AUTH_PASSWORD, frm, (res) => {\r\n                        this.serverFlag = false;\r\n                        this.$eventBus.$emit('overlay', 'hide');\r\n                        let result = res.status;\r\n                        let params = {}\r\n                        if (result == 'success') {\r\n                            params = {\r\n                                message: '비밀번호가 변경되었습니다',\r\n                                doAction:()=> {\r\n                                    this.$router.push('/memberLogin')\r\n                                }\r\n                            };\r\n                            this.$eventBus.$emit('modalOpen', params);\r\n                        }\r\n\r\n\r\n\r\n                    })\r\n\r\n                }\r\n            },\r\n        },\r\n        mounted() {\r\n\r\n            JQ('.out-text p').css({\r\n                'margin': 0,\r\n                'font-size': '14px',\r\n                'color': '#333',\r\n                'font-weight': '500'\r\n            });\r\n        },\r\n        updated() {\r\n\r\n            JQ('.out-text p').css({\r\n                'margin': 0,\r\n                'font-size': '14px',\r\n                'color': '#333',\r\n                'font-weight': '500'\r\n            });\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n    .mypage-container {\r\n        width: 636px;\r\n        margin: 0 auto;\r\n        padding: 36px 24px 50px 24px;\r\n        min-height: calc(100vh - 300px);\r\n        background: #fff;\r\n\r\n        .mypage-title {\r\n            font-size: 18px;\r\n            font-weight: bold;\r\n            color: #333333;\r\n            border-bottom: solid 1px #333;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .button-row {\r\n            width: 86px;\r\n            margin: 10px auto 40px auto;\r\n\r\n            .blackButton {\r\n                max-height: 38px !important;\r\n\r\n                span {\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        .out-text {\r\n\r\n            font-size: 14px;\r\n            color: #333;\r\n            font-weight: 500;\r\n            padding-bottom: 10px;\r\n\r\n        }\r\n\r\n        .check-box {\r\n            margin-top: -10px;\r\n\r\n            ::v-deep .v-label {\r\n                font-size: 14px;\r\n                color: #333;\r\n                margin-left: -5px;\r\n            }\r\n        }\r\n\r\n        .input-ul {\r\n            padding: 0 20px;\r\n            margin: 10px 0 0 0;\r\n\r\n            li {\r\n                display: flex;\r\n                justify-content: space-between;\r\n\r\n                .label {\r\n                    min-width: 120px;\r\n                    padding: 15px 0 0 0;\r\n                    font-weight: 600;\r\n                    color: #333;\r\n                    font-size: 14px;\r\n\r\n                }\r\n\r\n                .input-box {\r\n                    text-align: left;\r\n                    width: 95%;\r\n\r\n                }\r\n\r\n                .radio-box {\r\n                    text-align: left;\r\n                    width: 95%;\r\n                    padding-bottom: 10px;\r\n                }\r\n\r\n                .switch-box {\r\n                    width: 95%;\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n\r\n                    .tip {\r\n                        width: 99%;\r\n                        font-size: 12px;\r\n                        color: #333333;\r\n                        padding-top: 15px;\r\n                    }\r\n\r\n                    .switch {\r\n                        text-align: right;\r\n                        min-width: 30px;\r\n                        margin-top: -6px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    @media screen and (max-width: 1259px) {\r\n        .mypage-container {\r\n            width: 100%;\r\n            padding: 0;\r\n\r\n\r\n            .input-ul {\r\n                padding: 0;\r\n                margin: 10px 0 0 0;\r\n\r\n                li {\r\n                    display: block;\r\n                    .label {\r\n                        padding:0 0 10px 0;\r\n                    }\r\n\r\n                    .input-box {\r\n                        width:100%;\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    @media screen and (max-width: 450px) {\r\n        .mypage-container {\r\n            padding: 0 20px;\r\n\r\n\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./emailModifyPassword.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./emailModifyPassword.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./emailModifyPassword.vue?vue&type=template&id=4e2bbbe6&scoped=true&\"\nimport script from \"./emailModifyPassword.vue?vue&type=script&lang=js&\"\nexport * from \"./emailModifyPassword.vue?vue&type=script&lang=js&\"\nimport style0 from \"./emailModifyPassword.vue?vue&type=style&index=0&id=4e2bbbe6&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4e2bbbe6\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VTextField})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","on","$event","preventDefault","validate","apply","arguments","staticStyle","ref","checkNewPass","model","value","callback","$$v","newPass","expression","checkReNewPass","reNewPass","staticRenderFns","name","computed","uidEncode","serverFlag","methods","reg","ret","Object","frm","formHasErrors","apiService","params","message","doAction","JQ","component","VBtn"],"sourceRoot":""}