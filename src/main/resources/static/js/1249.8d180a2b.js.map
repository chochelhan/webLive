{"version":3,"file":"js/1249.8d180a2b.js","mappings":"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","sources":["webpack://livego/./src/common/util.js","webpack://livego/./src/config/web/apiService.js","webpack://livego/./src/config/web/auth.js","webpack://livego/./src/config/web/urls.js","webpack://livego/./src/components/articleUpass.vue?daf8","webpack://livego/src/components/articleUpass.vue","webpack://livego/./src/components/articleUpass.vue?1094","webpack://livego/./src/components/articleUpass.vue"],"sourcesContent":["import JQ from \"jquery\";\r\n\r\nexport default {\r\n    errorPosiFlag:false,\r\n    nl2br(text) {\r\n        return text.value.replace(/(\\n|\\r\\n)/g, '<br>');\r\n\r\n    },\r\n    nl2brContent(text) {\r\n        text = text.toString();\r\n        text = text.replace(/(\\n|\\r\\n)/g, '<br>');\r\n        return text.replace(/(<br><br>)/g, '<br>');\r\n    },\r\n    stripTags(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value;\r\n        let text = div.textContent || div.innerText || \"\";\r\n\r\n        return text;\r\n\r\n    },\r\n    stripTagsNotEm(value) {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = value.replace(/<em>/ig,'{em}').replace(/<\\/em>/ig,'{/em}')\r\n        let text = div.textContent || div.innerText || \"\";\r\n        let result = text.replace(/{em}/ig,'<em>').replace(/{\\/em}/ig,'</em>')\r\n        return result;\r\n\r\n    },\r\n    email(value) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return pattern.test(value)\r\n    },\r\n    numericByPrice(value) {\r\n        if(value==0)return false;\r\n        if(value) {\r\n\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            return isNaN(targetPrice);\r\n        } else return true;\r\n    },\r\n    numeric(value) {\r\n        return isNaN(value);\r\n    },\r\n    parseNumber(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let number = value.replace(/,/gi, '');\r\n            number = number.toString().replace(/-/gi, '');\r\n            return parseInt(number);\r\n\r\n        } else return 0;\r\n    },\r\n    price(value) {\r\n        if(value) {\r\n            value = value.toString()\r\n            let targetPrice = value.replace(/,/gi, '');\r\n            targetPrice = targetPrice.toString().replace(/-/gi, '');\r\n\r\n            if (!this.numeric(targetPrice)) {\r\n                return this.numberFormat(targetPrice);\r\n\r\n            } else return false;\r\n        } else return false;\r\n    },\r\n    br2nl(text) {\r\n        return text.replace(/(<br>|<br\\/>|<br \\/>)/g, '\\r');\r\n    },\r\n    numberFormat(number) {\r\n        if(!number)return 0;\r\n        if(isNaN(number)) {\r\n            number = number.toString().replace(/-/gi, '');\r\n        }\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    fNumberFormat(number) {\r\n        number = number.toString().replace(/-/gi, '');\r\n        number = number.toString().replace(/,/gi, '');\r\n        let nf = new Intl.NumberFormat([\"en-US\"], {});\r\n        return nf.format(number);\r\n    },\r\n    getStrCut(string,length) {\r\n        if(string.length >= length){\r\n            return string.substr(0,length)+\"..\";\r\n        } else return string;\r\n    },\r\n    errorPosition(baseEle,targetEle,func) {\r\n        const baseElement = (baseEle=='base')?JQ('body'):JQ(baseEle);\r\n        const height = JQ(baseElement).height();\r\n\r\n        const top = JQ(targetEle).offset().top;\r\n\r\n        const stTop = (top>0)?height - top + 200:height + top - 200;\r\n        if(baseEle=='base') {\r\n\r\n            JQ('html,body').animate({\r\n                scrollTop: (top - 50)\r\n            }, 100, () => {\r\n                if(this.errorPosiFlag) {\r\n                    this.errorPosiFlag = false;\r\n                    return\r\n                }\r\n                func();\r\n                this.errorPosiFlag = true;\r\n            })\r\n        } else {\r\n            JQ(baseElement).animate({\r\n                scrollTop:stTop\r\n\r\n            }, 100, () => {\r\n                func();\r\n            })\r\n        }\r\n    },\r\n\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n    CONFIG_HEADER,\r\n    CONFIG_HEADER_FILE\r\n} from './urls'\r\nimport AUTH from './auth'\r\n\r\nexport default {\r\n    DEBGU: true,\r\n    imgHost:'/',\r\n    post(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n        this.checkBearerToken();\r\n        axios.post(url, frm, {headers: CONFIG_HEADER}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'notLogin':\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n\r\n        });\r\n    },\r\n    async asyncPost(url, frm) {\r\n        this.checkBearerToken();\r\n        return await axios.post(url,frm,{headers: CONFIG_HEADER});\r\n    },\r\n    postFile(url, frm, afterFunc) {\r\n        this.checkDebug();\r\n        this.checkBearerToken();\r\n        axios.post(url, frm, {headers: CONFIG_HEADER_FILE}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'notLogin':\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    break;\r\n            }\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n\r\n        });\r\n    },\r\n    get(url, frm, afterFunc, errorFunc) {\r\n        this.checkDebug();\r\n        this.checkBearerToken();\r\n        axios.get(url, {params: frm, headers: CONFIG_HEADER}).then(res => {\r\n            if (this.DEBGU) {\r\n                console.log(res.data)\r\n            }\r\n            switch (res.data.status) {\r\n                case 'success':\r\n                case 'message':\r\n                    afterFunc(res.data);\r\n                    break;\r\n                case 'notLogin':\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                case 'error':\r\n                    alert('결과값이 없습니다');\r\n                    location.href='/';\r\n                    break;\r\n                case 'fail':\r\n                    alert('잘못된 접근입니다');\r\n                    location.href='/';\r\n                    break;\r\n            }\r\n\r\n\r\n        }).catch((error) => {\r\n            this.setError(error);\r\n            if (errorFunc) errorFunc(error.response.data)\r\n\r\n\r\n\r\n        });\r\n    },\r\n    checkDebug() {\r\n        if (location.hostname == 'localhost') {\r\n            this.DEBGU = true;\r\n            this.imgHost = 'http://localhost/';\r\n\r\n        } else this.DEBGU = false;\r\n    },\r\n    checkBearerToken() {\r\n        const info = AUTH.getSession();\r\n        if (info?.memberInfo) {\r\n            const token = info.token;\r\n            CONFIG_HEADER.Authorization = 'Bearer ' + token;\r\n            CONFIG_HEADER_FILE.Authorization = 'Bearer ' + token;\r\n        }\r\n        if(!sessionStorage.getItem('sessionId')) {\r\n            const now = new Date();\r\n            sessionStorage.setItem('sessionId','sess_'+now.getTime())\r\n        }\r\n        CONFIG_HEADER.sessionId = sessionStorage.getItem('sessionId');\r\n    },\r\n    setError(error) {\r\n\r\n        if (error.response) {\r\n            /*\r\n            switch (error.response.status) {\r\n                case 403:\r\n                case 500:\r\n                    AUTH.logout();\r\n                    location.href='/';\r\n                    break;\r\n                default:\r\n                    AUTH.logout();\r\n                    alert('잘못된 접근입니다');\r\n                    location.href='/';\r\n                    break;\r\n            }\r\n             */\r\n            // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        } else if (error.request) {\r\n            // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n            // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n            // Node.js의 http.ClientRequest 인스턴스입니다.\r\n            console.log(error.request);\r\n        } else {\r\n            // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n            console.log('Error', error.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","import {CONFIG_HEADER, CONFIG_HEADER_FILE} from './urls'\r\n\r\nexport default {\r\n    setDevice(device) {\r\n        \r\n    },\r\n    getSession() {\r\n        let info = {};\r\n        if (sessionStorage.getItem('memberInfo') && sessionStorage.getItem('accessToken')) {\r\n            const memberInfo = JSON.parse(sessionStorage.getItem('memberInfo'))\r\n            const token = sessionStorage.getItem('accessToken')\r\n            if (memberInfo?.id && token) {\r\n                info.memberInfo = memberInfo;\r\n                info.token = token;\r\n            }\r\n        }\r\n        return info;\r\n    },\r\n    setSession(params) {\r\n\r\n        sessionStorage.setItem('memberInfo', JSON.stringify(params.memberInfo))\r\n        sessionStorage.setItem('accessToken', params.access_token)\r\n        CONFIG_HEADER.Authorization = 'Bearer ' + params.access_token;\r\n        CONFIG_HEADER_FILE.Authorization = 'Bearer ' + params.access_token;\r\n\r\n\r\n    },\r\n    updateSession(params) {\r\n        sessionStorage.setItem('memberInfo', JSON.stringify(params))\r\n\r\n    },\r\n    logout() {\r\n        sessionStorage.setItem('memberInfo', '')\r\n        sessionStorage.setItem('accessToken', '')\r\n        CONFIG_HEADER.Authorization = '';\r\n        CONFIG_HEADER_FILE.Authorization = '';\r\n    }\r\n\r\n}\r\n","export const IMGHOST = 'http://localhost';\r\n\r\n\r\nconst BaseUrl = '/api/controller/';\r\n\r\n\r\n/**\r\n * @ 기본설정 정보\r\n */\r\nexport const API_URL_GET_SITE_BASE = BaseUrl + 'setting/getBase'\r\nexport const API_URL_UPDATE_USER_STATISTICS = BaseUrl + 'setting/outMemberStatistics'\r\n\r\n\r\n/**\r\n * @ 메인페이지 정보\r\n */\r\nexport const API_URL_GET_MAIN = BaseUrl + 'setting/getMain'\r\n\r\n\r\n/**\r\n * @ 로그인/ 로그아웃 / 회원가입\r\n */\r\n\r\nexport const API_URL_LOGIN = BaseUrl + 'member/login'\r\nexport const API_URL_LOGOUT = BaseUrl + 'mypage/logout'\r\n\r\n\r\nexport const API_URL_GET_MEMBER_CONFIG = BaseUrl + 'member/getMemberConfig'\r\nexport const API_URL_GET_MEMBER_AGREE = BaseUrl + 'member/getMemberAgree'\r\nexport const API_URL_MEMBER_JOIN = BaseUrl + 'member/join'\r\nexport const API_URL_GET_MEMBER_CHECK_ID = BaseUrl + 'member/checkUid'\r\nexport const API_URL_GET_MEMBER_CHECK_EMAIL = BaseUrl + 'member/checkEmail'\r\nexport const API_URL_GET_MEMBER_CHECK_NICK = BaseUrl + 'member/checkNick'\r\nexport const API_URL_GET_MYPAGE_CHECK_NICK = BaseUrl + 'member/checkMemberNick'\r\n\r\nexport const API_URL_UPDATE_EMAIL_AUTH = BaseUrl + 'member/updateAuthEmail'\r\n\r\n// 비밀번호 찾기\r\nexport const API_URL_FIND_MEMBER_PASS = BaseUrl + 'member/findMemberUpass'\r\nexport const API_URL_UPDATE_EMAIL_AUTH_PASSWORD = BaseUrl + 'member/updateEmailMemberUpass'\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ 방송\r\n */\r\nexport const API_URL_BROADCAST_LIVE_INSERT = BaseUrl + 'broadcastLive/insertLive';\r\nexport const API_URL_BROADCAST_TEST_LIVE_INSERT = BaseUrl + 'broadcastLive/testInsertLive';\r\n\r\nexport const API_URL_BROADCAST_LIVE_INFO = BaseUrl + 'broadcastLive/getLive';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE = BaseUrl + 'broadcastLive/updateLive';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_LOGO = BaseUrl + 'broadcastLive/updateLogo';\r\nexport const API_URL_BROADCAST_CHECK_LIVE_INFO = BaseUrl + 'broadcastLive/checkLiveWithZoomMeeting';\r\n\r\n/// 환경설정\r\nexport const API_URL_BROADCAST_LIVE_ENV_INFO = BaseUrl + 'broadcastLive/getLiveEnv';\r\nexport const API_URL_BROADCAST_LIVE_ENV_UPDATE = BaseUrl + 'broadcastLive/updateLiveEnv';\r\n\r\n// 문자/메일 발송\r\nexport const API_URL_BROADCAST_LIVE_INVITED_USER = BaseUrl + 'broadcastLive/sendInvitedUser';\r\n\r\n\r\n// 시험\r\nexport const API_URL_BROADCAST_LIVE_EXAM_DIRECT_INSERT = BaseUrl + 'broadcastExam/insertDirect';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_DIRECT_MODIFY = BaseUrl + 'broadcastExam/updateDirect';\r\nexport const API_URL_BROADCAST_LIVE_GET_EXAM_USER_LIST = BaseUrl + 'broadcastExam/getExamWithUser';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_AFTER_DELETE = BaseUrl + 'broadcastExam/deleteExamAfter';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_EXCEL_SAMPLE = BaseUrl + 'broadcastExam/getSample';\r\nexport const API_URL_BROADCAST_LIVE_GET_EXAM_USER_REPORT = BaseUrl + 'broadcastExam/getExamWithUserReport';\r\n\r\n\r\n\r\n\r\n//설문조사\r\nexport const API_URL_BROADCAST_LIVE_POLL_INSERT = BaseUrl + 'broadcastPoll/insertPoll';\r\n\r\n// 투표\r\nexport const API_URL_BROADCAST_LIVE_VOTE_INSERT = BaseUrl + 'broadcastVote/insertVote';\r\n\r\n\r\n// 게시판\r\nexport const API_URL_BROADCAST_LIVE_BOARD_INFO = BaseUrl + 'broadcastBoard/getBoardByParentId';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_UPDATE = BaseUrl + 'broadcastBoard/updateBoard';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INFO = BaseUrl + 'broadcastBoardArticle/getBoardArticle';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INSERT = BaseUrl + 'broadcastBoardArticle/insertBoardArticle';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_UPDATE = BaseUrl + 'broadcastBoardArticle/updateBoardArticle';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST = BaseUrl + 'broadcastBoardArticle/getBoardArticleList';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_VIEW_INFO = BaseUrl + 'broadcastBoardArticle/getBoardArticleView';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_UPLOAD = BaseUrl + 'broadcastBoardArticle/uploadBoardArticleFile';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_DOWN = BaseUrl + 'broadcastBoardArticle/downBoardArticleFile';\r\n\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_DELETE = BaseUrl + 'broadcastBoardArticle/deleteArticle';\r\n\r\nexport const API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST_WIDTH_BOARDINFO = BaseUrl + 'broadcastBoard/getArticleListWithBoardInfo';\r\n\r\nexport const API_URL_BROADCAST_LIVE_BOARD_REPLE_UPDATE = BaseUrl + 'broadcastComment/updateReple';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_REPLE_LIST = BaseUrl + 'broadcastComment/getRepleList';\r\nexport const API_URL_BROADCAST_LIVE_BOARD_REPLE_DELETE = BaseUrl + 'broadcastComment/deleteReple';\r\n\r\n\r\n\r\n// 라이브 방송 (host)//\r\nexport const API_URL_BROADCAST_HOST_LIVE_INFO = BaseUrl + 'broadcastLive/getLiveHostInfo';\r\nexport const API_URL_BROADCAST_UPDATE_HOST_START_TIME = BaseUrl + 'broadcastLive/UpdateLiveHostStartTime';\r\n\r\nexport const API_URL_BROADCAST_LIVE_EXAM_LIST = BaseUrl + 'broadcastExam/getExamList';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_EXAM_STATUS = BaseUrl + 'broadcastExam/updateExamStatus';\r\nexport const API_URL_BROADCAST_LIVE_USER_RESPONSE_INFO = BaseUrl + 'broadcastLive/getUserResponse';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_INSERT = BaseUrl + 'broadcastQuiz/insertQuiz';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_INFO = BaseUrl + 'broadcastQuiz/getQuiz';\r\nexport const API_URL_BROADCAST_LIVE_POLL_LIST = BaseUrl + 'broadcastPoll/getPollListByParentId';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_POLL_STATUS = BaseUrl + 'broadcastPoll/updatePollStatus';\r\nexport const API_URL_BROADCAST_LIVE_VOTE_LIST = BaseUrl + 'broadcastVote/getVoteListByParentId';\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_VOTE_STATUS = BaseUrl + 'broadcastVote/updateVoteStatus';\r\nexport const API_URL_ZOOM_API_GET_USERS = BaseUrl + 'zoomApi/getUserList'; // zoom api 참여자 목록\r\nexport const API_URL_BROADCAST_LIVE_END = BaseUrl + 'broadcastLive/endLive';\r\n\r\n\r\n\r\n\r\n// 라이브 방송 (사용자)//\r\nexport const API_URL_BROADCAST_USER_LIVE_INFO = BaseUrl + 'broadcastUserLive/getLiveInfo';\r\nexport const API_URL_BROADCAST_USER_LIVE_WITH_STATUS_ING  = BaseUrl + 'broadcastUserLive/getAllLive';\r\nexport const API_URL_BROADCAST_LIVE_USER_JOIN = BaseUrl + 'broadcastUserLive/insertLiveUser';\r\nexport const API_URL_BROADCAST_UPDATE_USER_STATUS = BaseUrl + 'broadcastUserLive/updateLiveUserStatus';\r\nexport const API_URL_BROADCAST_LIVE_USER_OUT = BaseUrl + 'broadcastLive/outLiveUser';\r\nexport const API_URL_BROADCAST_LIVE_EXAM_REPLY_INSERT = BaseUrl + 'broadcastExam/insertExamReply';\r\nexport const API_URL_BROADCAST_LIVE_BAD_REPORT_INSERT = BaseUrl + 'broadcast/insertBadReport';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_REPLY_INSERT = BaseUrl + 'broadcastQuiz/insertQuizReply';\r\nexport const API_URL_BROADCAST_LIVE_POLL_REPLY_INSERT = BaseUrl + 'broadcastPoll/insertPollReply';\r\nexport const API_URL_BROADCAST_LIVE_VOTE_REPLY_INSERT = BaseUrl + 'broadcastVote/insertVoteReply';\r\n\r\n\r\n// 라이브 방송 (host, 사용자)//\r\nexport const API_URL_BROADCAST_LIVE_UPDATE_CHAT = BaseUrl + 'broadcast/updateChat';\r\nexport const API_URL_BROADCAST_LIVE_GET_CHAT = BaseUrl + 'broadcast/getChatByParentId';\r\nexport const API_URL_BROADCAST_LIVE_GET_EXAM = BaseUrl + 'broadcastExam/getExamData';\r\nexport const API_URL_BROADCAST_GET_LOGO  = BaseUrl + 'broadcast/getLogo';\r\n\r\n\r\n\r\n// 자료 //\r\nexport const API_URL_BROADCAST_LIVE_DATA_FILE_INSERT = BaseUrl + 'broadcastData/insertFile'; /// 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_LIST = BaseUrl + 'broadcastData/getDataList';/// 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_FILE_SHARE = BaseUrl + 'broadcastData/updateDataShare';/// 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_ALL_LIST = BaseUrl + 'broadcastData/getAllData'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_INFO = BaseUrl + 'broadcastData/getData'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_DELETE = BaseUrl + 'broadcastData/deleteData'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_GET_FILE = BaseUrl + 'broadcastData/getFile'; // 작성완료\r\nexport const API_URL_BROADCAST_LIVE_DATA_DOWN = BaseUrl + 'broadcastData/fileDown'; // 작성완료\r\n\r\nexport const API_URL_BROADCAST_LIVE_DATA_AFTER_LIST = BaseUrl + 'broadcastData/getDataShareList';\r\n\r\n\r\n/*\r\n방송 종료후\r\n */\r\nexport const API_URL_BROADCAST_LIVE_EXAM_AFTER_LIST = BaseUrl + 'broadcastExam/getExamAfterList';\r\n\r\n\r\n//퀴즈\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_AFTER_LIST = BaseUrl + 'broadcastQuiz/getQuizAfterList';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_AFTER_DELETE = BaseUrl + 'broadcastQuiz/deleteQuizAfter';\r\nexport const API_URL_BROADCAST_LIVE_QUIZ_AFTER_USER_REPORT = BaseUrl + 'broadcastQuiz/getQuizWithUserReport';\r\n\r\n\r\n// 채팅\r\nexport const API_URL_BROADCAST_LIVE_CHAT_AFTER_LIST = BaseUrl + 'broadcastLive/getChatInfo';\r\n\r\n\r\n//설문조사\r\n\r\nexport const API_URL_BROADCAST_LIVE_POLL_AFTER_INFO = BaseUrl + 'broadcastPoll/getPollAfterInfo';\r\nexport const API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_LIST = BaseUrl + 'broadcastPoll/getPollWithUserList';\r\nexport const API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_INFO = BaseUrl + 'broadcastPoll/getPollWithUserInfo';\r\n\r\n//투표\r\nexport const API_URL_BROADCAST_LIVE_VOTE_AFTER_INFO = BaseUrl + 'broadcastVote/getVoteWithUserInfo';\r\n\r\n\r\n// 사용자 목록\r\nexport const API_URL_BROADCAST_LIVE_END_USER_INFO = BaseUrl + 'broadcastLive/getLiveUserInfo';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n * 마이페이지\r\n */\r\n\r\nexport const API_URL_GET_MYPAGE_BROADCAST_LIST = BaseUrl + 'myPage/getMyBroadcastList';\r\nexport const API_URL_BROADCAST_LIVE_DELETE = BaseUrl + 'broadcastLive/deleteLive';\r\n//export const API_URL_BROADCAST_LIVE_MYLIST = BaseUrl + 'broadcastLive/getMyLiveList';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//----------- 정의 안된 url ------------/\r\n\r\nexport const API_URL_BROADCAST_LIVE_ALL_DATA_LIST = BaseUrl + 'broadcastExam/getExamListByGno';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n * 마이페이지\r\n */\r\n\r\nexport const API_URL_GET_MYPAGE_MAIN = BaseUrl + 'mypage/getMyMain'\r\nexport const API_URL_GET_MYPAGE_ARTICLE = BaseUrl + 'mypage/getMyArticleList'\r\n\r\n\r\nexport const API_URL_GET_MEMBER_INFO = BaseUrl + 'mypage/getMemberInfo'\r\nexport const API_URL_UPDATE_MEMBER_IMAGE = BaseUrl + 'mypage/updateMemberImage'\r\nexport const API_URL_UPDATE_MYPAGE_MEMBER = BaseUrl + 'mypage/updateMemberInfo'\r\nexport const API_URL_UPDATE_MYPAGE_PASSWORD = BaseUrl + 'mypage/updateMemberPassword'\r\nexport const API_URL_UPDATE_MYPAGE_OUT = BaseUrl + 'mypage/memberOut'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//export const API_URL_BROADCAST_NAME_CHECK = BaseUrl + 'broadcast/getNameCheck';\r\n//export const API_URL_BROADCAST_UPDATE = BaseUrl + 'broadcast/updateBroadcast';\r\n//export const API_URL_BROADCAST_GET_MY_BROADCASTINFO = BaseUrl + 'broadcast/getMyBroadcastInfo';\r\n//export const API_URL_BROADCAST_GET_BROADCASTINFO = BaseUrl + 'broadcast/getBroadcastInfo';\r\n\r\nexport const API_URL_BROADCAST_LIST_BY_VTYPE = BaseUrl + 'broadcast/getBroadcastListByVtype';\r\n\r\n\r\n//export const API_URL_BROADCAST_LIVE_INFO_WITH_OWNER = BaseUrl + 'broadcastLive/getLiveWithOwner';\r\n\r\n\r\n//export const API_URL_BROADCAST_LIVE_INFO_BY_VIDEOID = BaseUrl + 'broadcastLive/getLiveByVideoId';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CONFIG_HEADER = {\r\n    Authorization: '',\r\n    'Content-Type': 'application/json;charset=UTF-8'\r\n};\r\n\r\nexport const CONFIG_HEADER_FILE = {\r\n    Authorization: '',\r\n    'Content-Type': 'multipart/form-data;charset=utf-8;'\r\n\r\n};\r\n\r\n//chsoo@kicox.or.kr\r\n\r\n\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"upass-container\"},[_c('v-dialog',{staticStyle:{\"z-index\":\"100\"},attrs:{\"width\":\"350\",\"persistent\":\"\",\"rounded\":\"\"},model:{value:(_vm.passDialogShow),callback:function ($$v) {_vm.passDialogShow=$$v},expression:\"passDialogShow\"}},[_c('div',{staticClass:\"modal-layout\",staticStyle:{\"height\":\"300px\",\"background\":\"#fff\"}},[_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate.apply(null, arguments)}}},[_c('div',{staticClass:\"pass-title\"},[_vm._v(\"비밀번호 입력\")]),(_vm.passDialogShow)?_c('div',{staticClass:\"input-box\",staticStyle:{\"width\":\"100%\"}},[_c('v-text-field',{ref:\"userPass\",attrs:{\"rules\":[function () { return !!_vm.userPass || '비밀번호를 입력하세요'; }],\"required\":\"\",\"rounded\":\"\",\"outlined\":\"\",\"type\":\"password\",\"maxLength\":\"10\"},model:{value:(_vm.userPass),callback:function ($$v) {_vm.userPass=$$v},expression:\"userPass\"}})],1):_vm._e(),_c('div',{staticClass:\"button-row\"},[_c('v-btn',{staticClass:\"whiteButton\",staticStyle:{\"width\":\"120px\",\"margin\":\"auto\"},attrs:{\"depressed\":\"\",\"rounded\":\"\",\"type\":\"button\"},on:{\"click\":function($event){_vm.passDialogShow=false}}},[_c('span',[_vm._v(\"취소\")])]),_c('v-btn',{staticClass:\"blackButton\",staticStyle:{\"width\":\"120px\",\"margin\":\"auto\"},attrs:{\"depressed\":\"\",\"rounded\":\"\",\"type\":\"submit\"}},[_c('span',[_vm._v(\"확인\")])])],1)])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"upass-container\">\r\n        <v-dialog\r\n            v-model=\"passDialogShow\"\r\n            width=\"350\"\r\n            persistent\r\n            rounded\r\n            style=\"z-index:100\"\r\n        >\r\n            <div class=\"modal-layout\" style=\"height:300px;background: #fff;\" >\r\n                <form novalidate  @submit.prevent=\"validate\">\r\n                <div class=\"pass-title\">비밀번호 입력</div>\r\n                <div class=\"input-box\" style=\"width:100%;\" v-if=\"passDialogShow\">\r\n                    <v-text-field v-model=\"userPass\"\r\n                                  :rules=\"[() => !!userPass || '비밀번호를 입력하세요']\"\r\n                                  required\r\n                                  rounded\r\n                                  outlined\r\n                                  ref=\"userPass\"\r\n                                  type=\"password\"\r\n                                  maxLength=\"10\">\r\n\r\n                    </v-text-field>\r\n                </div>\r\n                <div class=\"button-row\">\r\n                    <v-btn style=\"width:120px;margin:auto;\" @click=\"passDialogShow=false\" class=\"whiteButton\" depressed rounded type=\"button\"><span>취소</span></v-btn>\r\n                    <v-btn style=\"width:120px;margin:auto;\" class=\"blackButton\" depressed rounded type=\"submit\"><span>확인</span></v-btn>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport AUTH from '@/config/web/auth'\r\nimport apiService from '@/config/web/apiService'\r\nimport {\r\n    API_URL_CHECK_BOARD_ARTICLE_UPASS\r\n} from '@/config/web/urls'\r\n\r\nexport default {\r\n    name:'articleUpass',\r\n    props:[\"bid\",\"articleId\",\"modelOpen\",\"type\",\"mcode\",\"scode\"],\r\n    watch:{\r\n        modelOpen(val) {\r\n            this.userPass = '';\r\n            if(val) {\r\n                this.passDialogShow = val;\r\n                this.$emit('parentOpenFalse',{})\r\n            }\r\n\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            passDialogShow:false,\r\n            userPass:'',\r\n        };\r\n    },\r\n    created() {\r\n        this.userPass = '';\r\n    },\r\n    methods: {\r\n        articelView(item) {\r\n            this.articleId = item.id;\r\n            this.passDialogShow = true;\r\n\r\n        },\r\n        validate() {\r\n            if (!this.userPass) {\r\n                this.$refs.userPass.validate(true)\r\n                return;\r\n            }\r\n            const frm = {id: this.articleId, userPass: this.userPass}\r\n            this.$eventBus.$emit('overlay', 'open');\r\n            apiService.post(API_URL_CHECK_BOARD_ARTICLE_UPASS, frm, (res) => {\r\n                this.$eventBus.$emit('overlay', 'hide');\r\n                if (res.status == 'success') {\r\n                    sessionStorage.setItem('articleSessPass', res.sessPass)\r\n                    this.passDialogShow = false;\r\n                    if (this.type == 'modify') this.$router.push('/board/articleRegist/' + this.mcode + '/' + this.scode + '/' + this.bid + '/' + this.articleId)\r\n                    else {\r\n                        this.$emit('upassSuccess', {})\r\n                    }\r\n\r\n                } else {\r\n                    let params = {\r\n                        message: '잘못된 비밀번호 입니다',\r\n                    };\r\n                    this.$eventBus.$emit('modalOpen', params);\r\n                }\r\n\r\n            })\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.board-container {\r\n    width: 100%;\r\n    margin: 50px 0;\r\n    min-height:calc(100vh - 300px);\r\n\r\n}\r\n.modal-layout {\r\n    padding:30px;\r\n    .pass-title {\r\n        font-siZe:18px;\r\n        font-weight: bold;\r\n        color:#000;\r\n        padding:20px 0 30px 0;\r\n        text-align:center;\r\n    }\r\n    .input-box {\r\n\r\n    }\r\n    .button-row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .whiteButton {\r\n            min-height:40px;\r\n            span {\r\n                font-size:14px;\r\n            }\r\n        }\r\n        .blankButton {\r\n            min-height:40px;\r\n            max-height:40px !important;\r\n            span {\r\n                font-size:14px;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./articleUpass.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./articleUpass.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./articleUpass.vue?vue&type=template&id=4b420959&scoped=true&\"\nimport script from \"./articleUpass.vue?vue&type=script&lang=js&\"\nexport * from \"./articleUpass.vue?vue&type=script&lang=js&\"\nimport style0 from \"./articleUpass.vue?vue&type=style&index=0&id=4b420959&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b420959\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VDialog,VTextField})\n"],"names":["errorPosiFlag","nl2br","text","value","replace","nl2brContent","toString","stripTags","div","document","createElement","innerHTML","textContent","innerText","stripTagsNotEm","result","email","pattern","test","numericByPrice","targetPrice","isNaN","numeric","parseNumber","number","parseInt","price","this","numberFormat","br2nl","nf","Intl","NumberFormat","format","fNumberFormat","getStrCut","string","length","substr","errorPosition","baseEle","targetEle","func","baseElement","JQ","height","top","offset","stTop","animate","scrollTop","DEBGU","imgHost","post","url","frm","afterFunc","errorFunc","checkDebug","checkBearerToken","axios","headers","CONFIG_HEADER","then","res","console","log","data","status","AUTH","location","href","alert","catch","error","setError","async","postFile","CONFIG_HEADER_FILE","get","params","response","hostname","info","memberInfo","token","sessionStorage","getItem","now","Date","setItem","getTime","request","message","setDevice","device","getSession","JSON","parse","id","setSession","stringify","access_token","updateSession","logout","BaseUrl","API_URL_LOGIN","API_URL_GET_MEMBER_AGREE","API_URL_MEMBER_JOIN","API_URL_GET_MEMBER_CHECK_ID","API_URL_GET_MEMBER_CHECK_EMAIL","API_URL_GET_MEMBER_CHECK_NICK","API_URL_GET_MYPAGE_CHECK_NICK","API_URL_UPDATE_EMAIL_AUTH","API_URL_FIND_MEMBER_PASS","API_URL_UPDATE_EMAIL_AUTH_PASSWORD","API_URL_BROADCAST_LIVE_INSERT","API_URL_BROADCAST_LIVE_INFO","API_URL_BROADCAST_LIVE_UPDATE","API_URL_BROADCAST_LIVE_UPDATE_LOGO","API_URL_BROADCAST_CHECK_LIVE_INFO","API_URL_BROADCAST_LIVE_ENV_INFO","API_URL_BROADCAST_LIVE_ENV_UPDATE","API_URL_BROADCAST_LIVE_INVITED_USER","API_URL_BROADCAST_LIVE_EXAM_DIRECT_INSERT","API_URL_BROADCAST_LIVE_EXAM_DIRECT_MODIFY","API_URL_BROADCAST_LIVE_GET_EXAM_USER_LIST","API_URL_BROADCAST_LIVE_EXAM_AFTER_DELETE","API_URL_BROADCAST_LIVE_EXAM_EXCEL_SAMPLE","API_URL_BROADCAST_LIVE_GET_EXAM_USER_REPORT","API_URL_BROADCAST_LIVE_POLL_INSERT","API_URL_BROADCAST_LIVE_VOTE_INSERT","API_URL_BROADCAST_LIVE_BOARD_INFO","API_URL_BROADCAST_LIVE_BOARD_UPDATE","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INFO","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_INSERT","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_UPDATE","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_VIEW_INFO","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_UPLOAD","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_FILE_DOWN","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_DELETE","API_URL_BROADCAST_LIVE_BOARD_ARTICLE_LIST_WIDTH_BOARDINFO","API_URL_BROADCAST_LIVE_BOARD_REPLE_UPDATE","API_URL_BROADCAST_LIVE_BOARD_REPLE_LIST","API_URL_BROADCAST_LIVE_BOARD_REPLE_DELETE","API_URL_BROADCAST_HOST_LIVE_INFO","API_URL_BROADCAST_UPDATE_HOST_START_TIME","API_URL_BROADCAST_LIVE_EXAM_LIST","API_URL_BROADCAST_LIVE_UPDATE_EXAM_STATUS","API_URL_BROADCAST_LIVE_USER_RESPONSE_INFO","API_URL_BROADCAST_LIVE_QUIZ_INSERT","API_URL_BROADCAST_LIVE_QUIZ_INFO","API_URL_BROADCAST_LIVE_POLL_LIST","API_URL_BROADCAST_LIVE_UPDATE_POLL_STATUS","API_URL_BROADCAST_LIVE_VOTE_LIST","API_URL_BROADCAST_LIVE_UPDATE_VOTE_STATUS","API_URL_BROADCAST_LIVE_END","API_URL_BROADCAST_USER_LIVE_INFO","API_URL_BROADCAST_USER_LIVE_WITH_STATUS_ING","API_URL_BROADCAST_LIVE_USER_JOIN","API_URL_BROADCAST_UPDATE_USER_STATUS","API_URL_BROADCAST_LIVE_EXAM_REPLY_INSERT","API_URL_BROADCAST_LIVE_BAD_REPORT_INSERT","API_URL_BROADCAST_LIVE_QUIZ_REPLY_INSERT","API_URL_BROADCAST_LIVE_POLL_REPLY_INSERT","API_URL_BROADCAST_LIVE_VOTE_REPLY_INSERT","API_URL_BROADCAST_LIVE_UPDATE_CHAT","API_URL_BROADCAST_LIVE_GET_EXAM","API_URL_BROADCAST_GET_LOGO","API_URL_BROADCAST_LIVE_DATA_FILE_INSERT","API_URL_BROADCAST_LIVE_DATA_LIST","API_URL_BROADCAST_LIVE_DATA_FILE_SHARE","API_URL_BROADCAST_LIVE_DATA_ALL_LIST","API_URL_BROADCAST_LIVE_DATA_INFO","API_URL_BROADCAST_LIVE_DATA_DELETE","API_URL_BROADCAST_LIVE_DATA_GET_FILE","API_URL_BROADCAST_LIVE_DATA_DOWN","API_URL_BROADCAST_LIVE_DATA_AFTER_LIST","API_URL_BROADCAST_LIVE_EXAM_AFTER_LIST","API_URL_BROADCAST_LIVE_QUIZ_AFTER_LIST","API_URL_BROADCAST_LIVE_QUIZ_AFTER_DELETE","API_URL_BROADCAST_LIVE_QUIZ_AFTER_USER_REPORT","API_URL_BROADCAST_LIVE_CHAT_AFTER_LIST","API_URL_BROADCAST_LIVE_POLL_AFTER_INFO","API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_LIST","API_URL_BROADCAST_LIVE_POLL_AFTER_WITH_USER_INFO","API_URL_BROADCAST_LIVE_VOTE_AFTER_INFO","API_URL_BROADCAST_LIVE_END_USER_INFO","API_URL_GET_MYPAGE_BROADCAST_LIST","API_URL_BROADCAST_LIVE_DELETE","API_URL_GET_MEMBER_INFO","API_URL_UPDATE_MEMBER_IMAGE","API_URL_UPDATE_MYPAGE_MEMBER","API_URL_UPDATE_MYPAGE_PASSWORD","API_URL_UPDATE_MYPAGE_OUT","Authorization","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","attrs","model","callback","$$v","passDialogShow","expression","on","$event","preventDefault","validate","apply","arguments","_v","ref","userPass","_e","staticRenderFns","name","props","watch","modelOpen","methods","articelView","apiService","component","VBtn"],"sourceRoot":""}